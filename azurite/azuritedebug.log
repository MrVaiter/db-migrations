2023-08-14T16:02:34.362Z 	 info: Azurite Blob service is starting on 127.0.0.1:10000
2023-08-14T16:02:34.363Z 	 info: AccountDataStore:init() Refresh accounts from environment variable AZURITE_ACCOUNTS with value undefined
2023-08-14T16:02:34.363Z 	 info: AccountDataStore:init() Fallback to default emulator account devstoreaccount1.
2023-08-14T16:02:34.372Z 	 info: BlobGCManager:start() Starting BlobGCManager. Set status to Initializing.
2023-08-14T16:02:34.372Z 	 info: BlobGCManager:start() Trigger mark and sweep loop. Set status to Running.
2023-08-14T16:02:34.372Z 	 info: BlobGCManager:markSweepLoop() Start next mark and sweep.
2023-08-14T16:02:34.373Z 	 info: BlobGCManager:markSweep() Get all extents.
2023-08-14T16:02:34.373Z 	 info: BlobGCManager:start() BlobGCManager successfully started.
2023-08-14T16:02:34.375Z 	 info: BlobGCManager:markSweep() Got 0 extents.
2023-08-14T16:02:34.375Z 	 info: BlobGCManager:markSweep() Get referred extents.
2023-08-14T16:02:34.375Z 	 info: BlobGCManager:markSweep() Got referred extents, unreferenced extents count is 0.
2023-08-14T16:02:34.375Z 	 info: BlobGCManager:markSweepLoop() Mark and sweep finished, taken 2ms.
2023-08-14T16:02:34.375Z 	 info: BlobGCManager:markSweepLoop() Sleep for 600000ms.
2023-08-14T16:02:34.376Z 	 info: Azurite Blob service successfully listens on http://127.0.0.1:10000
2023-08-14T16:02:34.377Z 	 info: Azurite Queue service is starting on 127.0.0.1:10001
2023-08-14T16:02:34.377Z 	 info: AccountDataStore:init() Refresh accounts from environment variable AZURITE_ACCOUNTS with value undefined
2023-08-14T16:02:34.377Z 	 info: AccountDataStore:init() Fallback to default emulator account devstoreaccount1.
2023-08-14T16:02:34.380Z 	 info: QueueGCManager:start() Starting QueueGCManager, set status to Initializing
2023-08-14T16:02:34.380Z 	 info: QueueGCManager:start() Trigger mark and sweep loop, set status to Running.
2023-08-14T16:02:34.380Z 	 info: QueueGCManager:markSweepLoop() Start new mark and sweep.
2023-08-14T16:02:34.380Z 	 info: QueueGCManger:markSweep() Get all extents.
2023-08-14T16:02:34.380Z 	 info: QueueGCManager:start() QueueGCManager successfully started.
2023-08-14T16:02:34.381Z 	 info: QueueGCManager:marksweep() Get 0 extents.
2023-08-14T16:02:34.381Z 	 info: QueueGCManager:markSweep() Get referred extents, then remove from allExtents.
2023-08-14T16:02:34.381Z 	 info: QueueGCManager:markSweep() Got referred extents, unreferenced extents count is 0.
2023-08-14T16:02:34.381Z 	 info: QueueGCManager:markSweepLoop() Mark and sweep finished, take 1ms.
2023-08-14T16:02:34.381Z 	 info: QueueGCManager:markSweepLoop() Sleep for 60000
2023-08-14T16:02:34.381Z 	 info: Azurite Queue service successfully listens on http://127.0.0.1:10001
2023-08-14T16:02:34.381Z 	 info: Azurite Table service is starting on 127.0.0.1:10002
2023-08-14T16:02:34.381Z 	 info: AccountDataStore:init() Refresh accounts from environment variable AZURITE_ACCOUNTS with value undefined
2023-08-14T16:02:34.381Z 	 info: AccountDataStore:init() Fallback to default emulator account devstoreaccount1.
2023-08-14T16:02:34.384Z 	 info: Azurite Table service successfully listens on http://127.0.0.1:10002
2023-08-14T16:03:18.880Z 514edb60-c7ee-4c6e-a86f-42c487fac091 info: BlobStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/ RequestHeaders:{"host":"127.0.0.1:10000","connection":"keep-alive","sec-ch-ua":"\"Not/A)Brand\";v=\"99\", \"Opera\";v=\"101\", \"Chromium\";v=\"115\"","sec-ch-ua-mobile":"?0","sec-ch-ua-platform":"\"Linux\"","upgrade-insecure-requests":"1","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36 OPR/101.0.0.0","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7","sec-fetch-site":"none","sec-fetch-mode":"navigate","sec-fetch-user":"?1","sec-fetch-dest":"document","accept-encoding":"gzip, deflate, br","accept-language":"uk,en-US;q=0.9,en;q=0.8","cookie":"PGADMIN_LANGUAGE=en"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:03:18.884Z 514edb60-c7ee-4c6e-a86f-42c487fac091 error: BlobStorageContextMiddleware: BlobStorageContextMiddleware: Value for one of the query parameters specified in the request URI is invalid.
2023-08-14T16:03:18.884Z 514edb60-c7ee-4c6e-a86f-42c487fac091 error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:03:18.884Z 514edb60-c7ee-4c6e-a86f-42c487fac091 error: ErrorMiddleware: ErrorName=StorageError ErrorMessage=Value for one of the query parameters specified in the request URI is invalid.  ErrorHTTPStatusCode=400 ErrorHTTPStatusMessage=Value for one of the query parameters specified in the request URI is invalid. ErrorHTTPHeaders={"x-ms-error-code":"InvalidQueryParameterValue","x-ms-request-id":"514edb60-c7ee-4c6e-a86f-42c487fac091"} ErrorHTTPBody="<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>InvalidQueryParameterValue</Code>\n  <Message>Value for one of the query parameters specified in the request URI is invalid.\nRequestId:514edb60-c7ee-4c6e-a86f-42c487fac091\nTime:2023-08-14T16:03:18.880Z</Message>\n</Error>" ErrorStack="StorageError: Value for one of the query parameters specified in the request URI is invalid.\n    at StorageErrorFactory.getInvalidQueryParameterValue (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/errors/StorageErrorFactory.js:45:16)\n    at blobStorageContextMiddleware (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/middlewares/blobStorageContext.middleware.js:123:60)\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/middlewares/blobStorageContext.middleware.js:15:16\n    at Layer.handle [as handle_request] (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:328:13)\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:280:10)\n    at expressInit (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/middleware/init.js:40:5)\n    at Layer.handle [as handle_request] (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/layer.js:95:5)"
2023-08-14T16:03:18.885Z 514edb60-c7ee-4c6e-a86f-42c487fac091 error: ErrorMiddleware: Set HTTP code: 400
2023-08-14T16:03:18.885Z 514edb60-c7ee-4c6e-a86f-42c487fac091 error: ErrorMiddleware: Set HTTP status message: Value for one of the query parameters specified in the request URI is invalid.
2023-08-14T16:03:18.885Z 514edb60-c7ee-4c6e-a86f-42c487fac091 error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=InvalidQueryParameterValue
2023-08-14T16:03:18.885Z 514edb60-c7ee-4c6e-a86f-42c487fac091 error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=514edb60-c7ee-4c6e-a86f-42c487fac091
2023-08-14T16:03:18.885Z 514edb60-c7ee-4c6e-a86f-42c487fac091 error: ErrorMiddleware: Set content type: application/xml
2023-08-14T16:03:18.885Z 514edb60-c7ee-4c6e-a86f-42c487fac091 error: ErrorMiddleware: Set HTTP body: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>InvalidQueryParameterValue</Code>\n  <Message>Value for one of the query parameters specified in the request URI is invalid.\nRequestId:514edb60-c7ee-4c6e-a86f-42c487fac091\nTime:2023-08-14T16:03:18.880Z</Message>\n</Error>"
2023-08-14T16:03:18.886Z 514edb60-c7ee-4c6e-a86f-42c487fac091 info: EndMiddleware: End response. TotalTimeInMS=6 StatusCode=400 StatusMessage=Value for one of the query parameters specified in the request URI is invalid. Headers={"server":"Azurite-Blob/3.25.1","x-ms-error-code":"InvalidQueryParameterValue","x-ms-request-id":"514edb60-c7ee-4c6e-a86f-42c487fac091","content-type":"application/xml"}
2023-08-14T16:03:18.971Z 971d06c8-8022-4797-9637-c64b9bf4bb96 info: BlobStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/favicon.ico RequestHeaders:{"host":"127.0.0.1:10000","connection":"keep-alive","sec-ch-ua":"\"Not/A)Brand\";v=\"99\", \"Opera\";v=\"101\", \"Chromium\";v=\"115\"","sec-ch-ua-mobile":"?0","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36 OPR/101.0.0.0","sec-ch-ua-platform":"\"Linux\"","accept":"image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8","sec-fetch-site":"same-origin","sec-fetch-mode":"no-cors","sec-fetch-dest":"image","referer":"http://127.0.0.1:10000/","accept-encoding":"gzip, deflate, br","accept-language":"uk,en-US;q=0.9,en;q=0.8","cookie":"PGADMIN_LANGUAGE=en"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:03:18.971Z 971d06c8-8022-4797-9637-c64b9bf4bb96 info: BlobStorageContextMiddleware: Account=favicon.ico Container=undefined Blob=
2023-08-14T16:03:18.971Z 971d06c8-8022-4797-9637-c64b9bf4bb96 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:03:18.973Z 971d06c8-8022-4797-9637-c64b9bf4bb96 error: DispatchMiddleware: Incoming URL doesn't match any of swagger defined request patterns.
2023-08-14T16:03:18.973Z 971d06c8-8022-4797-9637-c64b9bf4bb96 error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:03:18.973Z 971d06c8-8022-4797-9637-c64b9bf4bb96 error: ErrorMiddleware: ErrorName=UnsupportedRequestError ErrorMessage=Incoming URL doesn't match any of swagger defined request patterns.  ErrorHTTPStatusCode=400 ErrorHTTPStatusMessage=undefined ErrorHTTPHeaders=undefined ErrorHTTPBody=undefined ErrorStack="UnsupportedRequestError: Incoming URL doesn't match any of swagger defined request patterns.\n    at dispatchMiddleware (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/generated/middleware/dispatch.middleware.js:41:30)\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/generated/ExpressMiddlewareFactory.js:50:47\n    at Layer.handle [as handle_request] (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:328:13)\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:280:10)\n    at blobStorageContextMiddleware (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/middlewares/blobStorageContext.middleware.js:133:5)\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/middlewares/blobStorageContext.middleware.js:15:16\n    at Layer.handle [as handle_request] (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/layer.js:95:5)"
2023-08-14T16:03:18.973Z 971d06c8-8022-4797-9637-c64b9bf4bb96 error: ErrorMiddleware: Set HTTP code: 400
2023-08-14T16:03:18.973Z 971d06c8-8022-4797-9637-c64b9bf4bb96 error: ErrorMiddleware: Set HTTP body: undefined
2023-08-14T16:03:18.973Z 971d06c8-8022-4797-9637-c64b9bf4bb96 info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=400 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1"}
2023-08-14T16:03:34.362Z 	 info: AccountDataStore:init() Refresh accounts from environment variable AZURITE_ACCOUNTS with value undefined
2023-08-14T16:03:34.363Z 	 info: AccountDataStore:init() Fallback to default emulator account devstoreaccount1.
2023-08-14T16:03:34.377Z 	 info: AccountDataStore:init() Refresh accounts from environment variable AZURITE_ACCOUNTS with value undefined
2023-08-14T16:03:34.377Z 	 info: AccountDataStore:init() Fallback to default emulator account devstoreaccount1.
2023-08-14T16:03:34.380Z 	 info: QueueGCManager:markSweepLoop() Start new mark and sweep.
2023-08-14T16:03:34.380Z 	 info: QueueGCManger:markSweep() Get all extents.
2023-08-14T16:03:34.381Z 	 info: QueueGCManager:marksweep() Get 0 extents.
2023-08-14T16:03:34.381Z 	 info: QueueGCManager:markSweep() Get referred extents, then remove from allExtents.
2023-08-14T16:03:34.381Z 	 info: QueueGCManager:markSweep() Got referred extents, unreferenced extents count is 0.
2023-08-14T16:03:34.381Z 	 info: QueueGCManager:markSweepLoop() Mark and sweep finished, take 1ms.
2023-08-14T16:03:34.381Z 	 info: QueueGCManager:markSweepLoop() Sleep for 60000
2023-08-14T16:03:34.382Z 	 info: AccountDataStore:init() Refresh accounts from environment variable AZURITE_ACCOUNTS with value undefined
2023-08-14T16:03:34.382Z 	 info: AccountDataStore:init() Fallback to default emulator account devstoreaccount1.
2023-08-14T16:04:05.967Z 56463bdf-3efa-490f-a592-b711e02aa352 info: BlobStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1?comp=properties&restype=account RequestHeaders:{"host":"127.0.0.1:10000","connection":"keep-alive","x-ms-version":"2019-07-07","accept":"application/xml","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-storageblob/12.12.0 (NODE-VERSION v18.15.0; Linux 6.2.0-26-generic)","x-ms-client-request-id":"2b68d8f8-81ce-497e-a094-cbaf2a63b731","x-ms-date":"Mon, 14 Aug 2023 16:04:05 GMT","authorization":"SharedKey devstoreaccount1:66NkWKDQmt1AUdtFDjMHT32HjqrJx0y94bw+UjqPmTQ=","accept-language":"*","sec-fetch-mode":"cors","accept-encoding":"gzip, deflate"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:05.967Z 56463bdf-3efa-490f-a592-b711e02aa352 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=undefined Blob=
2023-08-14T16:04:05.967Z 56463bdf-3efa-490f-a592-b711e02aa352 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:05.968Z 56463bdf-3efa-490f-a592-b711e02aa352 info: DispatchMiddleware: Operation=Service_GetAccountInfo
2023-08-14T16:04:05.968Z 56463bdf-3efa-490f-a592-b711e02aa352 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:05.968Z 56463bdf-3efa-490f-a592-b711e02aa352 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:05.968Z 56463bdf-3efa-490f-a592-b711e02aa352 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:05.968Z 56463bdf-3efa-490f-a592-b711e02aa352 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: undefined, blob: 
2023-08-14T16:04:05.968Z 56463bdf-3efa-490f-a592-b711e02aa352 info: PublicAccessAuthenticator:validate() Skip public access authentication. Container name is undefined.
2023-08-14T16:04:05.969Z 56463bdf-3efa-490f-a592-b711e02aa352 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:05.979Z 56463bdf-3efa-490f-a592-b711e02aa352 info: BlobSharedKeyAuthenticator:validate() [STRING TO SIGN]:"GET\n\n\n\n\n\n\n\n\n\n\n\nx-ms-client-request-id:2b68d8f8-81ce-497e-a094-cbaf2a63b731\nx-ms-date:Mon, 14 Aug 2023 16:04:05 GMT\nx-ms-version:2019-07-07\n/devstoreaccount1/devstoreaccount1\ncomp:properties\nrestype:account"
2023-08-14T16:04:05.980Z 56463bdf-3efa-490f-a592-b711e02aa352 info: BlobSharedKeyAuthenticator:validate() Calculated authentication header based on key1: SharedKey devstoreaccount1:66NkWKDQmt1AUdtFDjMHT32HjqrJx0y94bw+UjqPmTQ=
2023-08-14T16:04:05.980Z 56463bdf-3efa-490f-a592-b711e02aa352 info: BlobSharedKeyAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:05.981Z 56463bdf-3efa-490f-a592-b711e02aa352 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:05.982Z 56463bdf-3efa-490f-a592-b711e02aa352 info: HandlerMiddleware: DeserializedParameters={"restype":"account","comp":"properties","version":"2019-07-07"}
2023-08-14T16:04:05.982Z 56463bdf-3efa-490f-a592-b711e02aa352 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:05.983Z 56463bdf-3efa-490f-a592-b711e02aa352 info: EndMiddleware: End response. TotalTimeInMS=16 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","x-ms-client-request-id":"2b68d8f8-81ce-497e-a094-cbaf2a63b731","x-ms-request-id":"56463bdf-3efa-490f-a592-b711e02aa352","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:04:05 GMT","x-ms-sku-name":"Standard_RAGRS","x-ms-account-kind":"StorageV2"}
2023-08-14T16:04:05.997Z 9d38d153-9301-4779-b5b6-6bc5d2a0c96c info: BlobStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1?comp=list&include=metadata RequestHeaders:{"host":"127.0.0.1:10000","connection":"keep-alive","x-ms-version":"2019-07-07","accept":"application/xml","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-storageblob/12.12.0 (NODE-VERSION v18.15.0; Linux 6.2.0-26-generic)","x-ms-client-request-id":"f48ddcd4-fe3c-40bf-b94f-771e4d54e16c","x-ms-date":"Mon, 14 Aug 2023 16:04:05 GMT","authorization":"SharedKey devstoreaccount1:sZKNxMygs2EFo1/LAS6VpNx0kzBuThLFBprmOIA8YNY=","accept-language":"*","sec-fetch-mode":"cors","accept-encoding":"gzip, deflate"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:05.997Z 9d38d153-9301-4779-b5b6-6bc5d2a0c96c info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=undefined Blob=
2023-08-14T16:04:05.997Z 9d38d153-9301-4779-b5b6-6bc5d2a0c96c verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:05.998Z 9d38d153-9301-4779-b5b6-6bc5d2a0c96c info: DispatchMiddleware: Operation=Service_ListContainersSegment
2023-08-14T16:04:05.998Z 9d38d153-9301-4779-b5b6-6bc5d2a0c96c verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:05.998Z 9d38d153-9301-4779-b5b6-6bc5d2a0c96c info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:05.998Z 9d38d153-9301-4779-b5b6-6bc5d2a0c96c debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:05.998Z 9d38d153-9301-4779-b5b6-6bc5d2a0c96c debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: undefined, blob: 
2023-08-14T16:04:05.998Z 9d38d153-9301-4779-b5b6-6bc5d2a0c96c info: PublicAccessAuthenticator:validate() Skip public access authentication. Container name is undefined.
2023-08-14T16:04:05.998Z 9d38d153-9301-4779-b5b6-6bc5d2a0c96c info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:05.998Z 9d38d153-9301-4779-b5b6-6bc5d2a0c96c info: BlobSharedKeyAuthenticator:validate() [STRING TO SIGN]:"GET\n\n\n\n\n\n\n\n\n\n\n\nx-ms-client-request-id:f48ddcd4-fe3c-40bf-b94f-771e4d54e16c\nx-ms-date:Mon, 14 Aug 2023 16:04:05 GMT\nx-ms-version:2019-07-07\n/devstoreaccount1/devstoreaccount1\ncomp:list\ninclude:metadata"
2023-08-14T16:04:05.998Z 9d38d153-9301-4779-b5b6-6bc5d2a0c96c info: BlobSharedKeyAuthenticator:validate() Calculated authentication header based on key1: SharedKey devstoreaccount1:sZKNxMygs2EFo1/LAS6VpNx0kzBuThLFBprmOIA8YNY=
2023-08-14T16:04:05.998Z 9d38d153-9301-4779-b5b6-6bc5d2a0c96c info: BlobSharedKeyAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:05.998Z 9d38d153-9301-4779-b5b6-6bc5d2a0c96c verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:05.998Z 9d38d153-9301-4779-b5b6-6bc5d2a0c96c info: HandlerMiddleware: DeserializedParameters={"options":{"include":["metadata"],"requestId":"f48ddcd4-fe3c-40bf-b94f-771e4d54e16c"},"comp":"list","version":"2019-07-07"}
2023-08-14T16:04:05.999Z 9d38d153-9301-4779-b5b6-6bc5d2a0c96c verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:06.000Z 9d38d153-9301-4779-b5b6-6bc5d2a0c96c debug: Serializer: Raw response body string is <?xml version="1.0" encoding="UTF-8" standalone="yes"?><EnumerationResults ServiceEndpoint="http://127.0.0.1:10000/devstoreaccount1"><Prefix/><MaxResults>5000</MaxResults><Containers/><NextMarker/></EnumerationResults>
2023-08-14T16:04:06.000Z 9d38d153-9301-4779-b5b6-6bc5d2a0c96c info: Serializer: Start returning stream body.
2023-08-14T16:04:06.000Z 9d38d153-9301-4779-b5b6-6bc5d2a0c96c info: EndMiddleware: End response. TotalTimeInMS=3 StatusCode=200 StatusMessage=OK Headers={"server":"Azurite-Blob/3.25.1","x-ms-client-request-id":"f48ddcd4-fe3c-40bf-b94f-771e4d54e16c","x-ms-request-id":"9d38d153-9301-4779-b5b6-6bc5d2a0c96c","x-ms-version":"2023-01-03","content-type":"application/xml"}
2023-08-14T16:04:06.001Z 0e74165b-52c7-4188-ba63-7831cf8275c8 info: BlobStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1?comp=list&include=metadata&timeout=30 RequestHeaders:{"host":"127.0.0.1:10000","connection":"keep-alive","x-ms-version":"2019-07-07","accept":"application/xml","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-storagequeue/12.6.0 (NODE-VERSION v18.15.0; Linux 6.2.0-26-generic)","x-ms-client-request-id":"8c9f4608-519b-4286-a33e-67560957faec","x-ms-date":"Mon, 14 Aug 2023 16:04:05 GMT","authorization":"SharedKey devstoreaccount1:bF3/LdMGMF2sbWzOIOYGrks5LWdx7rjWj7YX5orkE00=","accept-language":"*","sec-fetch-mode":"cors","accept-encoding":"gzip, deflate"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:06.001Z 0e74165b-52c7-4188-ba63-7831cf8275c8 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=undefined Blob=
2023-08-14T16:04:06.001Z 0e74165b-52c7-4188-ba63-7831cf8275c8 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:06.001Z 0e74165b-52c7-4188-ba63-7831cf8275c8 info: DispatchMiddleware: Operation=Service_ListContainersSegment
2023-08-14T16:04:06.001Z 0e74165b-52c7-4188-ba63-7831cf8275c8 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:06.001Z 0e74165b-52c7-4188-ba63-7831cf8275c8 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:06.002Z 0e74165b-52c7-4188-ba63-7831cf8275c8 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:06.002Z 0e74165b-52c7-4188-ba63-7831cf8275c8 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: undefined, blob: 
2023-08-14T16:04:06.002Z 0e74165b-52c7-4188-ba63-7831cf8275c8 info: PublicAccessAuthenticator:validate() Skip public access authentication. Container name is undefined.
2023-08-14T16:04:06.002Z 0e74165b-52c7-4188-ba63-7831cf8275c8 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:06.002Z 0e74165b-52c7-4188-ba63-7831cf8275c8 info: BlobSharedKeyAuthenticator:validate() [STRING TO SIGN]:"GET\n\n\n\n\n\n\n\n\n\n\n\nx-ms-client-request-id:8c9f4608-519b-4286-a33e-67560957faec\nx-ms-date:Mon, 14 Aug 2023 16:04:05 GMT\nx-ms-version:2019-07-07\n/devstoreaccount1/devstoreaccount1\ncomp:list\ninclude:metadata\ntimeout:30"
2023-08-14T16:04:06.002Z 0e74165b-52c7-4188-ba63-7831cf8275c8 info: BlobSharedKeyAuthenticator:validate() Calculated authentication header based on key1: SharedKey devstoreaccount1:bF3/LdMGMF2sbWzOIOYGrks5LWdx7rjWj7YX5orkE00=
2023-08-14T16:04:06.002Z 0e74165b-52c7-4188-ba63-7831cf8275c8 info: BlobSharedKeyAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:06.002Z 0e74165b-52c7-4188-ba63-7831cf8275c8 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:06.002Z 0e74165b-52c7-4188-ba63-7831cf8275c8 info: HandlerMiddleware: DeserializedParameters={"options":{"include":["metadata"],"timeout":30,"requestId":"8c9f4608-519b-4286-a33e-67560957faec"},"comp":"list","version":"2019-07-07"}
2023-08-14T16:04:06.002Z 0e74165b-52c7-4188-ba63-7831cf8275c8 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:06.002Z 0e74165b-52c7-4188-ba63-7831cf8275c8 debug: Serializer: Raw response body string is <?xml version="1.0" encoding="UTF-8" standalone="yes"?><EnumerationResults ServiceEndpoint="http://127.0.0.1:10000/devstoreaccount1"><Prefix/><MaxResults>5000</MaxResults><Containers/><NextMarker/></EnumerationResults>
2023-08-14T16:04:06.002Z 0e74165b-52c7-4188-ba63-7831cf8275c8 info: Serializer: Start returning stream body.
2023-08-14T16:04:06.003Z 0e74165b-52c7-4188-ba63-7831cf8275c8 info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=200 StatusMessage=OK Headers={"server":"Azurite-Blob/3.25.1","x-ms-client-request-id":"8c9f4608-519b-4286-a33e-67560957faec","x-ms-request-id":"0e74165b-52c7-4188-ba63-7831cf8275c8","x-ms-version":"2023-01-03","content-type":"application/xml"}
2023-08-14T16:04:06.006Z 47204515-4738-48bc-b0e2-695e62b41c79 info: BlobStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1/%24logs?restype=container RequestHeaders:{"host":"127.0.0.1:10000","connection":"keep-alive","x-ms-version":"2019-07-07","accept":"application/xml","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-storageblob/12.12.0 (NODE-VERSION v18.15.0; Linux 6.2.0-26-generic)","x-ms-client-request-id":"e0cb7ac2-9e12-45f9-94c7-190325deec1b","x-ms-date":"Mon, 14 Aug 2023 16:04:06 GMT","authorization":"SharedKey devstoreaccount1:lVdTqB4zyNJZ5s2FSwojIsGgwwNJLFa6xT1ncSDS02I=","accept-language":"*","sec-fetch-mode":"cors","accept-encoding":"gzip, deflate"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:06.006Z 47204515-4738-48bc-b0e2-695e62b41c79 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=$logs Blob=
2023-08-14T16:04:06.006Z 47204515-4738-48bc-b0e2-695e62b41c79 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:06.007Z 47204515-4738-48bc-b0e2-695e62b41c79 info: DispatchMiddleware: Operation=Container_GetProperties
2023-08-14T16:04:06.007Z 47204515-4738-48bc-b0e2-695e62b41c79 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:06.007Z 47204515-4738-48bc-b0e2-695e62b41c79 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:06.007Z 47204515-4738-48bc-b0e2-695e62b41c79 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:06.007Z 47204515-4738-48bc-b0e2-695e62b41c79 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: $logs, blob: 
2023-08-14T16:04:06.008Z 47204515-4738-48bc-b0e2-695e62b41c79 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container $logs
2023-08-14T16:04:06.008Z 47204515-4738-48bc-b0e2-695e62b41c79 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:06.008Z 47204515-4738-48bc-b0e2-695e62b41c79 info: BlobSharedKeyAuthenticator:validate() [STRING TO SIGN]:"GET\n\n\n\n\n\n\n\n\n\n\n\nx-ms-client-request-id:e0cb7ac2-9e12-45f9-94c7-190325deec1b\nx-ms-date:Mon, 14 Aug 2023 16:04:06 GMT\nx-ms-version:2019-07-07\n/devstoreaccount1/devstoreaccount1/%24logs\nrestype:container"
2023-08-14T16:04:06.008Z 47204515-4738-48bc-b0e2-695e62b41c79 info: BlobSharedKeyAuthenticator:validate() Calculated authentication header based on key1: SharedKey devstoreaccount1:lVdTqB4zyNJZ5s2FSwojIsGgwwNJLFa6xT1ncSDS02I=
2023-08-14T16:04:06.008Z 47204515-4738-48bc-b0e2-695e62b41c79 info: BlobSharedKeyAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:06.008Z 47204515-4738-48bc-b0e2-695e62b41c79 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:06.009Z 47204515-4738-48bc-b0e2-695e62b41c79 info: HandlerMiddleware: DeserializedParameters={"options":{"requestId":"e0cb7ac2-9e12-45f9-94c7-190325deec1b","leaseAccessConditions":{}},"restype":"container","version":"2019-07-07"}
2023-08-14T16:04:06.009Z 47204515-4738-48bc-b0e2-695e62b41c79 error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:06.010Z 47204515-4738-48bc-b0e2-695e62b41c79 error: ErrorMiddleware: ErrorName=StorageError ErrorMessage=The specified container does not exist.  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=The specified container does not exist. ErrorHTTPHeaders={"x-ms-error-code":"ContainerNotFound","x-ms-request-id":"47204515-4738-48bc-b0e2-695e62b41c79"} ErrorHTTPBody="<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>ContainerNotFound</Code>\n  <Message>The specified container does not exist.\nRequestId:47204515-4738-48bc-b0e2-695e62b41c79\nTime:2023-08-14T16:04:06.009Z</Message>\n</Error>" ErrorStack="StorageError: The specified container does not exist.\n    at StorageErrorFactory.getContainerNotFound (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/errors/StorageErrorFactory.js:14:16)\n    at LokiBlobMetadataStore.getContainerWithLeaseUpdated (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/persistence/LokiBlobMetadataStore.js:1964:53)\n    at LokiBlobMetadataStore.getContainerProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/persistence/LokiBlobMetadataStore.js:309:32)\n    at ContainerHandler.getProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/handlers/ContainerHandler.js:79:62)\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/generated/middleware/HandlerMiddlewareFactory.js:58:18\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/generated/ExpressMiddlewareFactory.js:78:63\n    at Layer.handle [as handle_request] (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:328:13)\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:346:12)"
2023-08-14T16:04:06.010Z 47204515-4738-48bc-b0e2-695e62b41c79 error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:06.010Z 47204515-4738-48bc-b0e2-695e62b41c79 error: ErrorMiddleware: Set HTTP status message: The specified container does not exist.
2023-08-14T16:04:06.010Z 47204515-4738-48bc-b0e2-695e62b41c79 error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=ContainerNotFound
2023-08-14T16:04:06.010Z 47204515-4738-48bc-b0e2-695e62b41c79 error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=47204515-4738-48bc-b0e2-695e62b41c79
2023-08-14T16:04:06.010Z 47204515-4738-48bc-b0e2-695e62b41c79 error: ErrorMiddleware: Set content type: application/xml
2023-08-14T16:04:06.010Z 47204515-4738-48bc-b0e2-695e62b41c79 error: ErrorMiddleware: Set HTTP body: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>ContainerNotFound</Code>\n  <Message>The specified container does not exist.\nRequestId:47204515-4738-48bc-b0e2-695e62b41c79\nTime:2023-08-14T16:04:06.009Z</Message>\n</Error>"
2023-08-14T16:04:06.010Z 47204515-4738-48bc-b0e2-695e62b41c79 info: EndMiddleware: End response. TotalTimeInMS=4 StatusCode=404 StatusMessage=The specified container does not exist. Headers={"server":"Azurite-Blob/3.25.1","x-ms-error-code":"ContainerNotFound","x-ms-request-id":"47204515-4738-48bc-b0e2-695e62b41c79","content-type":"application/xml"}
2023-08-14T16:04:06.011Z 36e59a5c-7573-484b-ad8e-ecf4069e502a info: BlobStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1/%24blobchangefeed?restype=container RequestHeaders:{"host":"127.0.0.1:10000","connection":"keep-alive","x-ms-version":"2019-07-07","accept":"application/xml","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-storageblob/12.12.0 (NODE-VERSION v18.15.0; Linux 6.2.0-26-generic)","x-ms-client-request-id":"3f086c33-8cfc-4196-b9a9-5d1bbcd28d45","x-ms-date":"Mon, 14 Aug 2023 16:04:06 GMT","authorization":"SharedKey devstoreaccount1:c1otQoirhkCEMmJKo98Tf87PH2494Es7+mTSpFEKQXM=","accept-language":"*","sec-fetch-mode":"cors","accept-encoding":"gzip, deflate"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:06.011Z 36e59a5c-7573-484b-ad8e-ecf4069e502a info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=$blobchangefeed Blob=
2023-08-14T16:04:06.011Z 36e59a5c-7573-484b-ad8e-ecf4069e502a verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:06.011Z 36e59a5c-7573-484b-ad8e-ecf4069e502a info: DispatchMiddleware: Operation=Container_GetProperties
2023-08-14T16:04:06.011Z 36e59a5c-7573-484b-ad8e-ecf4069e502a verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:06.012Z 36e59a5c-7573-484b-ad8e-ecf4069e502a info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:06.012Z 36e59a5c-7573-484b-ad8e-ecf4069e502a debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:06.012Z 36e59a5c-7573-484b-ad8e-ecf4069e502a debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: $blobchangefeed, blob: 
2023-08-14T16:04:06.012Z 36e59a5c-7573-484b-ad8e-ecf4069e502a debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container $blobchangefeed
2023-08-14T16:04:06.012Z 36e59a5c-7573-484b-ad8e-ecf4069e502a info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:06.012Z 36e59a5c-7573-484b-ad8e-ecf4069e502a info: BlobSharedKeyAuthenticator:validate() [STRING TO SIGN]:"GET\n\n\n\n\n\n\n\n\n\n\n\nx-ms-client-request-id:3f086c33-8cfc-4196-b9a9-5d1bbcd28d45\nx-ms-date:Mon, 14 Aug 2023 16:04:06 GMT\nx-ms-version:2019-07-07\n/devstoreaccount1/devstoreaccount1/%24blobchangefeed\nrestype:container"
2023-08-14T16:04:06.012Z 36e59a5c-7573-484b-ad8e-ecf4069e502a info: BlobSharedKeyAuthenticator:validate() Calculated authentication header based on key1: SharedKey devstoreaccount1:c1otQoirhkCEMmJKo98Tf87PH2494Es7+mTSpFEKQXM=
2023-08-14T16:04:06.012Z 36e59a5c-7573-484b-ad8e-ecf4069e502a info: BlobSharedKeyAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:06.012Z 36e59a5c-7573-484b-ad8e-ecf4069e502a verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:06.012Z 36e59a5c-7573-484b-ad8e-ecf4069e502a info: HandlerMiddleware: DeserializedParameters={"options":{"requestId":"3f086c33-8cfc-4196-b9a9-5d1bbcd28d45","leaseAccessConditions":{}},"restype":"container","version":"2019-07-07"}
2023-08-14T16:04:06.013Z 36e59a5c-7573-484b-ad8e-ecf4069e502a error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:06.013Z 36e59a5c-7573-484b-ad8e-ecf4069e502a error: ErrorMiddleware: ErrorName=StorageError ErrorMessage=The specified container does not exist.  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=The specified container does not exist. ErrorHTTPHeaders={"x-ms-error-code":"ContainerNotFound","x-ms-request-id":"36e59a5c-7573-484b-ad8e-ecf4069e502a"} ErrorHTTPBody="<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>ContainerNotFound</Code>\n  <Message>The specified container does not exist.\nRequestId:36e59a5c-7573-484b-ad8e-ecf4069e502a\nTime:2023-08-14T16:04:06.012Z</Message>\n</Error>" ErrorStack="StorageError: The specified container does not exist.\n    at StorageErrorFactory.getContainerNotFound (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/errors/StorageErrorFactory.js:14:16)\n    at LokiBlobMetadataStore.getContainerWithLeaseUpdated (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/persistence/LokiBlobMetadataStore.js:1964:53)\n    at LokiBlobMetadataStore.getContainerProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/persistence/LokiBlobMetadataStore.js:309:32)\n    at ContainerHandler.getProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/handlers/ContainerHandler.js:79:62)\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/generated/middleware/HandlerMiddlewareFactory.js:58:18\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/generated/ExpressMiddlewareFactory.js:78:63\n    at Layer.handle [as handle_request] (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:328:13)\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:346:12)"
2023-08-14T16:04:06.013Z 36e59a5c-7573-484b-ad8e-ecf4069e502a error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:06.013Z 36e59a5c-7573-484b-ad8e-ecf4069e502a error: ErrorMiddleware: Set HTTP status message: The specified container does not exist.
2023-08-14T16:04:06.013Z 36e59a5c-7573-484b-ad8e-ecf4069e502a error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=ContainerNotFound
2023-08-14T16:04:06.013Z 36e59a5c-7573-484b-ad8e-ecf4069e502a error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=36e59a5c-7573-484b-ad8e-ecf4069e502a
2023-08-14T16:04:06.013Z 36e59a5c-7573-484b-ad8e-ecf4069e502a error: ErrorMiddleware: Set content type: application/xml
2023-08-14T16:04:06.013Z 36e59a5c-7573-484b-ad8e-ecf4069e502a error: ErrorMiddleware: Set HTTP body: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>ContainerNotFound</Code>\n  <Message>The specified container does not exist.\nRequestId:36e59a5c-7573-484b-ad8e-ecf4069e502a\nTime:2023-08-14T16:04:06.012Z</Message>\n</Error>"
2023-08-14T16:04:06.013Z 36e59a5c-7573-484b-ad8e-ecf4069e502a info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=404 StatusMessage=The specified container does not exist. Headers={"server":"Azurite-Blob/3.25.1","x-ms-error-code":"ContainerNotFound","x-ms-request-id":"36e59a5c-7573-484b-ad8e-ecf4069e502a","content-type":"application/xml"}
2023-08-14T16:04:07.273Z 339ef08d-d781-499b-92f8-b5b84568d979 info: BlobStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1?comp=list&include=metadata RequestHeaders:{"host":"127.0.0.1:10000","connection":"keep-alive","x-ms-version":"2019-07-07","accept":"application/xml","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-storageblob/12.12.0 (NODE-VERSION v18.15.0; Linux 6.2.0-26-generic)","x-ms-client-request-id":"6c55d32f-f137-459a-a4c4-3b5613ebb511","x-ms-date":"Mon, 14 Aug 2023 16:04:07 GMT","authorization":"SharedKey devstoreaccount1:/iHdsLe2roGefKhCIsHNGXNh+b3kq+k4I5Xn7GyhImc=","accept-language":"*","sec-fetch-mode":"cors","accept-encoding":"gzip, deflate"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:07.273Z 339ef08d-d781-499b-92f8-b5b84568d979 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=undefined Blob=
2023-08-14T16:04:07.273Z 339ef08d-d781-499b-92f8-b5b84568d979 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:07.273Z 339ef08d-d781-499b-92f8-b5b84568d979 info: DispatchMiddleware: Operation=Service_ListContainersSegment
2023-08-14T16:04:07.274Z 339ef08d-d781-499b-92f8-b5b84568d979 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:07.274Z 339ef08d-d781-499b-92f8-b5b84568d979 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:07.274Z 339ef08d-d781-499b-92f8-b5b84568d979 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:07.274Z 339ef08d-d781-499b-92f8-b5b84568d979 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: undefined, blob: 
2023-08-14T16:04:07.274Z 339ef08d-d781-499b-92f8-b5b84568d979 info: PublicAccessAuthenticator:validate() Skip public access authentication. Container name is undefined.
2023-08-14T16:04:07.274Z 339ef08d-d781-499b-92f8-b5b84568d979 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:07.274Z 339ef08d-d781-499b-92f8-b5b84568d979 info: BlobSharedKeyAuthenticator:validate() [STRING TO SIGN]:"GET\n\n\n\n\n\n\n\n\n\n\n\nx-ms-client-request-id:6c55d32f-f137-459a-a4c4-3b5613ebb511\nx-ms-date:Mon, 14 Aug 2023 16:04:07 GMT\nx-ms-version:2019-07-07\n/devstoreaccount1/devstoreaccount1\ncomp:list\ninclude:metadata"
2023-08-14T16:04:07.274Z 339ef08d-d781-499b-92f8-b5b84568d979 info: BlobSharedKeyAuthenticator:validate() Calculated authentication header based on key1: SharedKey devstoreaccount1:/iHdsLe2roGefKhCIsHNGXNh+b3kq+k4I5Xn7GyhImc=
2023-08-14T16:04:07.274Z 339ef08d-d781-499b-92f8-b5b84568d979 info: BlobSharedKeyAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:07.274Z 339ef08d-d781-499b-92f8-b5b84568d979 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:07.274Z 339ef08d-d781-499b-92f8-b5b84568d979 info: HandlerMiddleware: DeserializedParameters={"options":{"include":["metadata"],"requestId":"6c55d32f-f137-459a-a4c4-3b5613ebb511"},"comp":"list","version":"2019-07-07"}
2023-08-14T16:04:07.274Z 339ef08d-d781-499b-92f8-b5b84568d979 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:07.275Z 339ef08d-d781-499b-92f8-b5b84568d979 debug: Serializer: Raw response body string is <?xml version="1.0" encoding="UTF-8" standalone="yes"?><EnumerationResults ServiceEndpoint="http://127.0.0.1:10000/devstoreaccount1"><Prefix/><MaxResults>5000</MaxResults><Containers/><NextMarker/></EnumerationResults>
2023-08-14T16:04:07.275Z 339ef08d-d781-499b-92f8-b5b84568d979 info: Serializer: Start returning stream body.
2023-08-14T16:04:07.275Z 339ef08d-d781-499b-92f8-b5b84568d979 info: EndMiddleware: End response. TotalTimeInMS=3 StatusCode=200 StatusMessage=OK Headers={"server":"Azurite-Blob/3.25.1","x-ms-client-request-id":"6c55d32f-f137-459a-a4c4-3b5613ebb511","x-ms-request-id":"339ef08d-d781-499b-92f8-b5b84568d979","x-ms-version":"2023-01-03","content-type":"application/xml"}
2023-08-14T16:04:07.279Z 89f55df0-bd74-4987-802a-3d39d9455608 info: BlobStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1/%24logs?restype=container RequestHeaders:{"host":"127.0.0.1:10000","connection":"keep-alive","x-ms-version":"2019-07-07","accept":"application/xml","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-storageblob/12.12.0 (NODE-VERSION v18.15.0; Linux 6.2.0-26-generic)","x-ms-client-request-id":"e7fb9df1-1b6f-4a82-b8f0-1d7b60272ee8","x-ms-date":"Mon, 14 Aug 2023 16:04:07 GMT","authorization":"SharedKey devstoreaccount1:aEV6NQ8iYr5WjNp/R4ixolaqR63OeN37AtmsE8LZK8c=","accept-language":"*","sec-fetch-mode":"cors","accept-encoding":"gzip, deflate"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:07.279Z 89f55df0-bd74-4987-802a-3d39d9455608 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=$logs Blob=
2023-08-14T16:04:07.279Z 89f55df0-bd74-4987-802a-3d39d9455608 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:07.279Z 89f55df0-bd74-4987-802a-3d39d9455608 info: DispatchMiddleware: Operation=Container_GetProperties
2023-08-14T16:04:07.279Z 89f55df0-bd74-4987-802a-3d39d9455608 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:07.279Z 89f55df0-bd74-4987-802a-3d39d9455608 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:07.279Z 89f55df0-bd74-4987-802a-3d39d9455608 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:07.279Z 89f55df0-bd74-4987-802a-3d39d9455608 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: $logs, blob: 
2023-08-14T16:04:07.280Z 89f55df0-bd74-4987-802a-3d39d9455608 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container $logs
2023-08-14T16:04:07.280Z 89f55df0-bd74-4987-802a-3d39d9455608 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:07.280Z 89f55df0-bd74-4987-802a-3d39d9455608 info: BlobSharedKeyAuthenticator:validate() [STRING TO SIGN]:"GET\n\n\n\n\n\n\n\n\n\n\n\nx-ms-client-request-id:e7fb9df1-1b6f-4a82-b8f0-1d7b60272ee8\nx-ms-date:Mon, 14 Aug 2023 16:04:07 GMT\nx-ms-version:2019-07-07\n/devstoreaccount1/devstoreaccount1/%24logs\nrestype:container"
2023-08-14T16:04:07.280Z 89f55df0-bd74-4987-802a-3d39d9455608 info: BlobSharedKeyAuthenticator:validate() Calculated authentication header based on key1: SharedKey devstoreaccount1:aEV6NQ8iYr5WjNp/R4ixolaqR63OeN37AtmsE8LZK8c=
2023-08-14T16:04:07.280Z 89f55df0-bd74-4987-802a-3d39d9455608 info: BlobSharedKeyAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:07.280Z 89f55df0-bd74-4987-802a-3d39d9455608 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:07.280Z 89f55df0-bd74-4987-802a-3d39d9455608 info: HandlerMiddleware: DeserializedParameters={"options":{"requestId":"e7fb9df1-1b6f-4a82-b8f0-1d7b60272ee8","leaseAccessConditions":{}},"restype":"container","version":"2019-07-07"}
2023-08-14T16:04:07.280Z 89f55df0-bd74-4987-802a-3d39d9455608 error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:07.280Z 89f55df0-bd74-4987-802a-3d39d9455608 error: ErrorMiddleware: ErrorName=StorageError ErrorMessage=The specified container does not exist.  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=The specified container does not exist. ErrorHTTPHeaders={"x-ms-error-code":"ContainerNotFound","x-ms-request-id":"89f55df0-bd74-4987-802a-3d39d9455608"} ErrorHTTPBody="<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>ContainerNotFound</Code>\n  <Message>The specified container does not exist.\nRequestId:89f55df0-bd74-4987-802a-3d39d9455608\nTime:2023-08-14T16:04:07.280Z</Message>\n</Error>" ErrorStack="StorageError: The specified container does not exist.\n    at StorageErrorFactory.getContainerNotFound (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/errors/StorageErrorFactory.js:14:16)\n    at LokiBlobMetadataStore.getContainerWithLeaseUpdated (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/persistence/LokiBlobMetadataStore.js:1964:53)\n    at LokiBlobMetadataStore.getContainerProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/persistence/LokiBlobMetadataStore.js:309:32)\n    at ContainerHandler.getProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/handlers/ContainerHandler.js:79:62)\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/generated/middleware/HandlerMiddlewareFactory.js:58:18\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/generated/ExpressMiddlewareFactory.js:78:63\n    at Layer.handle [as handle_request] (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:328:13)\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:346:12)"
2023-08-14T16:04:07.280Z 89f55df0-bd74-4987-802a-3d39d9455608 error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:07.280Z 89f55df0-bd74-4987-802a-3d39d9455608 error: ErrorMiddleware: Set HTTP status message: The specified container does not exist.
2023-08-14T16:04:07.280Z 89f55df0-bd74-4987-802a-3d39d9455608 error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=ContainerNotFound
2023-08-14T16:04:07.280Z 89f55df0-bd74-4987-802a-3d39d9455608 error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=89f55df0-bd74-4987-802a-3d39d9455608
2023-08-14T16:04:07.280Z 89f55df0-bd74-4987-802a-3d39d9455608 error: ErrorMiddleware: Set content type: application/xml
2023-08-14T16:04:07.280Z 89f55df0-bd74-4987-802a-3d39d9455608 error: ErrorMiddleware: Set HTTP body: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>ContainerNotFound</Code>\n  <Message>The specified container does not exist.\nRequestId:89f55df0-bd74-4987-802a-3d39d9455608\nTime:2023-08-14T16:04:07.280Z</Message>\n</Error>"
2023-08-14T16:04:07.280Z 89f55df0-bd74-4987-802a-3d39d9455608 info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=404 StatusMessage=The specified container does not exist. Headers={"server":"Azurite-Blob/3.25.1","x-ms-error-code":"ContainerNotFound","x-ms-request-id":"89f55df0-bd74-4987-802a-3d39d9455608","content-type":"application/xml"}
2023-08-14T16:04:07.281Z 9812bab5-b7e4-4442-943f-5f1b21622079 info: BlobStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1/%24blobchangefeed?restype=container RequestHeaders:{"host":"127.0.0.1:10000","connection":"keep-alive","x-ms-version":"2019-07-07","accept":"application/xml","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-storageblob/12.12.0 (NODE-VERSION v18.15.0; Linux 6.2.0-26-generic)","x-ms-client-request-id":"2e62c8a2-3cfb-4b19-9a73-c3e096062e29","x-ms-date":"Mon, 14 Aug 2023 16:04:07 GMT","authorization":"SharedKey devstoreaccount1:xDJMWcNCbB+On0iXwclDfRtro38R5LbUORvXnshug20=","accept-language":"*","sec-fetch-mode":"cors","accept-encoding":"gzip, deflate"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:07.281Z 9812bab5-b7e4-4442-943f-5f1b21622079 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=$blobchangefeed Blob=
2023-08-14T16:04:07.281Z 9812bab5-b7e4-4442-943f-5f1b21622079 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:07.281Z 9812bab5-b7e4-4442-943f-5f1b21622079 info: DispatchMiddleware: Operation=Container_GetProperties
2023-08-14T16:04:07.282Z 9812bab5-b7e4-4442-943f-5f1b21622079 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:07.282Z 9812bab5-b7e4-4442-943f-5f1b21622079 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:07.282Z 9812bab5-b7e4-4442-943f-5f1b21622079 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:07.282Z 9812bab5-b7e4-4442-943f-5f1b21622079 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: $blobchangefeed, blob: 
2023-08-14T16:04:07.282Z 9812bab5-b7e4-4442-943f-5f1b21622079 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container $blobchangefeed
2023-08-14T16:04:07.282Z 9812bab5-b7e4-4442-943f-5f1b21622079 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:07.282Z 9812bab5-b7e4-4442-943f-5f1b21622079 info: BlobSharedKeyAuthenticator:validate() [STRING TO SIGN]:"GET\n\n\n\n\n\n\n\n\n\n\n\nx-ms-client-request-id:2e62c8a2-3cfb-4b19-9a73-c3e096062e29\nx-ms-date:Mon, 14 Aug 2023 16:04:07 GMT\nx-ms-version:2019-07-07\n/devstoreaccount1/devstoreaccount1/%24blobchangefeed\nrestype:container"
2023-08-14T16:04:07.282Z 9812bab5-b7e4-4442-943f-5f1b21622079 info: BlobSharedKeyAuthenticator:validate() Calculated authentication header based on key1: SharedKey devstoreaccount1:xDJMWcNCbB+On0iXwclDfRtro38R5LbUORvXnshug20=
2023-08-14T16:04:07.282Z 9812bab5-b7e4-4442-943f-5f1b21622079 info: BlobSharedKeyAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:07.282Z 9812bab5-b7e4-4442-943f-5f1b21622079 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:07.282Z 9812bab5-b7e4-4442-943f-5f1b21622079 info: HandlerMiddleware: DeserializedParameters={"options":{"requestId":"2e62c8a2-3cfb-4b19-9a73-c3e096062e29","leaseAccessConditions":{}},"restype":"container","version":"2019-07-07"}
2023-08-14T16:04:07.282Z 9812bab5-b7e4-4442-943f-5f1b21622079 error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:07.282Z 9812bab5-b7e4-4442-943f-5f1b21622079 error: ErrorMiddleware: ErrorName=StorageError ErrorMessage=The specified container does not exist.  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=The specified container does not exist. ErrorHTTPHeaders={"x-ms-error-code":"ContainerNotFound","x-ms-request-id":"9812bab5-b7e4-4442-943f-5f1b21622079"} ErrorHTTPBody="<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>ContainerNotFound</Code>\n  <Message>The specified container does not exist.\nRequestId:9812bab5-b7e4-4442-943f-5f1b21622079\nTime:2023-08-14T16:04:07.282Z</Message>\n</Error>" ErrorStack="StorageError: The specified container does not exist.\n    at StorageErrorFactory.getContainerNotFound (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/errors/StorageErrorFactory.js:14:16)\n    at LokiBlobMetadataStore.getContainerWithLeaseUpdated (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/persistence/LokiBlobMetadataStore.js:1964:53)\n    at LokiBlobMetadataStore.getContainerProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/persistence/LokiBlobMetadataStore.js:309:32)\n    at ContainerHandler.getProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/handlers/ContainerHandler.js:79:62)\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/generated/middleware/HandlerMiddlewareFactory.js:58:18\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/generated/ExpressMiddlewareFactory.js:78:63\n    at Layer.handle [as handle_request] (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:328:13)\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:346:12)"
2023-08-14T16:04:07.282Z 9812bab5-b7e4-4442-943f-5f1b21622079 error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:07.282Z 9812bab5-b7e4-4442-943f-5f1b21622079 error: ErrorMiddleware: Set HTTP status message: The specified container does not exist.
2023-08-14T16:04:07.283Z 9812bab5-b7e4-4442-943f-5f1b21622079 error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=ContainerNotFound
2023-08-14T16:04:07.283Z 9812bab5-b7e4-4442-943f-5f1b21622079 error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=9812bab5-b7e4-4442-943f-5f1b21622079
2023-08-14T16:04:07.283Z 9812bab5-b7e4-4442-943f-5f1b21622079 error: ErrorMiddleware: Set content type: application/xml
2023-08-14T16:04:07.283Z 9812bab5-b7e4-4442-943f-5f1b21622079 error: ErrorMiddleware: Set HTTP body: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>ContainerNotFound</Code>\n  <Message>The specified container does not exist.\nRequestId:9812bab5-b7e4-4442-943f-5f1b21622079\nTime:2023-08-14T16:04:07.282Z</Message>\n</Error>"
2023-08-14T16:04:07.283Z 9812bab5-b7e4-4442-943f-5f1b21622079 info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=404 StatusMessage=The specified container does not exist. Headers={"server":"Azurite-Blob/3.25.1","x-ms-error-code":"ContainerNotFound","x-ms-request-id":"9812bab5-b7e4-4442-943f-5f1b21622079","content-type":"application/xml"}
2023-08-14T16:04:07.372Z d76c81f1-6796-45de-97ce-9e4ce3668944 info: BlobStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1?restype=service&comp=properties RequestHeaders:{"host":"127.0.0.1:10000","connection":"keep-alive","x-ms-version":"2019-07-07","accept":"application/xml","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-storageblob/12.12.0 (NODE-VERSION v18.15.0; Linux 6.2.0-26-generic)","x-ms-client-request-id":"96135757-fb14-45a4-9e99-fe8a8aad1ff5","x-ms-date":"Mon, 14 Aug 2023 16:04:07 GMT","authorization":"SharedKey devstoreaccount1:JqlCfQnjbFGC/8EDtVFLA86AOPW0oo3W3i8ls1RSQOs=","accept-language":"*","sec-fetch-mode":"cors","accept-encoding":"gzip, deflate"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:07.373Z d76c81f1-6796-45de-97ce-9e4ce3668944 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=undefined Blob=
2023-08-14T16:04:07.373Z d76c81f1-6796-45de-97ce-9e4ce3668944 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:07.373Z d76c81f1-6796-45de-97ce-9e4ce3668944 info: DispatchMiddleware: Operation=Service_GetProperties
2023-08-14T16:04:07.373Z d76c81f1-6796-45de-97ce-9e4ce3668944 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:07.373Z d76c81f1-6796-45de-97ce-9e4ce3668944 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:07.373Z d76c81f1-6796-45de-97ce-9e4ce3668944 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:07.373Z d76c81f1-6796-45de-97ce-9e4ce3668944 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: undefined, blob: 
2023-08-14T16:04:07.373Z d76c81f1-6796-45de-97ce-9e4ce3668944 info: PublicAccessAuthenticator:validate() Skip public access authentication. Container name is undefined.
2023-08-14T16:04:07.373Z d76c81f1-6796-45de-97ce-9e4ce3668944 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:07.373Z d76c81f1-6796-45de-97ce-9e4ce3668944 info: BlobSharedKeyAuthenticator:validate() [STRING TO SIGN]:"GET\n\n\n\n\n\n\n\n\n\n\n\nx-ms-client-request-id:96135757-fb14-45a4-9e99-fe8a8aad1ff5\nx-ms-date:Mon, 14 Aug 2023 16:04:07 GMT\nx-ms-version:2019-07-07\n/devstoreaccount1/devstoreaccount1\ncomp:properties\nrestype:service"
2023-08-14T16:04:07.373Z d76c81f1-6796-45de-97ce-9e4ce3668944 info: BlobSharedKeyAuthenticator:validate() Calculated authentication header based on key1: SharedKey devstoreaccount1:JqlCfQnjbFGC/8EDtVFLA86AOPW0oo3W3i8ls1RSQOs=
2023-08-14T16:04:07.374Z d76c81f1-6796-45de-97ce-9e4ce3668944 info: BlobSharedKeyAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:07.374Z d76c81f1-6796-45de-97ce-9e4ce3668944 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:07.374Z d76c81f1-6796-45de-97ce-9e4ce3668944 info: HandlerMiddleware: DeserializedParameters={"options":{"requestId":"96135757-fb14-45a4-9e99-fe8a8aad1ff5"},"restype":"service","comp":"properties","version":"2019-07-07"}
2023-08-14T16:04:07.374Z d76c81f1-6796-45de-97ce-9e4ce3668944 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:07.375Z d76c81f1-6796-45de-97ce-9e4ce3668944 debug: Serializer: Raw response body string is <?xml version="1.0" encoding="UTF-8" standalone="yes"?><StorageServiceProperties><Logging><Version>1.0</Version><Delete>true</Delete><Read>true</Read><Write>true</Write><RetentionPolicy><Enabled>false</Enabled></RetentionPolicy></Logging><HourMetrics><Version>1.0</Version><Enabled>false</Enabled><RetentionPolicy><Enabled>false</Enabled></RetentionPolicy></HourMetrics><MinuteMetrics><Version>1.0</Version><Enabled>false</Enabled><RetentionPolicy><Enabled>false</Enabled></RetentionPolicy></MinuteMetrics><Cors/><DefaultServiceVersion>2023-01-03</DefaultServiceVersion><StaticWebsite><Enabled>false</Enabled></StaticWebsite></StorageServiceProperties>
2023-08-14T16:04:07.375Z d76c81f1-6796-45de-97ce-9e4ce3668944 info: Serializer: Start returning stream body.
2023-08-14T16:04:07.375Z d76c81f1-6796-45de-97ce-9e4ce3668944 info: EndMiddleware: End response. TotalTimeInMS=3 StatusCode=200 StatusMessage=OK Headers={"server":"Azurite-Blob/3.25.1","x-ms-client-request-id":"96135757-fb14-45a4-9e99-fe8a8aad1ff5","x-ms-request-id":"d76c81f1-6796-45de-97ce-9e4ce3668944","x-ms-version":"2023-01-03","content-type":"application/xml"}
2023-08-14T16:04:09.688Z 3689ff65-a511-4367-aafc-d3d994ab3eed info: QueueStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1?comp=list&include=metadata&timeout=30 RequestHeaders:{"host":"127.0.0.1:10001","connection":"keep-alive","x-ms-version":"2019-07-07","accept":"application/xml","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-storagequeue/12.6.0 (NODE-VERSION v18.15.0; Linux 6.2.0-26-generic)","x-ms-client-request-id":"cf33ea1f-593b-41d1-817e-02eb925bfef3","x-ms-date":"Mon, 14 Aug 2023 16:04:09 GMT","authorization":"SharedKey devstoreaccount1:Q4qRaAkhM6nKWFyk1KZgyIAUPGWRizdZtfp6Mi8unR0=","accept-language":"*","sec-fetch-mode":"cors","accept-encoding":"gzip, deflate"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:09.688Z 3689ff65-a511-4367-aafc-d3d994ab3eed info: QueueStorageContextMiddleware: Account=devstoreaccount1 Queue=undefined Message=undefined MessageId=undefined
2023-08-14T16:04:09.689Z 3689ff65-a511-4367-aafc-d3d994ab3eed verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:09.689Z 3689ff65-a511-4367-aafc-d3d994ab3eed info: DispatchMiddleware: Operation=Service_ListQueuesSegment
2023-08-14T16:04:09.689Z 3689ff65-a511-4367-aafc-d3d994ab3eed verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:09.690Z 3689ff65-a511-4367-aafc-d3d994ab3eed info: QueueSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:09.690Z 3689ff65-a511-4367-aafc-d3d994ab3eed info: QueueSharedKeyAuthenticator:validate() [STRING TO SIGN]:"GET\n\n\n\n\n\n\n\n\n\n\n\nx-ms-client-request-id:cf33ea1f-593b-41d1-817e-02eb925bfef3\nx-ms-date:Mon, 14 Aug 2023 16:04:09 GMT\nx-ms-version:2019-07-07\n/devstoreaccount1/devstoreaccount1\ncomp:list\ninclude:metadata\ntimeout:30"
2023-08-14T16:04:09.691Z 3689ff65-a511-4367-aafc-d3d994ab3eed info: QueueSharedKeyAuthenticator:validate() Calculated authentication header based on key1: devstoreaccount1:Q4qRaAkhM6nKWFyk1KZgyIAUPGWRizdZtfp6Mi8unR0=
2023-08-14T16:04:09.691Z 3689ff65-a511-4367-aafc-d3d994ab3eed info: QueueSharedKeyAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:09.691Z 3689ff65-a511-4367-aafc-d3d994ab3eed verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:09.692Z 3689ff65-a511-4367-aafc-d3d994ab3eed info: HandlerMiddleware: DeserializedParameters={"options":{"include":["metadata"],"timeout":30,"requestId":"cf33ea1f-593b-41d1-817e-02eb925bfef3"},"comp":"list","version":"2019-07-07"}
2023-08-14T16:04:09.693Z 3689ff65-a511-4367-aafc-d3d994ab3eed verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:09.694Z 3689ff65-a511-4367-aafc-d3d994ab3eed debug: Serializer: Raw response body string is <?xml version="1.0" encoding="UTF-8" standalone="yes"?><EnumerationResults ServiceEndpoint="http://127.0.0.1:10001/devstoreaccount1"><Prefix/><MaxResults>5000</MaxResults><Queues/><NextMarker/></EnumerationResults>
2023-08-14T16:04:09.694Z 3689ff65-a511-4367-aafc-d3d994ab3eed info: Serializer: Start returning stream body.
2023-08-14T16:04:09.694Z 3689ff65-a511-4367-aafc-d3d994ab3eed info: EndMiddleware: End response. TotalTimeInMS=6 StatusCode=200 StatusMessage=OK Headers={"server":"Azurite-Queue/3.25.1","x-ms-client-request-id":"cf33ea1f-593b-41d1-817e-02eb925bfef3","x-ms-request-id":"3689ff65-a511-4367-aafc-d3d994ab3eed","x-ms-version":"2023-01-03","content-type":"application/xml"}
2023-08-14T16:04:10.979Z e4e787c6-7672-4916-b19f-f0673f145347 info: TableStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1/Tables RequestHeaders:{"host":"127.0.0.1:10002","connection":"keep-alive","accept":"application/json;odata=minimalmetadata","x-ms-version":"2019-02-02","dataserviceversion":"3.0","accept-encoding":"gzip,deflate","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-data-tables/13.1.2 core-rest-pipeline/1.11.0 Node/v18.15.0 OS/(x64-Linux-6.2.0-26-generic)","x-ms-client-request-id":"9c05b462-a623-4255-88d0-7ccfacfb501f","x-ms-date":"Mon, 14 Aug 2023 16:04:10 GMT","authorization":"SharedKeyLite devstoreaccount1:WTVKTpsAl7rEtsZnV+RYbk+xLkvfw3GGtb7HF6E7NBg=","accept-language":"*","sec-fetch-mode":"cors"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:10.979Z e4e787c6-7672-4916-b19f-f0673f145347 debug: tableStorageContextMiddleware: Dispatch pattern string: /Tables
2023-08-14T16:04:10.979Z e4e787c6-7672-4916-b19f-f0673f145347 info: tableStorageContextMiddleware: Account=devstoreaccount1 tableName=undefined
2023-08-14T16:04:10.979Z e4e787c6-7672-4916-b19f-f0673f145347 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:10.980Z e4e787c6-7672-4916-b19f-f0673f145347 info: DispatchMiddleware: Operation=Table_Query
2023-08-14T16:04:10.980Z e4e787c6-7672-4916-b19f-f0673f145347 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:10.981Z e4e787c6-7672-4916-b19f-f0673f145347 info: TableSharedKeyLiteAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:10.981Z e4e787c6-7672-4916-b19f-f0673f145347 info: TableSharedKeyLiteAuthenticator:validate() [STRING TO SIGN]:"Mon, 14 Aug 2023 16:04:10 GMT\n/devstoreaccount1/devstoreaccount1/Tables"
2023-08-14T16:04:10.981Z e4e787c6-7672-4916-b19f-f0673f145347 info: TableSharedKeyLiteAuthenticator:validate() Calculated authentication header based on key1: SharedKeyLite devstoreaccount1:WTVKTpsAl7rEtsZnV+RYbk+xLkvfw3GGtb7HF6E7NBg=
2023-08-14T16:04:10.981Z e4e787c6-7672-4916-b19f-f0673f145347 info: TableSharedKeyLiteAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:10.982Z e4e787c6-7672-4916-b19f-f0673f145347 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:10.983Z e4e787c6-7672-4916-b19f-f0673f145347 info: HandlerMiddleware: DeserializedParameters={"options":{"queryOptions":{},"requestId":"9c05b462-a623-4255-88d0-7ccfacfb501f","dataServiceVersion":"3.0"},"version":"2019-02-02"}
2023-08-14T16:04:10.984Z e4e787c6-7672-4916-b19f-f0673f145347 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:10.985Z e4e787c6-7672-4916-b19f-f0673f145347 debug: Serializer: Raw response body string is {"odata.metadata":"http://127.0.0.1:10002/devstoreaccount1/$metadata#Tables","value":[]}
2023-08-14T16:04:10.985Z e4e787c6-7672-4916-b19f-f0673f145347 info: Serializer: Start returning stream body.
2023-08-14T16:04:10.985Z e4e787c6-7672-4916-b19f-f0673f145347 info: EndMiddleware: End response. TotalTimeInMS=7 StatusCode=200 StatusMessage=OK Headers={"server":"Azurite-Table/3.25.1","content-type":"application/json;odata=minimalmetadata","x-ms-client-request-id":"9c05b462-a623-4255-88d0-7ccfacfb501f","x-ms-request-id":"e4e787c6-7672-4916-b19f-f0673f145347","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:04:10 GMT"}
2023-08-14T16:04:11.012Z cfe552c0-3c80-4e5e-b2ae-8e7e65a5d0f9 info: TableStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1/%24MetricsCapacityBlob()?$top=1 RequestHeaders:{"host":"127.0.0.1:10002","connection":"keep-alive","accept":"application/json;odata=minimalmetadata","x-ms-version":"2019-02-02","dataserviceversion":"3.0","accept-encoding":"gzip,deflate","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-data-tables/13.1.2 core-rest-pipeline/1.11.0 Node/v18.15.0 OS/(x64-Linux-6.2.0-26-generic)","x-ms-client-request-id":"db9b9a1c-1405-4b42-b58f-0e52feda315d","x-ms-date":"Mon, 14 Aug 2023 16:04:10 GMT","authorization":"SharedKeyLite devstoreaccount1:NSi2iUk7skul9/kGkPnOfOPWG47WjSHwHVxuNNfWQjg=","accept-language":"*","sec-fetch-mode":"cors"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:11.012Z cfe552c0-3c80-4e5e-b2ae-8e7e65a5d0f9 debug: tableStorageContextMiddleware: Dispatch pattern string: /$MetricsCapacityBlob()
2023-08-14T16:04:11.012Z cfe552c0-3c80-4e5e-b2ae-8e7e65a5d0f9 info: tableStorageContextMiddleware: Account=devstoreaccount1 tableName=$MetricsCapacityBlob
2023-08-14T16:04:11.012Z cfe552c0-3c80-4e5e-b2ae-8e7e65a5d0f9 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:11.012Z cfe552c0-3c80-4e5e-b2ae-8e7e65a5d0f9 info: DispatchMiddleware: Operation=Table_QueryEntities
2023-08-14T16:04:11.013Z cfe552c0-3c80-4e5e-b2ae-8e7e65a5d0f9 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:11.013Z cfe552c0-3c80-4e5e-b2ae-8e7e65a5d0f9 info: TableSharedKeyLiteAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:11.013Z cfe552c0-3c80-4e5e-b2ae-8e7e65a5d0f9 info: TableSharedKeyLiteAuthenticator:validate() [STRING TO SIGN]:"Mon, 14 Aug 2023 16:04:10 GMT\n/devstoreaccount1/devstoreaccount1/%24MetricsCapacityBlob()"
2023-08-14T16:04:11.013Z cfe552c0-3c80-4e5e-b2ae-8e7e65a5d0f9 info: TableSharedKeyLiteAuthenticator:validate() Calculated authentication header based on key1: SharedKeyLite devstoreaccount1:NSi2iUk7skul9/kGkPnOfOPWG47WjSHwHVxuNNfWQjg=
2023-08-14T16:04:11.013Z cfe552c0-3c80-4e5e-b2ae-8e7e65a5d0f9 info: TableSharedKeyLiteAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:11.013Z cfe552c0-3c80-4e5e-b2ae-8e7e65a5d0f9 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:11.013Z cfe552c0-3c80-4e5e-b2ae-8e7e65a5d0f9 info: HandlerMiddleware: DeserializedParameters={"options":{"queryOptions":{"top":1},"requestId":"db9b9a1c-1405-4b42-b58f-0e52feda315d","dataServiceVersion":"3.0"},"version":"2019-02-02"}
2023-08-14T16:04:11.015Z cfe552c0-3c80-4e5e-b2ae-8e7e65a5d0f9 error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:11.015Z cfe552c0-3c80-4e5e-b2ae-8e7e65a5d0f9 error: ErrorMiddleware: ErrorName=StorageError ErrorMessage="The table specified does not exist."  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=undefined ErrorHTTPHeaders={"x-ms-error-code":"TableNotFound","x-ms-request-id":"cfe552c0-3c80-4e5e-b2ae-8e7e65a5d0f9","x-ms-version":"2023-01-03"} ErrorHTTPBody="{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:cfe552c0-3c80-4e5e-b2ae-8e7e65a5d0f9\\nTime:2023-08-14T16:04:11.014Z\"}}}" ErrorStack="\"StorageError: The table specified does not exist.\\n    at StorageErrorFactory.getTableNotExist (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/errors/StorageErrorFactory.js:50:16)\\n    at LokiTableMetadataStore.getEntityCollection (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:585:53)\\n    at LokiTableMetadataStore.queryTableEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:251:44)\\n    at TableHandler.queryEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/handlers/TableHandler.js:316:81)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/middleware/HandlerMiddlewareFactory.js:58:18\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/ExpressMiddlewareFactory.js:77:63\\n    at Layer.handle [as handle_request] (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/layer.js:95:5)\\n    at trim_prefix (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:328:13)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:286:9\\n    at Function.process_params (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:346:12)\""
2023-08-14T16:04:11.015Z cfe552c0-3c80-4e5e-b2ae-8e7e65a5d0f9 error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:11.015Z cfe552c0-3c80-4e5e-b2ae-8e7e65a5d0f9 error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=TableNotFound
2023-08-14T16:04:11.016Z cfe552c0-3c80-4e5e-b2ae-8e7e65a5d0f9 error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=cfe552c0-3c80-4e5e-b2ae-8e7e65a5d0f9
2023-08-14T16:04:11.016Z cfe552c0-3c80-4e5e-b2ae-8e7e65a5d0f9 error: ErrorMiddleware: Set HTTP Header: x-ms-version=2023-01-03
2023-08-14T16:04:11.016Z cfe552c0-3c80-4e5e-b2ae-8e7e65a5d0f9 error: ErrorMiddleware: Set content type: application/json;odata=minimalmetadata;streaming=true;charset=utf-8
2023-08-14T16:04:11.016Z cfe552c0-3c80-4e5e-b2ae-8e7e65a5d0f9 error: ErrorMiddleware: Set HTTP body: "{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:cfe552c0-3c80-4e5e-b2ae-8e7e65a5d0f9\\nTime:2023-08-14T16:04:11.014Z\"}}}"
2023-08-14T16:04:11.016Z cfe552c0-3c80-4e5e-b2ae-8e7e65a5d0f9 info: EndMiddleware: End response. TotalTimeInMS=4 StatusCode=404 StatusMessage=Not Found Headers={"server":"Azurite-Table/3.25.1","x-ms-error-code":"TableNotFound","x-ms-request-id":"cfe552c0-3c80-4e5e-b2ae-8e7e65a5d0f9","x-ms-version":"2023-01-03","content-type":"application/json;odata=minimalmetadata;streaming=true;charset=utf-8"}
2023-08-14T16:04:11.020Z 12664faf-9469-44bf-919c-51fa57a8a332 info: TableStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1/%24MetricsHourPrimaryTransactionsBlob()?$top=1 RequestHeaders:{"host":"127.0.0.1:10002","connection":"keep-alive","accept":"application/json;odata=minimalmetadata","x-ms-version":"2019-02-02","dataserviceversion":"3.0","accept-encoding":"gzip,deflate","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-data-tables/13.1.2 core-rest-pipeline/1.11.0 Node/v18.15.0 OS/(x64-Linux-6.2.0-26-generic)","x-ms-client-request-id":"7e1d3235-690e-4a65-bf4a-8fed6ae582ee","x-ms-date":"Mon, 14 Aug 2023 16:04:11 GMT","authorization":"SharedKeyLite devstoreaccount1:+eN9/NJ45yXd6GYm5XFU1T7Kt/UA66I/tSUnQbINExY=","accept-language":"*","sec-fetch-mode":"cors"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:11.020Z 12664faf-9469-44bf-919c-51fa57a8a332 debug: tableStorageContextMiddleware: Dispatch pattern string: /$MetricsHourPrimaryTransactionsBlob()
2023-08-14T16:04:11.020Z 12664faf-9469-44bf-919c-51fa57a8a332 info: tableStorageContextMiddleware: Account=devstoreaccount1 tableName=$MetricsHourPrimaryTransactionsBlob
2023-08-14T16:04:11.020Z 12664faf-9469-44bf-919c-51fa57a8a332 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:11.021Z 12664faf-9469-44bf-919c-51fa57a8a332 info: DispatchMiddleware: Operation=Table_QueryEntities
2023-08-14T16:04:11.021Z 12664faf-9469-44bf-919c-51fa57a8a332 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:11.021Z 12664faf-9469-44bf-919c-51fa57a8a332 info: TableSharedKeyLiteAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:11.021Z 12664faf-9469-44bf-919c-51fa57a8a332 info: TableSharedKeyLiteAuthenticator:validate() [STRING TO SIGN]:"Mon, 14 Aug 2023 16:04:11 GMT\n/devstoreaccount1/devstoreaccount1/%24MetricsHourPrimaryTransactionsBlob()"
2023-08-14T16:04:11.021Z 12664faf-9469-44bf-919c-51fa57a8a332 info: TableSharedKeyLiteAuthenticator:validate() Calculated authentication header based on key1: SharedKeyLite devstoreaccount1:+eN9/NJ45yXd6GYm5XFU1T7Kt/UA66I/tSUnQbINExY=
2023-08-14T16:04:11.021Z 12664faf-9469-44bf-919c-51fa57a8a332 info: TableSharedKeyLiteAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:11.021Z 12664faf-9469-44bf-919c-51fa57a8a332 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:11.021Z 12664faf-9469-44bf-919c-51fa57a8a332 info: HandlerMiddleware: DeserializedParameters={"options":{"queryOptions":{"top":1},"requestId":"7e1d3235-690e-4a65-bf4a-8fed6ae582ee","dataServiceVersion":"3.0"},"version":"2019-02-02"}
2023-08-14T16:04:11.021Z 12664faf-9469-44bf-919c-51fa57a8a332 error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:11.021Z 12664faf-9469-44bf-919c-51fa57a8a332 error: ErrorMiddleware: ErrorName=StorageError ErrorMessage="The table specified does not exist."  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=undefined ErrorHTTPHeaders={"x-ms-error-code":"TableNotFound","x-ms-request-id":"12664faf-9469-44bf-919c-51fa57a8a332","x-ms-version":"2023-01-03"} ErrorHTTPBody="{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:12664faf-9469-44bf-919c-51fa57a8a332\\nTime:2023-08-14T16:04:11.021Z\"}}}" ErrorStack="\"StorageError: The table specified does not exist.\\n    at StorageErrorFactory.getTableNotExist (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/errors/StorageErrorFactory.js:50:16)\\n    at LokiTableMetadataStore.getEntityCollection (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:585:53)\\n    at LokiTableMetadataStore.queryTableEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:251:44)\\n    at TableHandler.queryEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/handlers/TableHandler.js:316:81)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/middleware/HandlerMiddlewareFactory.js:58:18\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/ExpressMiddlewareFactory.js:77:63\\n    at Layer.handle [as handle_request] (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/layer.js:95:5)\\n    at trim_prefix (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:328:13)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:286:9\\n    at Function.process_params (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:346:12)\""
2023-08-14T16:04:11.021Z 12664faf-9469-44bf-919c-51fa57a8a332 error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:11.021Z 12664faf-9469-44bf-919c-51fa57a8a332 error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=TableNotFound
2023-08-14T16:04:11.022Z 12664faf-9469-44bf-919c-51fa57a8a332 error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=12664faf-9469-44bf-919c-51fa57a8a332
2023-08-14T16:04:11.022Z 12664faf-9469-44bf-919c-51fa57a8a332 error: ErrorMiddleware: Set HTTP Header: x-ms-version=2023-01-03
2023-08-14T16:04:11.022Z 12664faf-9469-44bf-919c-51fa57a8a332 error: ErrorMiddleware: Set content type: application/json;odata=minimalmetadata;streaming=true;charset=utf-8
2023-08-14T16:04:11.022Z 12664faf-9469-44bf-919c-51fa57a8a332 error: ErrorMiddleware: Set HTTP body: "{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:12664faf-9469-44bf-919c-51fa57a8a332\\nTime:2023-08-14T16:04:11.021Z\"}}}"
2023-08-14T16:04:11.022Z 12664faf-9469-44bf-919c-51fa57a8a332 info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=404 StatusMessage=Not Found Headers={"server":"Azurite-Table/3.25.1","x-ms-error-code":"TableNotFound","x-ms-request-id":"12664faf-9469-44bf-919c-51fa57a8a332","x-ms-version":"2023-01-03","content-type":"application/json;odata=minimalmetadata;streaming=true;charset=utf-8"}
2023-08-14T16:04:11.022Z 2297293a-5f44-4cd9-9d09-f74681bbde77 info: TableStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1/%24MetricsHourPrimaryTransactionsFile()?$top=1 RequestHeaders:{"host":"127.0.0.1:10002","connection":"keep-alive","accept":"application/json;odata=minimalmetadata","x-ms-version":"2019-02-02","dataserviceversion":"3.0","accept-encoding":"gzip,deflate","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-data-tables/13.1.2 core-rest-pipeline/1.11.0 Node/v18.15.0 OS/(x64-Linux-6.2.0-26-generic)","x-ms-client-request-id":"9402adf4-2e1a-4108-9505-ad932420160c","x-ms-date":"Mon, 14 Aug 2023 16:04:11 GMT","authorization":"SharedKeyLite devstoreaccount1:J8S9KNPUd8Yccazn7UiMBD2GX10ktnb70IfQ/vUAM2g=","accept-language":"*","sec-fetch-mode":"cors"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:11.023Z 2297293a-5f44-4cd9-9d09-f74681bbde77 debug: tableStorageContextMiddleware: Dispatch pattern string: /$MetricsHourPrimaryTransactionsFile()
2023-08-14T16:04:11.023Z 2297293a-5f44-4cd9-9d09-f74681bbde77 info: tableStorageContextMiddleware: Account=devstoreaccount1 tableName=$MetricsHourPrimaryTransactionsFile
2023-08-14T16:04:11.023Z 2297293a-5f44-4cd9-9d09-f74681bbde77 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:11.023Z 2297293a-5f44-4cd9-9d09-f74681bbde77 info: DispatchMiddleware: Operation=Table_QueryEntities
2023-08-14T16:04:11.023Z 2297293a-5f44-4cd9-9d09-f74681bbde77 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:11.024Z 2297293a-5f44-4cd9-9d09-f74681bbde77 info: TableSharedKeyLiteAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:11.024Z 2297293a-5f44-4cd9-9d09-f74681bbde77 info: TableSharedKeyLiteAuthenticator:validate() [STRING TO SIGN]:"Mon, 14 Aug 2023 16:04:11 GMT\n/devstoreaccount1/devstoreaccount1/%24MetricsHourPrimaryTransactionsFile()"
2023-08-14T16:04:11.024Z 2297293a-5f44-4cd9-9d09-f74681bbde77 info: TableSharedKeyLiteAuthenticator:validate() Calculated authentication header based on key1: SharedKeyLite devstoreaccount1:J8S9KNPUd8Yccazn7UiMBD2GX10ktnb70IfQ/vUAM2g=
2023-08-14T16:04:11.024Z 2297293a-5f44-4cd9-9d09-f74681bbde77 info: TableSharedKeyLiteAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:11.024Z 2297293a-5f44-4cd9-9d09-f74681bbde77 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:11.025Z 2297293a-5f44-4cd9-9d09-f74681bbde77 info: HandlerMiddleware: DeserializedParameters={"options":{"queryOptions":{"top":1},"requestId":"9402adf4-2e1a-4108-9505-ad932420160c","dataServiceVersion":"3.0"},"version":"2019-02-02"}
2023-08-14T16:04:11.025Z 2297293a-5f44-4cd9-9d09-f74681bbde77 error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:11.025Z 2297293a-5f44-4cd9-9d09-f74681bbde77 error: ErrorMiddleware: ErrorName=StorageError ErrorMessage="The table specified does not exist."  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=undefined ErrorHTTPHeaders={"x-ms-error-code":"TableNotFound","x-ms-request-id":"2297293a-5f44-4cd9-9d09-f74681bbde77","x-ms-version":"2023-01-03"} ErrorHTTPBody="{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:2297293a-5f44-4cd9-9d09-f74681bbde77\\nTime:2023-08-14T16:04:11.025Z\"}}}" ErrorStack="\"StorageError: The table specified does not exist.\\n    at StorageErrorFactory.getTableNotExist (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/errors/StorageErrorFactory.js:50:16)\\n    at LokiTableMetadataStore.getEntityCollection (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:585:53)\\n    at LokiTableMetadataStore.queryTableEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:251:44)\\n    at TableHandler.queryEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/handlers/TableHandler.js:316:81)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/middleware/HandlerMiddlewareFactory.js:58:18\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/ExpressMiddlewareFactory.js:77:63\\n    at Layer.handle [as handle_request] (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/layer.js:95:5)\\n    at trim_prefix (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:328:13)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:286:9\\n    at Function.process_params (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:346:12)\""
2023-08-14T16:04:11.025Z 2297293a-5f44-4cd9-9d09-f74681bbde77 error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:11.025Z 2297293a-5f44-4cd9-9d09-f74681bbde77 error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=TableNotFound
2023-08-14T16:04:11.025Z 2297293a-5f44-4cd9-9d09-f74681bbde77 error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=2297293a-5f44-4cd9-9d09-f74681bbde77
2023-08-14T16:04:11.025Z 2297293a-5f44-4cd9-9d09-f74681bbde77 error: ErrorMiddleware: Set HTTP Header: x-ms-version=2023-01-03
2023-08-14T16:04:11.025Z 2297293a-5f44-4cd9-9d09-f74681bbde77 error: ErrorMiddleware: Set content type: application/json;odata=minimalmetadata;streaming=true;charset=utf-8
2023-08-14T16:04:11.025Z 2297293a-5f44-4cd9-9d09-f74681bbde77 error: ErrorMiddleware: Set HTTP body: "{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:2297293a-5f44-4cd9-9d09-f74681bbde77\\nTime:2023-08-14T16:04:11.025Z\"}}}"
2023-08-14T16:04:11.025Z 2297293a-5f44-4cd9-9d09-f74681bbde77 info: EndMiddleware: End response. TotalTimeInMS=3 StatusCode=404 StatusMessage=Not Found Headers={"server":"Azurite-Table/3.25.1","x-ms-error-code":"TableNotFound","x-ms-request-id":"2297293a-5f44-4cd9-9d09-f74681bbde77","x-ms-version":"2023-01-03","content-type":"application/json;odata=minimalmetadata;streaming=true;charset=utf-8"}
2023-08-14T16:04:11.026Z 21f06561-9eb7-4127-8cd6-49241afbe6e9 info: TableStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1/%24MetricsHourPrimaryTransactionsQueue()?$top=1 RequestHeaders:{"host":"127.0.0.1:10002","connection":"keep-alive","accept":"application/json;odata=minimalmetadata","x-ms-version":"2019-02-02","dataserviceversion":"3.0","accept-encoding":"gzip,deflate","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-data-tables/13.1.2 core-rest-pipeline/1.11.0 Node/v18.15.0 OS/(x64-Linux-6.2.0-26-generic)","x-ms-client-request-id":"41f8784a-eab1-4e52-be15-a3baab9a59f6","x-ms-date":"Mon, 14 Aug 2023 16:04:11 GMT","authorization":"SharedKeyLite devstoreaccount1:kvq2oMJVIc4PWQDpLqTOkUC9lyQ6YeiGN8azpKIvnIg=","accept-language":"*","sec-fetch-mode":"cors"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:11.026Z 21f06561-9eb7-4127-8cd6-49241afbe6e9 debug: tableStorageContextMiddleware: Dispatch pattern string: /$MetricsHourPrimaryTransactionsQueue()
2023-08-14T16:04:11.026Z 21f06561-9eb7-4127-8cd6-49241afbe6e9 info: tableStorageContextMiddleware: Account=devstoreaccount1 tableName=$MetricsHourPrimaryTransactionsQueue
2023-08-14T16:04:11.026Z 21f06561-9eb7-4127-8cd6-49241afbe6e9 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:11.026Z 21f06561-9eb7-4127-8cd6-49241afbe6e9 info: DispatchMiddleware: Operation=Table_QueryEntities
2023-08-14T16:04:11.026Z 21f06561-9eb7-4127-8cd6-49241afbe6e9 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:11.026Z 21f06561-9eb7-4127-8cd6-49241afbe6e9 info: TableSharedKeyLiteAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:11.026Z 21f06561-9eb7-4127-8cd6-49241afbe6e9 info: TableSharedKeyLiteAuthenticator:validate() [STRING TO SIGN]:"Mon, 14 Aug 2023 16:04:11 GMT\n/devstoreaccount1/devstoreaccount1/%24MetricsHourPrimaryTransactionsQueue()"
2023-08-14T16:04:11.026Z 21f06561-9eb7-4127-8cd6-49241afbe6e9 info: TableSharedKeyLiteAuthenticator:validate() Calculated authentication header based on key1: SharedKeyLite devstoreaccount1:kvq2oMJVIc4PWQDpLqTOkUC9lyQ6YeiGN8azpKIvnIg=
2023-08-14T16:04:11.027Z 21f06561-9eb7-4127-8cd6-49241afbe6e9 info: TableSharedKeyLiteAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:11.027Z 21f06561-9eb7-4127-8cd6-49241afbe6e9 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:11.027Z 21f06561-9eb7-4127-8cd6-49241afbe6e9 info: HandlerMiddleware: DeserializedParameters={"options":{"queryOptions":{"top":1},"requestId":"41f8784a-eab1-4e52-be15-a3baab9a59f6","dataServiceVersion":"3.0"},"version":"2019-02-02"}
2023-08-14T16:04:11.027Z 21f06561-9eb7-4127-8cd6-49241afbe6e9 error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:11.027Z 21f06561-9eb7-4127-8cd6-49241afbe6e9 error: ErrorMiddleware: ErrorName=StorageError ErrorMessage="The table specified does not exist."  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=undefined ErrorHTTPHeaders={"x-ms-error-code":"TableNotFound","x-ms-request-id":"21f06561-9eb7-4127-8cd6-49241afbe6e9","x-ms-version":"2023-01-03"} ErrorHTTPBody="{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:21f06561-9eb7-4127-8cd6-49241afbe6e9\\nTime:2023-08-14T16:04:11.027Z\"}}}" ErrorStack="\"StorageError: The table specified does not exist.\\n    at StorageErrorFactory.getTableNotExist (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/errors/StorageErrorFactory.js:50:16)\\n    at LokiTableMetadataStore.getEntityCollection (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:585:53)\\n    at LokiTableMetadataStore.queryTableEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:251:44)\\n    at TableHandler.queryEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/handlers/TableHandler.js:316:81)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/middleware/HandlerMiddlewareFactory.js:58:18\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/ExpressMiddlewareFactory.js:77:63\\n    at Layer.handle [as handle_request] (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/layer.js:95:5)\\n    at trim_prefix (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:328:13)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:286:9\\n    at Function.process_params (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:346:12)\""
2023-08-14T16:04:11.027Z 21f06561-9eb7-4127-8cd6-49241afbe6e9 error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:11.027Z 21f06561-9eb7-4127-8cd6-49241afbe6e9 error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=TableNotFound
2023-08-14T16:04:11.027Z 21f06561-9eb7-4127-8cd6-49241afbe6e9 error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=21f06561-9eb7-4127-8cd6-49241afbe6e9
2023-08-14T16:04:11.027Z 21f06561-9eb7-4127-8cd6-49241afbe6e9 error: ErrorMiddleware: Set HTTP Header: x-ms-version=2023-01-03
2023-08-14T16:04:11.027Z 21f06561-9eb7-4127-8cd6-49241afbe6e9 error: ErrorMiddleware: Set content type: application/json;odata=minimalmetadata;streaming=true;charset=utf-8
2023-08-14T16:04:11.027Z 21f06561-9eb7-4127-8cd6-49241afbe6e9 error: ErrorMiddleware: Set HTTP body: "{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:21f06561-9eb7-4127-8cd6-49241afbe6e9\\nTime:2023-08-14T16:04:11.027Z\"}}}"
2023-08-14T16:04:11.028Z 21f06561-9eb7-4127-8cd6-49241afbe6e9 info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=404 StatusMessage=Not Found Headers={"server":"Azurite-Table/3.25.1","x-ms-error-code":"TableNotFound","x-ms-request-id":"21f06561-9eb7-4127-8cd6-49241afbe6e9","x-ms-version":"2023-01-03","content-type":"application/json;odata=minimalmetadata;streaming=true;charset=utf-8"}
2023-08-14T16:04:11.028Z 6f765176-c691-4b7d-86e4-ff85f0fa0366 info: TableStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1/%24MetricsHourPrimaryTransactionsTable()?$top=1 RequestHeaders:{"host":"127.0.0.1:10002","connection":"keep-alive","accept":"application/json;odata=minimalmetadata","x-ms-version":"2019-02-02","dataserviceversion":"3.0","accept-encoding":"gzip,deflate","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-data-tables/13.1.2 core-rest-pipeline/1.11.0 Node/v18.15.0 OS/(x64-Linux-6.2.0-26-generic)","x-ms-client-request-id":"56a6d6c7-9b2b-4b38-bb3a-4acacc756ec9","x-ms-date":"Mon, 14 Aug 2023 16:04:11 GMT","authorization":"SharedKeyLite devstoreaccount1:dVlX6RdJs4byizy1wuj7LVtWIiFfqvVjAu5D0GvGC9w=","accept-language":"*","sec-fetch-mode":"cors"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:11.028Z 6f765176-c691-4b7d-86e4-ff85f0fa0366 debug: tableStorageContextMiddleware: Dispatch pattern string: /$MetricsHourPrimaryTransactionsTable()
2023-08-14T16:04:11.029Z 6f765176-c691-4b7d-86e4-ff85f0fa0366 info: tableStorageContextMiddleware: Account=devstoreaccount1 tableName=$MetricsHourPrimaryTransactionsTable
2023-08-14T16:04:11.029Z 6f765176-c691-4b7d-86e4-ff85f0fa0366 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:11.029Z 6f765176-c691-4b7d-86e4-ff85f0fa0366 info: DispatchMiddleware: Operation=Table_QueryEntities
2023-08-14T16:04:11.029Z 6f765176-c691-4b7d-86e4-ff85f0fa0366 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:11.029Z 6f765176-c691-4b7d-86e4-ff85f0fa0366 info: TableSharedKeyLiteAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:11.029Z 6f765176-c691-4b7d-86e4-ff85f0fa0366 info: TableSharedKeyLiteAuthenticator:validate() [STRING TO SIGN]:"Mon, 14 Aug 2023 16:04:11 GMT\n/devstoreaccount1/devstoreaccount1/%24MetricsHourPrimaryTransactionsTable()"
2023-08-14T16:04:11.029Z 6f765176-c691-4b7d-86e4-ff85f0fa0366 info: TableSharedKeyLiteAuthenticator:validate() Calculated authentication header based on key1: SharedKeyLite devstoreaccount1:dVlX6RdJs4byizy1wuj7LVtWIiFfqvVjAu5D0GvGC9w=
2023-08-14T16:04:11.029Z 6f765176-c691-4b7d-86e4-ff85f0fa0366 info: TableSharedKeyLiteAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:11.029Z 6f765176-c691-4b7d-86e4-ff85f0fa0366 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:11.029Z 6f765176-c691-4b7d-86e4-ff85f0fa0366 info: HandlerMiddleware: DeserializedParameters={"options":{"queryOptions":{"top":1},"requestId":"56a6d6c7-9b2b-4b38-bb3a-4acacc756ec9","dataServiceVersion":"3.0"},"version":"2019-02-02"}
2023-08-14T16:04:11.030Z 6f765176-c691-4b7d-86e4-ff85f0fa0366 error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:11.030Z 6f765176-c691-4b7d-86e4-ff85f0fa0366 error: ErrorMiddleware: ErrorName=StorageError ErrorMessage="The table specified does not exist."  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=undefined ErrorHTTPHeaders={"x-ms-error-code":"TableNotFound","x-ms-request-id":"6f765176-c691-4b7d-86e4-ff85f0fa0366","x-ms-version":"2023-01-03"} ErrorHTTPBody="{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:6f765176-c691-4b7d-86e4-ff85f0fa0366\\nTime:2023-08-14T16:04:11.029Z\"}}}" ErrorStack="\"StorageError: The table specified does not exist.\\n    at StorageErrorFactory.getTableNotExist (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/errors/StorageErrorFactory.js:50:16)\\n    at LokiTableMetadataStore.getEntityCollection (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:585:53)\\n    at LokiTableMetadataStore.queryTableEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:251:44)\\n    at TableHandler.queryEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/handlers/TableHandler.js:316:81)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/middleware/HandlerMiddlewareFactory.js:58:18\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/ExpressMiddlewareFactory.js:77:63\\n    at Layer.handle [as handle_request] (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/layer.js:95:5)\\n    at trim_prefix (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:328:13)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:286:9\\n    at Function.process_params (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:346:12)\""
2023-08-14T16:04:11.030Z 6f765176-c691-4b7d-86e4-ff85f0fa0366 error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:11.030Z 6f765176-c691-4b7d-86e4-ff85f0fa0366 error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=TableNotFound
2023-08-14T16:04:11.030Z 6f765176-c691-4b7d-86e4-ff85f0fa0366 error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=6f765176-c691-4b7d-86e4-ff85f0fa0366
2023-08-14T16:04:11.030Z 6f765176-c691-4b7d-86e4-ff85f0fa0366 error: ErrorMiddleware: Set HTTP Header: x-ms-version=2023-01-03
2023-08-14T16:04:11.030Z 6f765176-c691-4b7d-86e4-ff85f0fa0366 error: ErrorMiddleware: Set content type: application/json;odata=minimalmetadata;streaming=true;charset=utf-8
2023-08-14T16:04:11.030Z 6f765176-c691-4b7d-86e4-ff85f0fa0366 error: ErrorMiddleware: Set HTTP body: "{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:6f765176-c691-4b7d-86e4-ff85f0fa0366\\nTime:2023-08-14T16:04:11.029Z\"}}}"
2023-08-14T16:04:11.030Z 6f765176-c691-4b7d-86e4-ff85f0fa0366 info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=404 StatusMessage=Not Found Headers={"server":"Azurite-Table/3.25.1","x-ms-error-code":"TableNotFound","x-ms-request-id":"6f765176-c691-4b7d-86e4-ff85f0fa0366","x-ms-version":"2023-01-03","content-type":"application/json;odata=minimalmetadata;streaming=true;charset=utf-8"}
2023-08-14T16:04:11.031Z b2757f27-7803-4b8a-a720-a9d2f392907a info: TableStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1/%24MetricsHourSecondaryTransactionsBlob()?$top=1 RequestHeaders:{"host":"127.0.0.1:10002","connection":"keep-alive","accept":"application/json;odata=minimalmetadata","x-ms-version":"2019-02-02","dataserviceversion":"3.0","accept-encoding":"gzip,deflate","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-data-tables/13.1.2 core-rest-pipeline/1.11.0 Node/v18.15.0 OS/(x64-Linux-6.2.0-26-generic)","x-ms-client-request-id":"893d9aca-d502-48e6-b127-034504405234","x-ms-date":"Mon, 14 Aug 2023 16:04:11 GMT","authorization":"SharedKeyLite devstoreaccount1:/Bj9/XG+m5kFKIYP+2XCHnNcg0ieKhqJreUKOC0vXfs=","accept-language":"*","sec-fetch-mode":"cors"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:11.031Z b2757f27-7803-4b8a-a720-a9d2f392907a debug: tableStorageContextMiddleware: Dispatch pattern string: /$MetricsHourSecondaryTransactionsBlob()
2023-08-14T16:04:11.031Z b2757f27-7803-4b8a-a720-a9d2f392907a info: tableStorageContextMiddleware: Account=devstoreaccount1 tableName=$MetricsHourSecondaryTransactionsBlob
2023-08-14T16:04:11.031Z b2757f27-7803-4b8a-a720-a9d2f392907a verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:11.032Z b2757f27-7803-4b8a-a720-a9d2f392907a info: DispatchMiddleware: Operation=Table_QueryEntities
2023-08-14T16:04:11.032Z b2757f27-7803-4b8a-a720-a9d2f392907a verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:11.032Z b2757f27-7803-4b8a-a720-a9d2f392907a info: TableSharedKeyLiteAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:11.032Z b2757f27-7803-4b8a-a720-a9d2f392907a info: TableSharedKeyLiteAuthenticator:validate() [STRING TO SIGN]:"Mon, 14 Aug 2023 16:04:11 GMT\n/devstoreaccount1/devstoreaccount1/%24MetricsHourSecondaryTransactionsBlob()"
2023-08-14T16:04:11.032Z b2757f27-7803-4b8a-a720-a9d2f392907a info: TableSharedKeyLiteAuthenticator:validate() Calculated authentication header based on key1: SharedKeyLite devstoreaccount1:/Bj9/XG+m5kFKIYP+2XCHnNcg0ieKhqJreUKOC0vXfs=
2023-08-14T16:04:11.032Z b2757f27-7803-4b8a-a720-a9d2f392907a info: TableSharedKeyLiteAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:11.032Z b2757f27-7803-4b8a-a720-a9d2f392907a verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:11.032Z b2757f27-7803-4b8a-a720-a9d2f392907a info: HandlerMiddleware: DeserializedParameters={"options":{"queryOptions":{"top":1},"requestId":"893d9aca-d502-48e6-b127-034504405234","dataServiceVersion":"3.0"},"version":"2019-02-02"}
2023-08-14T16:04:11.032Z b2757f27-7803-4b8a-a720-a9d2f392907a error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:11.032Z b2757f27-7803-4b8a-a720-a9d2f392907a error: ErrorMiddleware: ErrorName=StorageError ErrorMessage="The table specified does not exist."  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=undefined ErrorHTTPHeaders={"x-ms-error-code":"TableNotFound","x-ms-request-id":"b2757f27-7803-4b8a-a720-a9d2f392907a","x-ms-version":"2023-01-03"} ErrorHTTPBody="{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:b2757f27-7803-4b8a-a720-a9d2f392907a\\nTime:2023-08-14T16:04:11.032Z\"}}}" ErrorStack="\"StorageError: The table specified does not exist.\\n    at StorageErrorFactory.getTableNotExist (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/errors/StorageErrorFactory.js:50:16)\\n    at LokiTableMetadataStore.getEntityCollection (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:585:53)\\n    at LokiTableMetadataStore.queryTableEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:251:44)\\n    at TableHandler.queryEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/handlers/TableHandler.js:316:81)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/middleware/HandlerMiddlewareFactory.js:58:18\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/ExpressMiddlewareFactory.js:77:63\\n    at Layer.handle [as handle_request] (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/layer.js:95:5)\\n    at trim_prefix (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:328:13)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:286:9\\n    at Function.process_params (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:346:12)\""
2023-08-14T16:04:11.032Z b2757f27-7803-4b8a-a720-a9d2f392907a error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:11.033Z b2757f27-7803-4b8a-a720-a9d2f392907a error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=TableNotFound
2023-08-14T16:04:11.033Z b2757f27-7803-4b8a-a720-a9d2f392907a error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=b2757f27-7803-4b8a-a720-a9d2f392907a
2023-08-14T16:04:11.033Z b2757f27-7803-4b8a-a720-a9d2f392907a error: ErrorMiddleware: Set HTTP Header: x-ms-version=2023-01-03
2023-08-14T16:04:11.033Z b2757f27-7803-4b8a-a720-a9d2f392907a error: ErrorMiddleware: Set content type: application/json;odata=minimalmetadata;streaming=true;charset=utf-8
2023-08-14T16:04:11.033Z b2757f27-7803-4b8a-a720-a9d2f392907a error: ErrorMiddleware: Set HTTP body: "{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:b2757f27-7803-4b8a-a720-a9d2f392907a\\nTime:2023-08-14T16:04:11.032Z\"}}}"
2023-08-14T16:04:11.033Z b2757f27-7803-4b8a-a720-a9d2f392907a info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=404 StatusMessage=Not Found Headers={"server":"Azurite-Table/3.25.1","x-ms-error-code":"TableNotFound","x-ms-request-id":"b2757f27-7803-4b8a-a720-a9d2f392907a","x-ms-version":"2023-01-03","content-type":"application/json;odata=minimalmetadata;streaming=true;charset=utf-8"}
2023-08-14T16:04:11.034Z 5a8b26af-b40c-4cef-ab12-eb5ac5b2f1cd info: TableStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1/%24MetricsHourSecondaryTransactionsFile()?$top=1 RequestHeaders:{"host":"127.0.0.1:10002","connection":"keep-alive","accept":"application/json;odata=minimalmetadata","x-ms-version":"2019-02-02","dataserviceversion":"3.0","accept-encoding":"gzip,deflate","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-data-tables/13.1.2 core-rest-pipeline/1.11.0 Node/v18.15.0 OS/(x64-Linux-6.2.0-26-generic)","x-ms-client-request-id":"1d68dc50-dcd8-4f41-8b47-97faceaecc85","x-ms-date":"Mon, 14 Aug 2023 16:04:11 GMT","authorization":"SharedKeyLite devstoreaccount1:vBY3eBBfq/JqxnbafkWaotB1Htjncj6uwQnBJ2t0WWQ=","accept-language":"*","sec-fetch-mode":"cors"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:11.034Z 5a8b26af-b40c-4cef-ab12-eb5ac5b2f1cd debug: tableStorageContextMiddleware: Dispatch pattern string: /$MetricsHourSecondaryTransactionsFile()
2023-08-14T16:04:11.035Z 5a8b26af-b40c-4cef-ab12-eb5ac5b2f1cd info: tableStorageContextMiddleware: Account=devstoreaccount1 tableName=$MetricsHourSecondaryTransactionsFile
2023-08-14T16:04:11.035Z 5a8b26af-b40c-4cef-ab12-eb5ac5b2f1cd verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:11.035Z 5a8b26af-b40c-4cef-ab12-eb5ac5b2f1cd info: DispatchMiddleware: Operation=Table_QueryEntities
2023-08-14T16:04:11.035Z 5a8b26af-b40c-4cef-ab12-eb5ac5b2f1cd verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:11.035Z 5a8b26af-b40c-4cef-ab12-eb5ac5b2f1cd info: TableSharedKeyLiteAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:11.035Z 5a8b26af-b40c-4cef-ab12-eb5ac5b2f1cd info: TableSharedKeyLiteAuthenticator:validate() [STRING TO SIGN]:"Mon, 14 Aug 2023 16:04:11 GMT\n/devstoreaccount1/devstoreaccount1/%24MetricsHourSecondaryTransactionsFile()"
2023-08-14T16:04:11.035Z 5a8b26af-b40c-4cef-ab12-eb5ac5b2f1cd info: TableSharedKeyLiteAuthenticator:validate() Calculated authentication header based on key1: SharedKeyLite devstoreaccount1:vBY3eBBfq/JqxnbafkWaotB1Htjncj6uwQnBJ2t0WWQ=
2023-08-14T16:04:11.035Z 5a8b26af-b40c-4cef-ab12-eb5ac5b2f1cd info: TableSharedKeyLiteAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:11.035Z 5a8b26af-b40c-4cef-ab12-eb5ac5b2f1cd verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:11.036Z 5a8b26af-b40c-4cef-ab12-eb5ac5b2f1cd info: HandlerMiddleware: DeserializedParameters={"options":{"queryOptions":{"top":1},"requestId":"1d68dc50-dcd8-4f41-8b47-97faceaecc85","dataServiceVersion":"3.0"},"version":"2019-02-02"}
2023-08-14T16:04:11.036Z 5a8b26af-b40c-4cef-ab12-eb5ac5b2f1cd error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:11.036Z 5a8b26af-b40c-4cef-ab12-eb5ac5b2f1cd error: ErrorMiddleware: ErrorName=StorageError ErrorMessage="The table specified does not exist."  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=undefined ErrorHTTPHeaders={"x-ms-error-code":"TableNotFound","x-ms-request-id":"5a8b26af-b40c-4cef-ab12-eb5ac5b2f1cd","x-ms-version":"2023-01-03"} ErrorHTTPBody="{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:5a8b26af-b40c-4cef-ab12-eb5ac5b2f1cd\\nTime:2023-08-14T16:04:11.036Z\"}}}" ErrorStack="\"StorageError: The table specified does not exist.\\n    at StorageErrorFactory.getTableNotExist (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/errors/StorageErrorFactory.js:50:16)\\n    at LokiTableMetadataStore.getEntityCollection (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:585:53)\\n    at LokiTableMetadataStore.queryTableEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:251:44)\\n    at TableHandler.queryEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/handlers/TableHandler.js:316:81)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/middleware/HandlerMiddlewareFactory.js:58:18\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/ExpressMiddlewareFactory.js:77:63\\n    at Layer.handle [as handle_request] (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/layer.js:95:5)\\n    at trim_prefix (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:328:13)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:286:9\\n    at Function.process_params (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:346:12)\""
2023-08-14T16:04:11.036Z 5a8b26af-b40c-4cef-ab12-eb5ac5b2f1cd error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:11.037Z 5a8b26af-b40c-4cef-ab12-eb5ac5b2f1cd error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=TableNotFound
2023-08-14T16:04:11.037Z 5a8b26af-b40c-4cef-ab12-eb5ac5b2f1cd error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=5a8b26af-b40c-4cef-ab12-eb5ac5b2f1cd
2023-08-14T16:04:11.037Z 5a8b26af-b40c-4cef-ab12-eb5ac5b2f1cd error: ErrorMiddleware: Set HTTP Header: x-ms-version=2023-01-03
2023-08-14T16:04:11.037Z 5a8b26af-b40c-4cef-ab12-eb5ac5b2f1cd error: ErrorMiddleware: Set content type: application/json;odata=minimalmetadata;streaming=true;charset=utf-8
2023-08-14T16:04:11.037Z 5a8b26af-b40c-4cef-ab12-eb5ac5b2f1cd error: ErrorMiddleware: Set HTTP body: "{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:5a8b26af-b40c-4cef-ab12-eb5ac5b2f1cd\\nTime:2023-08-14T16:04:11.036Z\"}}}"
2023-08-14T16:04:11.037Z 5a8b26af-b40c-4cef-ab12-eb5ac5b2f1cd info: EndMiddleware: End response. TotalTimeInMS=3 StatusCode=404 StatusMessage=Not Found Headers={"server":"Azurite-Table/3.25.1","x-ms-error-code":"TableNotFound","x-ms-request-id":"5a8b26af-b40c-4cef-ab12-eb5ac5b2f1cd","x-ms-version":"2023-01-03","content-type":"application/json;odata=minimalmetadata;streaming=true;charset=utf-8"}
2023-08-14T16:04:11.038Z 8e9684eb-870c-4d3b-9e09-c71e285a81aa info: TableStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1/%24MetricsHourSecondaryTransactionsQueue()?$top=1 RequestHeaders:{"host":"127.0.0.1:10002","connection":"keep-alive","accept":"application/json;odata=minimalmetadata","x-ms-version":"2019-02-02","dataserviceversion":"3.0","accept-encoding":"gzip,deflate","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-data-tables/13.1.2 core-rest-pipeline/1.11.0 Node/v18.15.0 OS/(x64-Linux-6.2.0-26-generic)","x-ms-client-request-id":"2e98f904-5c64-49b8-88a9-5473b5bb3d61","x-ms-date":"Mon, 14 Aug 2023 16:04:11 GMT","authorization":"SharedKeyLite devstoreaccount1:uMETy0QVh75JxnrdJKfHdBuz/XyMA9pdI17VkWViTMw=","accept-language":"*","sec-fetch-mode":"cors"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:11.038Z 8e9684eb-870c-4d3b-9e09-c71e285a81aa debug: tableStorageContextMiddleware: Dispatch pattern string: /$MetricsHourSecondaryTransactionsQueue()
2023-08-14T16:04:11.038Z 8e9684eb-870c-4d3b-9e09-c71e285a81aa info: tableStorageContextMiddleware: Account=devstoreaccount1 tableName=$MetricsHourSecondaryTransactionsQueue
2023-08-14T16:04:11.038Z 8e9684eb-870c-4d3b-9e09-c71e285a81aa verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:11.038Z 8e9684eb-870c-4d3b-9e09-c71e285a81aa info: DispatchMiddleware: Operation=Table_QueryEntities
2023-08-14T16:04:11.038Z 8e9684eb-870c-4d3b-9e09-c71e285a81aa verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:11.038Z 8e9684eb-870c-4d3b-9e09-c71e285a81aa info: TableSharedKeyLiteAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:11.039Z 8e9684eb-870c-4d3b-9e09-c71e285a81aa info: TableSharedKeyLiteAuthenticator:validate() [STRING TO SIGN]:"Mon, 14 Aug 2023 16:04:11 GMT\n/devstoreaccount1/devstoreaccount1/%24MetricsHourSecondaryTransactionsQueue()"
2023-08-14T16:04:11.039Z 8e9684eb-870c-4d3b-9e09-c71e285a81aa info: TableSharedKeyLiteAuthenticator:validate() Calculated authentication header based on key1: SharedKeyLite devstoreaccount1:uMETy0QVh75JxnrdJKfHdBuz/XyMA9pdI17VkWViTMw=
2023-08-14T16:04:11.039Z 8e9684eb-870c-4d3b-9e09-c71e285a81aa info: TableSharedKeyLiteAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:11.039Z 8e9684eb-870c-4d3b-9e09-c71e285a81aa verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:11.039Z 8e9684eb-870c-4d3b-9e09-c71e285a81aa info: HandlerMiddleware: DeserializedParameters={"options":{"queryOptions":{"top":1},"requestId":"2e98f904-5c64-49b8-88a9-5473b5bb3d61","dataServiceVersion":"3.0"},"version":"2019-02-02"}
2023-08-14T16:04:11.039Z 8e9684eb-870c-4d3b-9e09-c71e285a81aa error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:11.039Z 8e9684eb-870c-4d3b-9e09-c71e285a81aa error: ErrorMiddleware: ErrorName=StorageError ErrorMessage="The table specified does not exist."  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=undefined ErrorHTTPHeaders={"x-ms-error-code":"TableNotFound","x-ms-request-id":"8e9684eb-870c-4d3b-9e09-c71e285a81aa","x-ms-version":"2023-01-03"} ErrorHTTPBody="{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:8e9684eb-870c-4d3b-9e09-c71e285a81aa\\nTime:2023-08-14T16:04:11.039Z\"}}}" ErrorStack="\"StorageError: The table specified does not exist.\\n    at StorageErrorFactory.getTableNotExist (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/errors/StorageErrorFactory.js:50:16)\\n    at LokiTableMetadataStore.getEntityCollection (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:585:53)\\n    at LokiTableMetadataStore.queryTableEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:251:44)\\n    at TableHandler.queryEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/handlers/TableHandler.js:316:81)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/middleware/HandlerMiddlewareFactory.js:58:18\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/ExpressMiddlewareFactory.js:77:63\\n    at Layer.handle [as handle_request] (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/layer.js:95:5)\\n    at trim_prefix (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:328:13)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:286:9\\n    at Function.process_params (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:346:12)\""
2023-08-14T16:04:11.039Z 8e9684eb-870c-4d3b-9e09-c71e285a81aa error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:11.039Z 8e9684eb-870c-4d3b-9e09-c71e285a81aa error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=TableNotFound
2023-08-14T16:04:11.039Z 8e9684eb-870c-4d3b-9e09-c71e285a81aa error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=8e9684eb-870c-4d3b-9e09-c71e285a81aa
2023-08-14T16:04:11.039Z 8e9684eb-870c-4d3b-9e09-c71e285a81aa error: ErrorMiddleware: Set HTTP Header: x-ms-version=2023-01-03
2023-08-14T16:04:11.041Z 8e9684eb-870c-4d3b-9e09-c71e285a81aa error: ErrorMiddleware: Set content type: application/json;odata=minimalmetadata;streaming=true;charset=utf-8
2023-08-14T16:04:11.041Z 8e9684eb-870c-4d3b-9e09-c71e285a81aa error: ErrorMiddleware: Set HTTP body: "{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:8e9684eb-870c-4d3b-9e09-c71e285a81aa\\nTime:2023-08-14T16:04:11.039Z\"}}}"
2023-08-14T16:04:11.041Z 8e9684eb-870c-4d3b-9e09-c71e285a81aa info: EndMiddleware: End response. TotalTimeInMS=3 StatusCode=404 StatusMessage=Not Found Headers={"server":"Azurite-Table/3.25.1","x-ms-error-code":"TableNotFound","x-ms-request-id":"8e9684eb-870c-4d3b-9e09-c71e285a81aa","x-ms-version":"2023-01-03","content-type":"application/json;odata=minimalmetadata;streaming=true;charset=utf-8"}
2023-08-14T16:04:11.042Z ec5813a7-56da-4def-8eab-3757bd86b8ed info: TableStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1/%24MetricsHourSecondaryTransactionsTable()?$top=1 RequestHeaders:{"host":"127.0.0.1:10002","connection":"keep-alive","accept":"application/json;odata=minimalmetadata","x-ms-version":"2019-02-02","dataserviceversion":"3.0","accept-encoding":"gzip,deflate","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-data-tables/13.1.2 core-rest-pipeline/1.11.0 Node/v18.15.0 OS/(x64-Linux-6.2.0-26-generic)","x-ms-client-request-id":"2bc0012a-65cd-47da-b1bf-7d31fa1544e4","x-ms-date":"Mon, 14 Aug 2023 16:04:11 GMT","authorization":"SharedKeyLite devstoreaccount1:RITryPzu16kXBWbwZ9HToZGKp0FblQx7O97e74iUKcU=","accept-language":"*","sec-fetch-mode":"cors"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:11.042Z ec5813a7-56da-4def-8eab-3757bd86b8ed debug: tableStorageContextMiddleware: Dispatch pattern string: /$MetricsHourSecondaryTransactionsTable()
2023-08-14T16:04:11.042Z ec5813a7-56da-4def-8eab-3757bd86b8ed info: tableStorageContextMiddleware: Account=devstoreaccount1 tableName=$MetricsHourSecondaryTransactionsTable
2023-08-14T16:04:11.042Z ec5813a7-56da-4def-8eab-3757bd86b8ed verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:11.042Z ec5813a7-56da-4def-8eab-3757bd86b8ed info: DispatchMiddleware: Operation=Table_QueryEntities
2023-08-14T16:04:11.042Z ec5813a7-56da-4def-8eab-3757bd86b8ed verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:11.042Z ec5813a7-56da-4def-8eab-3757bd86b8ed info: TableSharedKeyLiteAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:11.042Z ec5813a7-56da-4def-8eab-3757bd86b8ed info: TableSharedKeyLiteAuthenticator:validate() [STRING TO SIGN]:"Mon, 14 Aug 2023 16:04:11 GMT\n/devstoreaccount1/devstoreaccount1/%24MetricsHourSecondaryTransactionsTable()"
2023-08-14T16:04:11.042Z ec5813a7-56da-4def-8eab-3757bd86b8ed info: TableSharedKeyLiteAuthenticator:validate() Calculated authentication header based on key1: SharedKeyLite devstoreaccount1:RITryPzu16kXBWbwZ9HToZGKp0FblQx7O97e74iUKcU=
2023-08-14T16:04:11.042Z ec5813a7-56da-4def-8eab-3757bd86b8ed info: TableSharedKeyLiteAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:11.042Z ec5813a7-56da-4def-8eab-3757bd86b8ed verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:11.042Z ec5813a7-56da-4def-8eab-3757bd86b8ed info: HandlerMiddleware: DeserializedParameters={"options":{"queryOptions":{"top":1},"requestId":"2bc0012a-65cd-47da-b1bf-7d31fa1544e4","dataServiceVersion":"3.0"},"version":"2019-02-02"}
2023-08-14T16:04:11.043Z ec5813a7-56da-4def-8eab-3757bd86b8ed error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:11.043Z ec5813a7-56da-4def-8eab-3757bd86b8ed error: ErrorMiddleware: ErrorName=StorageError ErrorMessage="The table specified does not exist."  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=undefined ErrorHTTPHeaders={"x-ms-error-code":"TableNotFound","x-ms-request-id":"ec5813a7-56da-4def-8eab-3757bd86b8ed","x-ms-version":"2023-01-03"} ErrorHTTPBody="{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:ec5813a7-56da-4def-8eab-3757bd86b8ed\\nTime:2023-08-14T16:04:11.043Z\"}}}" ErrorStack="\"StorageError: The table specified does not exist.\\n    at StorageErrorFactory.getTableNotExist (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/errors/StorageErrorFactory.js:50:16)\\n    at LokiTableMetadataStore.getEntityCollection (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:585:53)\\n    at LokiTableMetadataStore.queryTableEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:251:44)\\n    at TableHandler.queryEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/handlers/TableHandler.js:316:81)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/middleware/HandlerMiddlewareFactory.js:58:18\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/ExpressMiddlewareFactory.js:77:63\\n    at Layer.handle [as handle_request] (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/layer.js:95:5)\\n    at trim_prefix (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:328:13)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:286:9\\n    at Function.process_params (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:346:12)\""
2023-08-14T16:04:11.043Z ec5813a7-56da-4def-8eab-3757bd86b8ed error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:11.043Z ec5813a7-56da-4def-8eab-3757bd86b8ed error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=TableNotFound
2023-08-14T16:04:11.043Z ec5813a7-56da-4def-8eab-3757bd86b8ed error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=ec5813a7-56da-4def-8eab-3757bd86b8ed
2023-08-14T16:04:11.043Z ec5813a7-56da-4def-8eab-3757bd86b8ed error: ErrorMiddleware: Set HTTP Header: x-ms-version=2023-01-03
2023-08-14T16:04:11.043Z ec5813a7-56da-4def-8eab-3757bd86b8ed error: ErrorMiddleware: Set content type: application/json;odata=minimalmetadata;streaming=true;charset=utf-8
2023-08-14T16:04:11.043Z ec5813a7-56da-4def-8eab-3757bd86b8ed error: ErrorMiddleware: Set HTTP body: "{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:ec5813a7-56da-4def-8eab-3757bd86b8ed\\nTime:2023-08-14T16:04:11.043Z\"}}}"
2023-08-14T16:04:11.043Z ec5813a7-56da-4def-8eab-3757bd86b8ed info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=404 StatusMessage=Not Found Headers={"server":"Azurite-Table/3.25.1","x-ms-error-code":"TableNotFound","x-ms-request-id":"ec5813a7-56da-4def-8eab-3757bd86b8ed","x-ms-version":"2023-01-03","content-type":"application/json;odata=minimalmetadata;streaming=true;charset=utf-8"}
2023-08-14T16:04:11.044Z de2ba2e9-e562-47fb-b420-ed4010497ddb info: TableStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1/%24MetricsMinutePrimaryTransactionsBlob()?$top=1 RequestHeaders:{"host":"127.0.0.1:10002","connection":"keep-alive","accept":"application/json;odata=minimalmetadata","x-ms-version":"2019-02-02","dataserviceversion":"3.0","accept-encoding":"gzip,deflate","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-data-tables/13.1.2 core-rest-pipeline/1.11.0 Node/v18.15.0 OS/(x64-Linux-6.2.0-26-generic)","x-ms-client-request-id":"78dce9bd-2ada-4b3a-8443-1f8722a0a17a","x-ms-date":"Mon, 14 Aug 2023 16:04:11 GMT","authorization":"SharedKeyLite devstoreaccount1:gpfUC2EqmnzcvkJgaAJtr+4HG+T+ooWGYUbzyCNA2S0=","accept-language":"*","sec-fetch-mode":"cors"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:11.044Z de2ba2e9-e562-47fb-b420-ed4010497ddb debug: tableStorageContextMiddleware: Dispatch pattern string: /$MetricsMinutePrimaryTransactionsBlob()
2023-08-14T16:04:11.044Z de2ba2e9-e562-47fb-b420-ed4010497ddb info: tableStorageContextMiddleware: Account=devstoreaccount1 tableName=$MetricsMinutePrimaryTransactionsBlob
2023-08-14T16:04:11.044Z de2ba2e9-e562-47fb-b420-ed4010497ddb verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:11.044Z de2ba2e9-e562-47fb-b420-ed4010497ddb info: DispatchMiddleware: Operation=Table_QueryEntities
2023-08-14T16:04:11.044Z de2ba2e9-e562-47fb-b420-ed4010497ddb verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:11.044Z de2ba2e9-e562-47fb-b420-ed4010497ddb info: TableSharedKeyLiteAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:11.044Z de2ba2e9-e562-47fb-b420-ed4010497ddb info: TableSharedKeyLiteAuthenticator:validate() [STRING TO SIGN]:"Mon, 14 Aug 2023 16:04:11 GMT\n/devstoreaccount1/devstoreaccount1/%24MetricsMinutePrimaryTransactionsBlob()"
2023-08-14T16:04:11.044Z de2ba2e9-e562-47fb-b420-ed4010497ddb info: TableSharedKeyLiteAuthenticator:validate() Calculated authentication header based on key1: SharedKeyLite devstoreaccount1:gpfUC2EqmnzcvkJgaAJtr+4HG+T+ooWGYUbzyCNA2S0=
2023-08-14T16:04:11.044Z de2ba2e9-e562-47fb-b420-ed4010497ddb info: TableSharedKeyLiteAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:11.044Z de2ba2e9-e562-47fb-b420-ed4010497ddb verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:11.045Z de2ba2e9-e562-47fb-b420-ed4010497ddb info: HandlerMiddleware: DeserializedParameters={"options":{"queryOptions":{"top":1},"requestId":"78dce9bd-2ada-4b3a-8443-1f8722a0a17a","dataServiceVersion":"3.0"},"version":"2019-02-02"}
2023-08-14T16:04:11.045Z de2ba2e9-e562-47fb-b420-ed4010497ddb error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:11.045Z de2ba2e9-e562-47fb-b420-ed4010497ddb error: ErrorMiddleware: ErrorName=StorageError ErrorMessage="The table specified does not exist."  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=undefined ErrorHTTPHeaders={"x-ms-error-code":"TableNotFound","x-ms-request-id":"de2ba2e9-e562-47fb-b420-ed4010497ddb","x-ms-version":"2023-01-03"} ErrorHTTPBody="{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:de2ba2e9-e562-47fb-b420-ed4010497ddb\\nTime:2023-08-14T16:04:11.045Z\"}}}" ErrorStack="\"StorageError: The table specified does not exist.\\n    at StorageErrorFactory.getTableNotExist (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/errors/StorageErrorFactory.js:50:16)\\n    at LokiTableMetadataStore.getEntityCollection (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:585:53)\\n    at LokiTableMetadataStore.queryTableEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:251:44)\\n    at TableHandler.queryEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/handlers/TableHandler.js:316:81)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/middleware/HandlerMiddlewareFactory.js:58:18\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/ExpressMiddlewareFactory.js:77:63\\n    at Layer.handle [as handle_request] (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/layer.js:95:5)\\n    at trim_prefix (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:328:13)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:286:9\\n    at Function.process_params (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:346:12)\""
2023-08-14T16:04:11.045Z de2ba2e9-e562-47fb-b420-ed4010497ddb error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:11.045Z de2ba2e9-e562-47fb-b420-ed4010497ddb error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=TableNotFound
2023-08-14T16:04:11.045Z de2ba2e9-e562-47fb-b420-ed4010497ddb error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=de2ba2e9-e562-47fb-b420-ed4010497ddb
2023-08-14T16:04:11.045Z de2ba2e9-e562-47fb-b420-ed4010497ddb error: ErrorMiddleware: Set HTTP Header: x-ms-version=2023-01-03
2023-08-14T16:04:11.045Z de2ba2e9-e562-47fb-b420-ed4010497ddb error: ErrorMiddleware: Set content type: application/json;odata=minimalmetadata;streaming=true;charset=utf-8
2023-08-14T16:04:11.045Z de2ba2e9-e562-47fb-b420-ed4010497ddb error: ErrorMiddleware: Set HTTP body: "{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:de2ba2e9-e562-47fb-b420-ed4010497ddb\\nTime:2023-08-14T16:04:11.045Z\"}}}"
2023-08-14T16:04:11.045Z de2ba2e9-e562-47fb-b420-ed4010497ddb info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=404 StatusMessage=Not Found Headers={"server":"Azurite-Table/3.25.1","x-ms-error-code":"TableNotFound","x-ms-request-id":"de2ba2e9-e562-47fb-b420-ed4010497ddb","x-ms-version":"2023-01-03","content-type":"application/json;odata=minimalmetadata;streaming=true;charset=utf-8"}
2023-08-14T16:04:11.046Z f2adfc3b-3d6a-410f-9b8c-2cbe03293baa info: TableStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1/%24MetricsMinutePrimaryTransactionsFile()?$top=1 RequestHeaders:{"host":"127.0.0.1:10002","connection":"keep-alive","accept":"application/json;odata=minimalmetadata","x-ms-version":"2019-02-02","dataserviceversion":"3.0","accept-encoding":"gzip,deflate","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-data-tables/13.1.2 core-rest-pipeline/1.11.0 Node/v18.15.0 OS/(x64-Linux-6.2.0-26-generic)","x-ms-client-request-id":"f3df3bc3-5f8a-42b3-98a7-b24869864f7b","x-ms-date":"Mon, 14 Aug 2023 16:04:11 GMT","authorization":"SharedKeyLite devstoreaccount1:Ma60a+iRT8DHaHxJdt9UhK58wOdxN2GPgzKZ9+CYDBw=","accept-language":"*","sec-fetch-mode":"cors"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:11.046Z f2adfc3b-3d6a-410f-9b8c-2cbe03293baa debug: tableStorageContextMiddleware: Dispatch pattern string: /$MetricsMinutePrimaryTransactionsFile()
2023-08-14T16:04:11.046Z f2adfc3b-3d6a-410f-9b8c-2cbe03293baa info: tableStorageContextMiddleware: Account=devstoreaccount1 tableName=$MetricsMinutePrimaryTransactionsFile
2023-08-14T16:04:11.046Z f2adfc3b-3d6a-410f-9b8c-2cbe03293baa verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:11.046Z f2adfc3b-3d6a-410f-9b8c-2cbe03293baa info: DispatchMiddleware: Operation=Table_QueryEntities
2023-08-14T16:04:11.046Z f2adfc3b-3d6a-410f-9b8c-2cbe03293baa verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:11.046Z f2adfc3b-3d6a-410f-9b8c-2cbe03293baa info: TableSharedKeyLiteAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:11.046Z f2adfc3b-3d6a-410f-9b8c-2cbe03293baa info: TableSharedKeyLiteAuthenticator:validate() [STRING TO SIGN]:"Mon, 14 Aug 2023 16:04:11 GMT\n/devstoreaccount1/devstoreaccount1/%24MetricsMinutePrimaryTransactionsFile()"
2023-08-14T16:04:11.057Z f2adfc3b-3d6a-410f-9b8c-2cbe03293baa info: TableSharedKeyLiteAuthenticator:validate() Calculated authentication header based on key1: SharedKeyLite devstoreaccount1:Ma60a+iRT8DHaHxJdt9UhK58wOdxN2GPgzKZ9+CYDBw=
2023-08-14T16:04:11.057Z f2adfc3b-3d6a-410f-9b8c-2cbe03293baa info: TableSharedKeyLiteAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:11.057Z f2adfc3b-3d6a-410f-9b8c-2cbe03293baa verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:11.057Z f2adfc3b-3d6a-410f-9b8c-2cbe03293baa info: HandlerMiddleware: DeserializedParameters={"options":{"queryOptions":{"top":1},"requestId":"f3df3bc3-5f8a-42b3-98a7-b24869864f7b","dataServiceVersion":"3.0"},"version":"2019-02-02"}
2023-08-14T16:04:11.057Z f2adfc3b-3d6a-410f-9b8c-2cbe03293baa error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:11.057Z f2adfc3b-3d6a-410f-9b8c-2cbe03293baa error: ErrorMiddleware: ErrorName=StorageError ErrorMessage="The table specified does not exist."  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=undefined ErrorHTTPHeaders={"x-ms-error-code":"TableNotFound","x-ms-request-id":"f2adfc3b-3d6a-410f-9b8c-2cbe03293baa","x-ms-version":"2023-01-03"} ErrorHTTPBody="{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:f2adfc3b-3d6a-410f-9b8c-2cbe03293baa\\nTime:2023-08-14T16:04:11.046Z\"}}}" ErrorStack="\"StorageError: The table specified does not exist.\\n    at StorageErrorFactory.getTableNotExist (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/errors/StorageErrorFactory.js:50:16)\\n    at LokiTableMetadataStore.getEntityCollection (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:585:53)\\n    at LokiTableMetadataStore.queryTableEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:251:44)\\n    at TableHandler.queryEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/handlers/TableHandler.js:316:81)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/middleware/HandlerMiddlewareFactory.js:58:18\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/ExpressMiddlewareFactory.js:77:63\\n    at Layer.handle [as handle_request] (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/layer.js:95:5)\\n    at trim_prefix (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:328:13)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:286:9\\n    at Function.process_params (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:346:12)\""
2023-08-14T16:04:11.057Z f2adfc3b-3d6a-410f-9b8c-2cbe03293baa error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:11.057Z f2adfc3b-3d6a-410f-9b8c-2cbe03293baa error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=TableNotFound
2023-08-14T16:04:11.057Z f2adfc3b-3d6a-410f-9b8c-2cbe03293baa error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=f2adfc3b-3d6a-410f-9b8c-2cbe03293baa
2023-08-14T16:04:11.057Z f2adfc3b-3d6a-410f-9b8c-2cbe03293baa error: ErrorMiddleware: Set HTTP Header: x-ms-version=2023-01-03
2023-08-14T16:04:11.057Z f2adfc3b-3d6a-410f-9b8c-2cbe03293baa error: ErrorMiddleware: Set content type: application/json;odata=minimalmetadata;streaming=true;charset=utf-8
2023-08-14T16:04:11.057Z f2adfc3b-3d6a-410f-9b8c-2cbe03293baa error: ErrorMiddleware: Set HTTP body: "{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:f2adfc3b-3d6a-410f-9b8c-2cbe03293baa\\nTime:2023-08-14T16:04:11.046Z\"}}}"
2023-08-14T16:04:11.057Z f2adfc3b-3d6a-410f-9b8c-2cbe03293baa info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=404 StatusMessage=Not Found Headers={"server":"Azurite-Table/3.25.1","x-ms-error-code":"TableNotFound","x-ms-request-id":"f2adfc3b-3d6a-410f-9b8c-2cbe03293baa","x-ms-version":"2023-01-03","content-type":"application/json;odata=minimalmetadata;streaming=true;charset=utf-8"}
2023-08-14T16:04:11.057Z 3173281a-0052-4c20-968a-f3c0b7f339e2 info: TableStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1/%24MetricsMinutePrimaryTransactionsQueue()?$top=1 RequestHeaders:{"host":"127.0.0.1:10002","connection":"keep-alive","accept":"application/json;odata=minimalmetadata","x-ms-version":"2019-02-02","dataserviceversion":"3.0","accept-encoding":"gzip,deflate","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-data-tables/13.1.2 core-rest-pipeline/1.11.0 Node/v18.15.0 OS/(x64-Linux-6.2.0-26-generic)","x-ms-client-request-id":"2a5d5e63-c9f7-44f9-b8c4-1ad911ebfb41","x-ms-date":"Mon, 14 Aug 2023 16:04:11 GMT","authorization":"SharedKeyLite devstoreaccount1:9kg0UsU1EXcqXyj9kortglTnTh5NbCzjA5Kmxf4tyBE=","accept-language":"*","sec-fetch-mode":"cors"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:11.057Z 3173281a-0052-4c20-968a-f3c0b7f339e2 debug: tableStorageContextMiddleware: Dispatch pattern string: /$MetricsMinutePrimaryTransactionsQueue()
2023-08-14T16:04:11.057Z 3173281a-0052-4c20-968a-f3c0b7f339e2 info: tableStorageContextMiddleware: Account=devstoreaccount1 tableName=$MetricsMinutePrimaryTransactionsQueue
2023-08-14T16:04:11.057Z 3173281a-0052-4c20-968a-f3c0b7f339e2 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:11.057Z 3173281a-0052-4c20-968a-f3c0b7f339e2 info: DispatchMiddleware: Operation=Table_QueryEntities
2023-08-14T16:04:11.057Z 3173281a-0052-4c20-968a-f3c0b7f339e2 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:11.057Z 3173281a-0052-4c20-968a-f3c0b7f339e2 info: TableSharedKeyLiteAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:11.057Z 3173281a-0052-4c20-968a-f3c0b7f339e2 info: TableSharedKeyLiteAuthenticator:validate() [STRING TO SIGN]:"Mon, 14 Aug 2023 16:04:11 GMT\n/devstoreaccount1/devstoreaccount1/%24MetricsMinutePrimaryTransactionsQueue()"
2023-08-14T16:04:11.057Z 3173281a-0052-4c20-968a-f3c0b7f339e2 info: TableSharedKeyLiteAuthenticator:validate() Calculated authentication header based on key1: SharedKeyLite devstoreaccount1:9kg0UsU1EXcqXyj9kortglTnTh5NbCzjA5Kmxf4tyBE=
2023-08-14T16:04:11.057Z 3173281a-0052-4c20-968a-f3c0b7f339e2 info: TableSharedKeyLiteAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:11.057Z 3173281a-0052-4c20-968a-f3c0b7f339e2 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:11.057Z 3173281a-0052-4c20-968a-f3c0b7f339e2 info: HandlerMiddleware: DeserializedParameters={"options":{"queryOptions":{"top":1},"requestId":"2a5d5e63-c9f7-44f9-b8c4-1ad911ebfb41","dataServiceVersion":"3.0"},"version":"2019-02-02"}
2023-08-14T16:04:11.057Z 3173281a-0052-4c20-968a-f3c0b7f339e2 error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:11.058Z 3173281a-0052-4c20-968a-f3c0b7f339e2 error: ErrorMiddleware: ErrorName=StorageError ErrorMessage="The table specified does not exist."  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=undefined ErrorHTTPHeaders={"x-ms-error-code":"TableNotFound","x-ms-request-id":"3173281a-0052-4c20-968a-f3c0b7f339e2","x-ms-version":"2023-01-03"} ErrorHTTPBody="{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:3173281a-0052-4c20-968a-f3c0b7f339e2\\nTime:2023-08-14T16:04:11.047Z\"}}}" ErrorStack="\"StorageError: The table specified does not exist.\\n    at StorageErrorFactory.getTableNotExist (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/errors/StorageErrorFactory.js:50:16)\\n    at LokiTableMetadataStore.getEntityCollection (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:585:53)\\n    at LokiTableMetadataStore.queryTableEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:251:44)\\n    at TableHandler.queryEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/handlers/TableHandler.js:316:81)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/middleware/HandlerMiddlewareFactory.js:58:18\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/ExpressMiddlewareFactory.js:77:63\\n    at Layer.handle [as handle_request] (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/layer.js:95:5)\\n    at trim_prefix (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:328:13)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:286:9\\n    at Function.process_params (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:346:12)\""
2023-08-14T16:04:11.058Z 3173281a-0052-4c20-968a-f3c0b7f339e2 error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:11.058Z 3173281a-0052-4c20-968a-f3c0b7f339e2 error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=TableNotFound
2023-08-14T16:04:11.058Z 3173281a-0052-4c20-968a-f3c0b7f339e2 error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=3173281a-0052-4c20-968a-f3c0b7f339e2
2023-08-14T16:04:11.058Z 3173281a-0052-4c20-968a-f3c0b7f339e2 error: ErrorMiddleware: Set HTTP Header: x-ms-version=2023-01-03
2023-08-14T16:04:11.058Z 3173281a-0052-4c20-968a-f3c0b7f339e2 error: ErrorMiddleware: Set content type: application/json;odata=minimalmetadata;streaming=true;charset=utf-8
2023-08-14T16:04:11.058Z 3173281a-0052-4c20-968a-f3c0b7f339e2 error: ErrorMiddleware: Set HTTP body: "{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:3173281a-0052-4c20-968a-f3c0b7f339e2\\nTime:2023-08-14T16:04:11.047Z\"}}}"
2023-08-14T16:04:11.058Z 3173281a-0052-4c20-968a-f3c0b7f339e2 info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=404 StatusMessage=Not Found Headers={"server":"Azurite-Table/3.25.1","x-ms-error-code":"TableNotFound","x-ms-request-id":"3173281a-0052-4c20-968a-f3c0b7f339e2","x-ms-version":"2023-01-03","content-type":"application/json;odata=minimalmetadata;streaming=true;charset=utf-8"}
2023-08-14T16:04:11.058Z 765086e9-a031-483e-b4a9-47f1bf9da356 info: TableStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1/%24MetricsMinutePrimaryTransactionsTable()?$top=1 RequestHeaders:{"host":"127.0.0.1:10002","connection":"keep-alive","accept":"application/json;odata=minimalmetadata","x-ms-version":"2019-02-02","dataserviceversion":"3.0","accept-encoding":"gzip,deflate","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-data-tables/13.1.2 core-rest-pipeline/1.11.0 Node/v18.15.0 OS/(x64-Linux-6.2.0-26-generic)","x-ms-client-request-id":"df99b29e-509d-4724-8e2a-9533a573f0d7","x-ms-date":"Mon, 14 Aug 2023 16:04:11 GMT","authorization":"SharedKeyLite devstoreaccount1:cyxxlas9BsxVe4DkF0qxCsaS9K1h1mDTx+gdQcG53jg=","accept-language":"*","sec-fetch-mode":"cors"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:11.058Z 765086e9-a031-483e-b4a9-47f1bf9da356 debug: tableStorageContextMiddleware: Dispatch pattern string: /$MetricsMinutePrimaryTransactionsTable()
2023-08-14T16:04:11.058Z 765086e9-a031-483e-b4a9-47f1bf9da356 info: tableStorageContextMiddleware: Account=devstoreaccount1 tableName=$MetricsMinutePrimaryTransactionsTable
2023-08-14T16:04:11.058Z 765086e9-a031-483e-b4a9-47f1bf9da356 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:11.058Z 765086e9-a031-483e-b4a9-47f1bf9da356 info: DispatchMiddleware: Operation=Table_QueryEntities
2023-08-14T16:04:11.058Z 765086e9-a031-483e-b4a9-47f1bf9da356 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:11.058Z 765086e9-a031-483e-b4a9-47f1bf9da356 info: TableSharedKeyLiteAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:11.058Z 765086e9-a031-483e-b4a9-47f1bf9da356 info: TableSharedKeyLiteAuthenticator:validate() [STRING TO SIGN]:"Mon, 14 Aug 2023 16:04:11 GMT\n/devstoreaccount1/devstoreaccount1/%24MetricsMinutePrimaryTransactionsTable()"
2023-08-14T16:04:11.058Z 765086e9-a031-483e-b4a9-47f1bf9da356 info: TableSharedKeyLiteAuthenticator:validate() Calculated authentication header based on key1: SharedKeyLite devstoreaccount1:cyxxlas9BsxVe4DkF0qxCsaS9K1h1mDTx+gdQcG53jg=
2023-08-14T16:04:11.058Z 765086e9-a031-483e-b4a9-47f1bf9da356 info: TableSharedKeyLiteAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:11.058Z 765086e9-a031-483e-b4a9-47f1bf9da356 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:11.058Z 765086e9-a031-483e-b4a9-47f1bf9da356 info: HandlerMiddleware: DeserializedParameters={"options":{"queryOptions":{"top":1},"requestId":"df99b29e-509d-4724-8e2a-9533a573f0d7","dataServiceVersion":"3.0"},"version":"2019-02-02"}
2023-08-14T16:04:11.058Z 765086e9-a031-483e-b4a9-47f1bf9da356 error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:11.058Z 765086e9-a031-483e-b4a9-47f1bf9da356 error: ErrorMiddleware: ErrorName=StorageError ErrorMessage="The table specified does not exist."  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=undefined ErrorHTTPHeaders={"x-ms-error-code":"TableNotFound","x-ms-request-id":"765086e9-a031-483e-b4a9-47f1bf9da356","x-ms-version":"2023-01-03"} ErrorHTTPBody="{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:765086e9-a031-483e-b4a9-47f1bf9da356\\nTime:2023-08-14T16:04:11.049Z\"}}}" ErrorStack="\"StorageError: The table specified does not exist.\\n    at StorageErrorFactory.getTableNotExist (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/errors/StorageErrorFactory.js:50:16)\\n    at LokiTableMetadataStore.getEntityCollection (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:585:53)\\n    at LokiTableMetadataStore.queryTableEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:251:44)\\n    at TableHandler.queryEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/handlers/TableHandler.js:316:81)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/middleware/HandlerMiddlewareFactory.js:58:18\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/ExpressMiddlewareFactory.js:77:63\\n    at Layer.handle [as handle_request] (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/layer.js:95:5)\\n    at trim_prefix (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:328:13)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:286:9\\n    at Function.process_params (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:346:12)\""
2023-08-14T16:04:11.058Z 765086e9-a031-483e-b4a9-47f1bf9da356 error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:11.058Z 765086e9-a031-483e-b4a9-47f1bf9da356 error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=TableNotFound
2023-08-14T16:04:11.058Z 765086e9-a031-483e-b4a9-47f1bf9da356 error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=765086e9-a031-483e-b4a9-47f1bf9da356
2023-08-14T16:04:11.058Z 765086e9-a031-483e-b4a9-47f1bf9da356 error: ErrorMiddleware: Set HTTP Header: x-ms-version=2023-01-03
2023-08-14T16:04:11.058Z 765086e9-a031-483e-b4a9-47f1bf9da356 error: ErrorMiddleware: Set content type: application/json;odata=minimalmetadata;streaming=true;charset=utf-8
2023-08-14T16:04:11.058Z 765086e9-a031-483e-b4a9-47f1bf9da356 error: ErrorMiddleware: Set HTTP body: "{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:765086e9-a031-483e-b4a9-47f1bf9da356\\nTime:2023-08-14T16:04:11.049Z\"}}}"
2023-08-14T16:04:11.058Z 765086e9-a031-483e-b4a9-47f1bf9da356 info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=404 StatusMessage=Not Found Headers={"server":"Azurite-Table/3.25.1","x-ms-error-code":"TableNotFound","x-ms-request-id":"765086e9-a031-483e-b4a9-47f1bf9da356","x-ms-version":"2023-01-03","content-type":"application/json;odata=minimalmetadata;streaming=true;charset=utf-8"}
2023-08-14T16:04:11.058Z 26cb1658-2d83-4dde-b5c7-e9872427697c info: TableStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1/%24MetricsMinuteSecondaryTransactionsBlob()?$top=1 RequestHeaders:{"host":"127.0.0.1:10002","connection":"keep-alive","accept":"application/json;odata=minimalmetadata","x-ms-version":"2019-02-02","dataserviceversion":"3.0","accept-encoding":"gzip,deflate","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-data-tables/13.1.2 core-rest-pipeline/1.11.0 Node/v18.15.0 OS/(x64-Linux-6.2.0-26-generic)","x-ms-client-request-id":"0c89c316-dc37-4393-a412-4c3b086f5be9","x-ms-date":"Mon, 14 Aug 2023 16:04:11 GMT","authorization":"SharedKeyLite devstoreaccount1:sbKCDa9Ju0SM+P6r72Q8vbPITRdVtGYTXoHtfvfp1g4=","accept-language":"*","sec-fetch-mode":"cors"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:11.059Z 26cb1658-2d83-4dde-b5c7-e9872427697c debug: tableStorageContextMiddleware: Dispatch pattern string: /$MetricsMinuteSecondaryTransactionsBlob()
2023-08-14T16:04:11.059Z 26cb1658-2d83-4dde-b5c7-e9872427697c info: tableStorageContextMiddleware: Account=devstoreaccount1 tableName=$MetricsMinuteSecondaryTransactionsBlob
2023-08-14T16:04:11.059Z 26cb1658-2d83-4dde-b5c7-e9872427697c verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:11.059Z 26cb1658-2d83-4dde-b5c7-e9872427697c info: DispatchMiddleware: Operation=Table_QueryEntities
2023-08-14T16:04:11.059Z 26cb1658-2d83-4dde-b5c7-e9872427697c verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:11.059Z 26cb1658-2d83-4dde-b5c7-e9872427697c info: TableSharedKeyLiteAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:11.059Z 26cb1658-2d83-4dde-b5c7-e9872427697c info: TableSharedKeyLiteAuthenticator:validate() [STRING TO SIGN]:"Mon, 14 Aug 2023 16:04:11 GMT\n/devstoreaccount1/devstoreaccount1/%24MetricsMinuteSecondaryTransactionsBlob()"
2023-08-14T16:04:11.059Z 26cb1658-2d83-4dde-b5c7-e9872427697c info: TableSharedKeyLiteAuthenticator:validate() Calculated authentication header based on key1: SharedKeyLite devstoreaccount1:sbKCDa9Ju0SM+P6r72Q8vbPITRdVtGYTXoHtfvfp1g4=
2023-08-14T16:04:11.059Z 26cb1658-2d83-4dde-b5c7-e9872427697c info: TableSharedKeyLiteAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:11.059Z 26cb1658-2d83-4dde-b5c7-e9872427697c verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:11.059Z 26cb1658-2d83-4dde-b5c7-e9872427697c info: HandlerMiddleware: DeserializedParameters={"options":{"queryOptions":{"top":1},"requestId":"0c89c316-dc37-4393-a412-4c3b086f5be9","dataServiceVersion":"3.0"},"version":"2019-02-02"}
2023-08-14T16:04:11.059Z 26cb1658-2d83-4dde-b5c7-e9872427697c error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:11.059Z 26cb1658-2d83-4dde-b5c7-e9872427697c error: ErrorMiddleware: ErrorName=StorageError ErrorMessage="The table specified does not exist."  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=undefined ErrorHTTPHeaders={"x-ms-error-code":"TableNotFound","x-ms-request-id":"26cb1658-2d83-4dde-b5c7-e9872427697c","x-ms-version":"2023-01-03"} ErrorHTTPBody="{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:26cb1658-2d83-4dde-b5c7-e9872427697c\\nTime:2023-08-14T16:04:11.050Z\"}}}" ErrorStack="\"StorageError: The table specified does not exist.\\n    at StorageErrorFactory.getTableNotExist (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/errors/StorageErrorFactory.js:50:16)\\n    at LokiTableMetadataStore.getEntityCollection (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:585:53)\\n    at LokiTableMetadataStore.queryTableEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:251:44)\\n    at TableHandler.queryEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/handlers/TableHandler.js:316:81)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/middleware/HandlerMiddlewareFactory.js:58:18\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/ExpressMiddlewareFactory.js:77:63\\n    at Layer.handle [as handle_request] (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/layer.js:95:5)\\n    at trim_prefix (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:328:13)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:286:9\\n    at Function.process_params (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:346:12)\""
2023-08-14T16:04:11.059Z 26cb1658-2d83-4dde-b5c7-e9872427697c error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:11.059Z 26cb1658-2d83-4dde-b5c7-e9872427697c error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=TableNotFound
2023-08-14T16:04:11.059Z 26cb1658-2d83-4dde-b5c7-e9872427697c error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=26cb1658-2d83-4dde-b5c7-e9872427697c
2023-08-14T16:04:11.059Z 26cb1658-2d83-4dde-b5c7-e9872427697c error: ErrorMiddleware: Set HTTP Header: x-ms-version=2023-01-03
2023-08-14T16:04:11.059Z 26cb1658-2d83-4dde-b5c7-e9872427697c error: ErrorMiddleware: Set content type: application/json;odata=minimalmetadata;streaming=true;charset=utf-8
2023-08-14T16:04:11.059Z 26cb1658-2d83-4dde-b5c7-e9872427697c error: ErrorMiddleware: Set HTTP body: "{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:26cb1658-2d83-4dde-b5c7-e9872427697c\\nTime:2023-08-14T16:04:11.050Z\"}}}"
2023-08-14T16:04:11.059Z 26cb1658-2d83-4dde-b5c7-e9872427697c info: EndMiddleware: End response. TotalTimeInMS=0 StatusCode=404 StatusMessage=Not Found Headers={"server":"Azurite-Table/3.25.1","x-ms-error-code":"TableNotFound","x-ms-request-id":"26cb1658-2d83-4dde-b5c7-e9872427697c","x-ms-version":"2023-01-03","content-type":"application/json;odata=minimalmetadata;streaming=true;charset=utf-8"}
2023-08-14T16:04:11.059Z 01a29524-3afa-4319-ace3-ba001cc67e4a info: TableStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1/%24MetricsMinuteSecondaryTransactionsFile()?$top=1 RequestHeaders:{"host":"127.0.0.1:10002","connection":"keep-alive","accept":"application/json;odata=minimalmetadata","x-ms-version":"2019-02-02","dataserviceversion":"3.0","accept-encoding":"gzip,deflate","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-data-tables/13.1.2 core-rest-pipeline/1.11.0 Node/v18.15.0 OS/(x64-Linux-6.2.0-26-generic)","x-ms-client-request-id":"27803b3e-d0ee-4615-82d4-b543f1ac5991","x-ms-date":"Mon, 14 Aug 2023 16:04:11 GMT","authorization":"SharedKeyLite devstoreaccount1:mNTxGK6gCLhXsiv8kRbgVkfp6OTBOzWHJ1RPwA/Kr9U=","accept-language":"*","sec-fetch-mode":"cors"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:11.059Z 01a29524-3afa-4319-ace3-ba001cc67e4a debug: tableStorageContextMiddleware: Dispatch pattern string: /$MetricsMinuteSecondaryTransactionsFile()
2023-08-14T16:04:11.059Z 01a29524-3afa-4319-ace3-ba001cc67e4a info: tableStorageContextMiddleware: Account=devstoreaccount1 tableName=$MetricsMinuteSecondaryTransactionsFile
2023-08-14T16:04:11.059Z 01a29524-3afa-4319-ace3-ba001cc67e4a verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:11.059Z 01a29524-3afa-4319-ace3-ba001cc67e4a info: DispatchMiddleware: Operation=Table_QueryEntities
2023-08-14T16:04:11.059Z 01a29524-3afa-4319-ace3-ba001cc67e4a verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:11.059Z 01a29524-3afa-4319-ace3-ba001cc67e4a info: TableSharedKeyLiteAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:11.059Z 01a29524-3afa-4319-ace3-ba001cc67e4a info: TableSharedKeyLiteAuthenticator:validate() [STRING TO SIGN]:"Mon, 14 Aug 2023 16:04:11 GMT\n/devstoreaccount1/devstoreaccount1/%24MetricsMinuteSecondaryTransactionsFile()"
2023-08-14T16:04:11.059Z 01a29524-3afa-4319-ace3-ba001cc67e4a info: TableSharedKeyLiteAuthenticator:validate() Calculated authentication header based on key1: SharedKeyLite devstoreaccount1:mNTxGK6gCLhXsiv8kRbgVkfp6OTBOzWHJ1RPwA/Kr9U=
2023-08-14T16:04:11.059Z 01a29524-3afa-4319-ace3-ba001cc67e4a info: TableSharedKeyLiteAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:11.059Z 01a29524-3afa-4319-ace3-ba001cc67e4a verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:11.059Z 01a29524-3afa-4319-ace3-ba001cc67e4a info: HandlerMiddleware: DeserializedParameters={"options":{"queryOptions":{"top":1},"requestId":"27803b3e-d0ee-4615-82d4-b543f1ac5991","dataServiceVersion":"3.0"},"version":"2019-02-02"}
2023-08-14T16:04:11.059Z 01a29524-3afa-4319-ace3-ba001cc67e4a error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:11.059Z 01a29524-3afa-4319-ace3-ba001cc67e4a error: ErrorMiddleware: ErrorName=StorageError ErrorMessage="The table specified does not exist."  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=undefined ErrorHTTPHeaders={"x-ms-error-code":"TableNotFound","x-ms-request-id":"01a29524-3afa-4319-ace3-ba001cc67e4a","x-ms-version":"2023-01-03"} ErrorHTTPBody="{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:01a29524-3afa-4319-ace3-ba001cc67e4a\\nTime:2023-08-14T16:04:11.051Z\"}}}" ErrorStack="\"StorageError: The table specified does not exist.\\n    at StorageErrorFactory.getTableNotExist (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/errors/StorageErrorFactory.js:50:16)\\n    at LokiTableMetadataStore.getEntityCollection (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:585:53)\\n    at LokiTableMetadataStore.queryTableEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:251:44)\\n    at TableHandler.queryEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/handlers/TableHandler.js:316:81)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/middleware/HandlerMiddlewareFactory.js:58:18\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/ExpressMiddlewareFactory.js:77:63\\n    at Layer.handle [as handle_request] (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/layer.js:95:5)\\n    at trim_prefix (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:328:13)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:286:9\\n    at Function.process_params (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:346:12)\""
2023-08-14T16:04:11.059Z 01a29524-3afa-4319-ace3-ba001cc67e4a error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:11.059Z 01a29524-3afa-4319-ace3-ba001cc67e4a error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=TableNotFound
2023-08-14T16:04:11.059Z 01a29524-3afa-4319-ace3-ba001cc67e4a error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=01a29524-3afa-4319-ace3-ba001cc67e4a
2023-08-14T16:04:11.059Z 01a29524-3afa-4319-ace3-ba001cc67e4a error: ErrorMiddleware: Set HTTP Header: x-ms-version=2023-01-03
2023-08-14T16:04:11.059Z 01a29524-3afa-4319-ace3-ba001cc67e4a error: ErrorMiddleware: Set content type: application/json;odata=minimalmetadata;streaming=true;charset=utf-8
2023-08-14T16:04:11.059Z 01a29524-3afa-4319-ace3-ba001cc67e4a error: ErrorMiddleware: Set HTTP body: "{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:01a29524-3afa-4319-ace3-ba001cc67e4a\\nTime:2023-08-14T16:04:11.051Z\"}}}"
2023-08-14T16:04:11.059Z 01a29524-3afa-4319-ace3-ba001cc67e4a info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=404 StatusMessage=Not Found Headers={"server":"Azurite-Table/3.25.1","x-ms-error-code":"TableNotFound","x-ms-request-id":"01a29524-3afa-4319-ace3-ba001cc67e4a","x-ms-version":"2023-01-03","content-type":"application/json;odata=minimalmetadata;streaming=true;charset=utf-8"}
2023-08-14T16:04:11.059Z 6a35b906-ea0f-483d-a33a-5f5be2c95396 info: TableStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1/%24MetricsMinuteSecondaryTransactionsQueue()?$top=1 RequestHeaders:{"host":"127.0.0.1:10002","connection":"keep-alive","accept":"application/json;odata=minimalmetadata","x-ms-version":"2019-02-02","dataserviceversion":"3.0","accept-encoding":"gzip,deflate","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-data-tables/13.1.2 core-rest-pipeline/1.11.0 Node/v18.15.0 OS/(x64-Linux-6.2.0-26-generic)","x-ms-client-request-id":"d7c9d4b9-eac0-4f6b-a407-31efc8b28fd5","x-ms-date":"Mon, 14 Aug 2023 16:04:11 GMT","authorization":"SharedKeyLite devstoreaccount1:uhmq1AFgdEARN32unWRvqN/ZvYmXXv+krD+vjuG3P4o=","accept-language":"*","sec-fetch-mode":"cors"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:11.059Z 6a35b906-ea0f-483d-a33a-5f5be2c95396 debug: tableStorageContextMiddleware: Dispatch pattern string: /$MetricsMinuteSecondaryTransactionsQueue()
2023-08-14T16:04:11.059Z 6a35b906-ea0f-483d-a33a-5f5be2c95396 info: tableStorageContextMiddleware: Account=devstoreaccount1 tableName=$MetricsMinuteSecondaryTransactionsQueue
2023-08-14T16:04:11.059Z 6a35b906-ea0f-483d-a33a-5f5be2c95396 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:11.059Z 6a35b906-ea0f-483d-a33a-5f5be2c95396 info: DispatchMiddleware: Operation=Table_QueryEntities
2023-08-14T16:04:11.059Z 6a35b906-ea0f-483d-a33a-5f5be2c95396 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:11.059Z 6a35b906-ea0f-483d-a33a-5f5be2c95396 info: TableSharedKeyLiteAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:11.059Z 6a35b906-ea0f-483d-a33a-5f5be2c95396 info: TableSharedKeyLiteAuthenticator:validate() [STRING TO SIGN]:"Mon, 14 Aug 2023 16:04:11 GMT\n/devstoreaccount1/devstoreaccount1/%24MetricsMinuteSecondaryTransactionsQueue()"
2023-08-14T16:04:11.059Z 6a35b906-ea0f-483d-a33a-5f5be2c95396 info: TableSharedKeyLiteAuthenticator:validate() Calculated authentication header based on key1: SharedKeyLite devstoreaccount1:uhmq1AFgdEARN32unWRvqN/ZvYmXXv+krD+vjuG3P4o=
2023-08-14T16:04:11.059Z 6a35b906-ea0f-483d-a33a-5f5be2c95396 info: TableSharedKeyLiteAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:11.060Z 6a35b906-ea0f-483d-a33a-5f5be2c95396 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:11.060Z 6a35b906-ea0f-483d-a33a-5f5be2c95396 info: HandlerMiddleware: DeserializedParameters={"options":{"queryOptions":{"top":1},"requestId":"d7c9d4b9-eac0-4f6b-a407-31efc8b28fd5","dataServiceVersion":"3.0"},"version":"2019-02-02"}
2023-08-14T16:04:11.060Z 6a35b906-ea0f-483d-a33a-5f5be2c95396 error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:11.060Z 6a35b906-ea0f-483d-a33a-5f5be2c95396 error: ErrorMiddleware: ErrorName=StorageError ErrorMessage="The table specified does not exist."  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=undefined ErrorHTTPHeaders={"x-ms-error-code":"TableNotFound","x-ms-request-id":"6a35b906-ea0f-483d-a33a-5f5be2c95396","x-ms-version":"2023-01-03"} ErrorHTTPBody="{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:6a35b906-ea0f-483d-a33a-5f5be2c95396\\nTime:2023-08-14T16:04:11.052Z\"}}}" ErrorStack="\"StorageError: The table specified does not exist.\\n    at StorageErrorFactory.getTableNotExist (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/errors/StorageErrorFactory.js:50:16)\\n    at LokiTableMetadataStore.getEntityCollection (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:585:53)\\n    at LokiTableMetadataStore.queryTableEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:251:44)\\n    at TableHandler.queryEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/handlers/TableHandler.js:316:81)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/middleware/HandlerMiddlewareFactory.js:58:18\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/ExpressMiddlewareFactory.js:77:63\\n    at Layer.handle [as handle_request] (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/layer.js:95:5)\\n    at trim_prefix (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:328:13)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:286:9\\n    at Function.process_params (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:346:12)\""
2023-08-14T16:04:11.060Z 6a35b906-ea0f-483d-a33a-5f5be2c95396 error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:11.060Z 6a35b906-ea0f-483d-a33a-5f5be2c95396 error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=TableNotFound
2023-08-14T16:04:11.060Z 6a35b906-ea0f-483d-a33a-5f5be2c95396 error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=6a35b906-ea0f-483d-a33a-5f5be2c95396
2023-08-14T16:04:11.060Z 6a35b906-ea0f-483d-a33a-5f5be2c95396 error: ErrorMiddleware: Set HTTP Header: x-ms-version=2023-01-03
2023-08-14T16:04:11.060Z 6a35b906-ea0f-483d-a33a-5f5be2c95396 error: ErrorMiddleware: Set content type: application/json;odata=minimalmetadata;streaming=true;charset=utf-8
2023-08-14T16:04:11.060Z 6a35b906-ea0f-483d-a33a-5f5be2c95396 error: ErrorMiddleware: Set HTTP body: "{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:6a35b906-ea0f-483d-a33a-5f5be2c95396\\nTime:2023-08-14T16:04:11.052Z\"}}}"
2023-08-14T16:04:11.060Z 6a35b906-ea0f-483d-a33a-5f5be2c95396 info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=404 StatusMessage=Not Found Headers={"server":"Azurite-Table/3.25.1","x-ms-error-code":"TableNotFound","x-ms-request-id":"6a35b906-ea0f-483d-a33a-5f5be2c95396","x-ms-version":"2023-01-03","content-type":"application/json;odata=minimalmetadata;streaming=true;charset=utf-8"}
2023-08-14T16:04:11.060Z 77e03d39-897d-4ffa-84e0-dca30b369102 info: TableStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1/%24MetricsMinuteSecondaryTransactionsTable()?$top=1 RequestHeaders:{"host":"127.0.0.1:10002","connection":"keep-alive","accept":"application/json;odata=minimalmetadata","x-ms-version":"2019-02-02","dataserviceversion":"3.0","accept-encoding":"gzip,deflate","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-data-tables/13.1.2 core-rest-pipeline/1.11.0 Node/v18.15.0 OS/(x64-Linux-6.2.0-26-generic)","x-ms-client-request-id":"2176345f-97bb-4789-9358-b8b65a94d197","x-ms-date":"Mon, 14 Aug 2023 16:04:11 GMT","authorization":"SharedKeyLite devstoreaccount1:dgUEoKZE/zCIuQ/skQG+r7Mwg8T2azpz2nhe1CUOiVM=","accept-language":"*","sec-fetch-mode":"cors"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:11.060Z 77e03d39-897d-4ffa-84e0-dca30b369102 debug: tableStorageContextMiddleware: Dispatch pattern string: /$MetricsMinuteSecondaryTransactionsTable()
2023-08-14T16:04:11.060Z 77e03d39-897d-4ffa-84e0-dca30b369102 info: tableStorageContextMiddleware: Account=devstoreaccount1 tableName=$MetricsMinuteSecondaryTransactionsTable
2023-08-14T16:04:11.060Z 77e03d39-897d-4ffa-84e0-dca30b369102 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:11.060Z 77e03d39-897d-4ffa-84e0-dca30b369102 info: DispatchMiddleware: Operation=Table_QueryEntities
2023-08-14T16:04:11.060Z 77e03d39-897d-4ffa-84e0-dca30b369102 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:11.060Z 77e03d39-897d-4ffa-84e0-dca30b369102 info: TableSharedKeyLiteAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:11.060Z 77e03d39-897d-4ffa-84e0-dca30b369102 info: TableSharedKeyLiteAuthenticator:validate() [STRING TO SIGN]:"Mon, 14 Aug 2023 16:04:11 GMT\n/devstoreaccount1/devstoreaccount1/%24MetricsMinuteSecondaryTransactionsTable()"
2023-08-14T16:04:11.060Z 77e03d39-897d-4ffa-84e0-dca30b369102 info: TableSharedKeyLiteAuthenticator:validate() Calculated authentication header based on key1: SharedKeyLite devstoreaccount1:dgUEoKZE/zCIuQ/skQG+r7Mwg8T2azpz2nhe1CUOiVM=
2023-08-14T16:04:11.060Z 77e03d39-897d-4ffa-84e0-dca30b369102 info: TableSharedKeyLiteAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:11.060Z 77e03d39-897d-4ffa-84e0-dca30b369102 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:11.060Z 77e03d39-897d-4ffa-84e0-dca30b369102 info: HandlerMiddleware: DeserializedParameters={"options":{"queryOptions":{"top":1},"requestId":"2176345f-97bb-4789-9358-b8b65a94d197","dataServiceVersion":"3.0"},"version":"2019-02-02"}
2023-08-14T16:04:11.060Z 77e03d39-897d-4ffa-84e0-dca30b369102 error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:11.060Z 77e03d39-897d-4ffa-84e0-dca30b369102 error: ErrorMiddleware: ErrorName=StorageError ErrorMessage="The table specified does not exist."  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=undefined ErrorHTTPHeaders={"x-ms-error-code":"TableNotFound","x-ms-request-id":"77e03d39-897d-4ffa-84e0-dca30b369102","x-ms-version":"2023-01-03"} ErrorHTTPBody="{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:77e03d39-897d-4ffa-84e0-dca30b369102\\nTime:2023-08-14T16:04:11.053Z\"}}}" ErrorStack="\"StorageError: The table specified does not exist.\\n    at StorageErrorFactory.getTableNotExist (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/errors/StorageErrorFactory.js:50:16)\\n    at LokiTableMetadataStore.getEntityCollection (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:585:53)\\n    at LokiTableMetadataStore.queryTableEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/persistence/LokiTableMetadataStore.js:251:44)\\n    at TableHandler.queryEntities (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/handlers/TableHandler.js:316:81)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/middleware/HandlerMiddlewareFactory.js:58:18\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/table/generated/ExpressMiddlewareFactory.js:77:63\\n    at Layer.handle [as handle_request] (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/layer.js:95:5)\\n    at trim_prefix (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:328:13)\\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:286:9\\n    at Function.process_params (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:346:12)\""
2023-08-14T16:04:11.060Z 77e03d39-897d-4ffa-84e0-dca30b369102 error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:11.060Z 77e03d39-897d-4ffa-84e0-dca30b369102 error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=TableNotFound
2023-08-14T16:04:11.060Z 77e03d39-897d-4ffa-84e0-dca30b369102 error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=77e03d39-897d-4ffa-84e0-dca30b369102
2023-08-14T16:04:11.060Z 77e03d39-897d-4ffa-84e0-dca30b369102 error: ErrorMiddleware: Set HTTP Header: x-ms-version=2023-01-03
2023-08-14T16:04:11.060Z 77e03d39-897d-4ffa-84e0-dca30b369102 error: ErrorMiddleware: Set content type: application/json;odata=minimalmetadata;streaming=true;charset=utf-8
2023-08-14T16:04:11.060Z 77e03d39-897d-4ffa-84e0-dca30b369102 error: ErrorMiddleware: Set HTTP body: "{\"odata.error\":{\"code\":\"TableNotFound\",\"message\":{\"lang\":\"en-US\",\"value\":\"The table specified does not exist.\\nRequestId:77e03d39-897d-4ffa-84e0-dca30b369102\\nTime:2023-08-14T16:04:11.053Z\"}}}"
2023-08-14T16:04:11.060Z 77e03d39-897d-4ffa-84e0-dca30b369102 info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=404 StatusMessage=Not Found Headers={"server":"Azurite-Table/3.25.1","x-ms-error-code":"TableNotFound","x-ms-request-id":"77e03d39-897d-4ffa-84e0-dca30b369102","x-ms-version":"2023-01-03","content-type":"application/json;odata=minimalmetadata;streaming=true;charset=utf-8"}
2023-08-14T16:04:33.862Z 1a733654-8387-42f3-8917-19ea4f2a86f0 info: BlobStorageContextMiddleware: RequestMethod=PUT RequestURL=http://127.0.0.1/devstoreaccount1/oleg?restype=container RequestHeaders:{"host":"127.0.0.1:10000","connection":"keep-alive","x-ms-version":"2019-07-07","accept":"application/xml","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-storageblob/12.12.0 (NODE-VERSION v18.15.0; Linux 6.2.0-26-generic)","x-ms-client-request-id":"9b5d0bd3-c4b9-496d-b5b6-36a7d3114607","x-ms-date":"Mon, 14 Aug 2023 16:04:33 GMT","authorization":"SharedKey devstoreaccount1:RLuTmvJBo/mfie06RDTDQlreZqwN4s9AK9eq9C6WVGY=","accept-language":"*","sec-fetch-mode":"cors","accept-encoding":"gzip, deflate","content-length":"0"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:33.862Z 1a733654-8387-42f3-8917-19ea4f2a86f0 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=
2023-08-14T16:04:33.862Z 1a733654-8387-42f3-8917-19ea4f2a86f0 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:33.863Z 1a733654-8387-42f3-8917-19ea4f2a86f0 info: DispatchMiddleware: Operation=Container_Create
2023-08-14T16:04:33.863Z 1a733654-8387-42f3-8917-19ea4f2a86f0 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:33.863Z 1a733654-8387-42f3-8917-19ea4f2a86f0 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:33.864Z 1a733654-8387-42f3-8917-19ea4f2a86f0 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:33.864Z 1a733654-8387-42f3-8917-19ea4f2a86f0 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 
2023-08-14T16:04:33.864Z 1a733654-8387-42f3-8917-19ea4f2a86f0 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:33.864Z 1a733654-8387-42f3-8917-19ea4f2a86f0 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:33.864Z 1a733654-8387-42f3-8917-19ea4f2a86f0 info: BlobSharedKeyAuthenticator:validate() [STRING TO SIGN]:"PUT\n\n\n\n\n\n\n\n\n\n\n\nx-ms-client-request-id:9b5d0bd3-c4b9-496d-b5b6-36a7d3114607\nx-ms-date:Mon, 14 Aug 2023 16:04:33 GMT\nx-ms-version:2019-07-07\n/devstoreaccount1/devstoreaccount1/oleg\nrestype:container"
2023-08-14T16:04:33.865Z 1a733654-8387-42f3-8917-19ea4f2a86f0 info: BlobSharedKeyAuthenticator:validate() Calculated authentication header based on key1: SharedKey devstoreaccount1:RLuTmvJBo/mfie06RDTDQlreZqwN4s9AK9eq9C6WVGY=
2023-08-14T16:04:33.865Z 1a733654-8387-42f3-8917-19ea4f2a86f0 info: BlobSharedKeyAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:33.865Z 1a733654-8387-42f3-8917-19ea4f2a86f0 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:33.865Z 1a733654-8387-42f3-8917-19ea4f2a86f0 info: HandlerMiddleware: DeserializedParameters={"options":{"metadata":{},"requestId":"9b5d0bd3-c4b9-496d-b5b6-36a7d3114607","containerCpkScopeInfo":{}},"restype":"container","version":"2019-07-07"}
2023-08-14T16:04:33.866Z 1a733654-8387-42f3-8917-19ea4f2a86f0 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:33.867Z 1a733654-8387-42f3-8917-19ea4f2a86f0 info: EndMiddleware: End response. TotalTimeInMS=6 StatusCode=201 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","etag":"\"0x23C99919F640B40\"","last-modified":"Mon, 14 Aug 2023 16:04:33 GMT","x-ms-client-request-id":"9b5d0bd3-c4b9-496d-b5b6-36a7d3114607","x-ms-request-id":"1a733654-8387-42f3-8917-19ea4f2a86f0","x-ms-version":"2023-01-03"}
2023-08-14T16:04:33.899Z b0c30fd4-7b12-4b44-8c7c-95da13c41316 info: BlobStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1/oleg?restype=container RequestHeaders:{"host":"127.0.0.1:10000","connection":"keep-alive","x-ms-version":"2019-07-07","accept":"application/xml","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-storageblob/12.12.0 (NODE-VERSION v18.15.0; Linux 6.2.0-26-generic)","x-ms-client-request-id":"1c730c55-3276-42e8-a8b4-1528cdb6293f","x-ms-date":"Mon, 14 Aug 2023 16:04:33 GMT","authorization":"SharedKey devstoreaccount1:m66td3s/njsbzFYRlxKLUFaexowp1F0Jlsm2WID+AAE=","accept-language":"*","sec-fetch-mode":"cors","accept-encoding":"gzip, deflate"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:33.900Z b0c30fd4-7b12-4b44-8c7c-95da13c41316 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=
2023-08-14T16:04:33.900Z b0c30fd4-7b12-4b44-8c7c-95da13c41316 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:33.900Z b0c30fd4-7b12-4b44-8c7c-95da13c41316 info: DispatchMiddleware: Operation=Container_GetProperties
2023-08-14T16:04:33.900Z b0c30fd4-7b12-4b44-8c7c-95da13c41316 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:33.900Z b0c30fd4-7b12-4b44-8c7c-95da13c41316 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:33.900Z b0c30fd4-7b12-4b44-8c7c-95da13c41316 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:33.900Z b0c30fd4-7b12-4b44-8c7c-95da13c41316 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 
2023-08-14T16:04:33.902Z b0c30fd4-7b12-4b44-8c7c-95da13c41316 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:33.902Z b0c30fd4-7b12-4b44-8c7c-95da13c41316 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:33.902Z b0c30fd4-7b12-4b44-8c7c-95da13c41316 info: BlobSharedKeyAuthenticator:validate() [STRING TO SIGN]:"GET\n\n\n\n\n\n\n\n\n\n\n\nx-ms-client-request-id:1c730c55-3276-42e8-a8b4-1528cdb6293f\nx-ms-date:Mon, 14 Aug 2023 16:04:33 GMT\nx-ms-version:2019-07-07\n/devstoreaccount1/devstoreaccount1/oleg\nrestype:container"
2023-08-14T16:04:33.902Z b0c30fd4-7b12-4b44-8c7c-95da13c41316 info: BlobSharedKeyAuthenticator:validate() Calculated authentication header based on key1: SharedKey devstoreaccount1:m66td3s/njsbzFYRlxKLUFaexowp1F0Jlsm2WID+AAE=
2023-08-14T16:04:33.902Z b0c30fd4-7b12-4b44-8c7c-95da13c41316 info: BlobSharedKeyAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:33.902Z b0c30fd4-7b12-4b44-8c7c-95da13c41316 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:33.903Z b0c30fd4-7b12-4b44-8c7c-95da13c41316 info: HandlerMiddleware: DeserializedParameters={"options":{"requestId":"1c730c55-3276-42e8-a8b4-1528cdb6293f","leaseAccessConditions":{}},"restype":"container","version":"2019-07-07"}
2023-08-14T16:04:33.903Z b0c30fd4-7b12-4b44-8c7c-95da13c41316 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:33.903Z b0c30fd4-7b12-4b44-8c7c-95da13c41316 info: EndMiddleware: End response. TotalTimeInMS=4 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","etag":"\"0x23C99919F640B40\"","last-modified":"Mon, 14 Aug 2023 16:04:33 GMT","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","x-ms-client-request-id":"1c730c55-3276-42e8-a8b4-1528cdb6293f","x-ms-request-id":"b0c30fd4-7b12-4b44-8c7c-95da13c41316","x-ms-version":"2023-01-03","x-ms-has-immutability-policy":"false","x-ms-has-legal-hold":"false"}
2023-08-14T16:04:33.905Z 7d6cd9f0-f2bf-4b89-b745-7ec4b565250a info: BlobStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1/oleg?comp=properties&restype=account RequestHeaders:{"host":"127.0.0.1:10000","connection":"keep-alive","x-ms-version":"2019-07-07","accept":"application/xml","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-storageblob/12.12.0 (NODE-VERSION v18.15.0; Linux 6.2.0-26-generic)","x-ms-client-request-id":"96341e6c-3ad8-48b7-ae76-f569d782c410","x-ms-date":"Mon, 14 Aug 2023 16:04:33 GMT","authorization":"SharedKey devstoreaccount1:X8HIs6Pfg5GEKdye4k4AqvCkG2XgsAIY+JJm4n3s0+A=","accept-language":"*","sec-fetch-mode":"cors","accept-encoding":"gzip, deflate"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:33.905Z 7d6cd9f0-f2bf-4b89-b745-7ec4b565250a info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=
2023-08-14T16:04:33.905Z 7d6cd9f0-f2bf-4b89-b745-7ec4b565250a verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:33.906Z 7d6cd9f0-f2bf-4b89-b745-7ec4b565250a info: DispatchMiddleware: Operation=Container_GetAccountInfo
2023-08-14T16:04:33.906Z 7d6cd9f0-f2bf-4b89-b745-7ec4b565250a verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:33.906Z 7d6cd9f0-f2bf-4b89-b745-7ec4b565250a info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:33.906Z 7d6cd9f0-f2bf-4b89-b745-7ec4b565250a debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:33.906Z 7d6cd9f0-f2bf-4b89-b745-7ec4b565250a debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 
2023-08-14T16:04:33.906Z 7d6cd9f0-f2bf-4b89-b745-7ec4b565250a debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:33.906Z 7d6cd9f0-f2bf-4b89-b745-7ec4b565250a info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:33.907Z 7d6cd9f0-f2bf-4b89-b745-7ec4b565250a info: BlobSharedKeyAuthenticator:validate() [STRING TO SIGN]:"GET\n\n\n\n\n\n\n\n\n\n\n\nx-ms-client-request-id:96341e6c-3ad8-48b7-ae76-f569d782c410\nx-ms-date:Mon, 14 Aug 2023 16:04:33 GMT\nx-ms-version:2019-07-07\n/devstoreaccount1/devstoreaccount1/oleg\ncomp:properties\nrestype:account"
2023-08-14T16:04:33.907Z 7d6cd9f0-f2bf-4b89-b745-7ec4b565250a info: BlobSharedKeyAuthenticator:validate() Calculated authentication header based on key1: SharedKey devstoreaccount1:X8HIs6Pfg5GEKdye4k4AqvCkG2XgsAIY+JJm4n3s0+A=
2023-08-14T16:04:33.907Z 7d6cd9f0-f2bf-4b89-b745-7ec4b565250a info: BlobSharedKeyAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:33.907Z 7d6cd9f0-f2bf-4b89-b745-7ec4b565250a verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:33.907Z 7d6cd9f0-f2bf-4b89-b745-7ec4b565250a info: HandlerMiddleware: DeserializedParameters={"restype":"account","comp":"properties","version":"2019-07-07"}
2023-08-14T16:04:33.907Z 7d6cd9f0-f2bf-4b89-b745-7ec4b565250a verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:33.907Z 7d6cd9f0-f2bf-4b89-b745-7ec4b565250a info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","x-ms-client-request-id":"96341e6c-3ad8-48b7-ae76-f569d782c410","x-ms-request-id":"7d6cd9f0-f2bf-4b89-b745-7ec4b565250a","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:04:33 GMT","x-ms-sku-name":"Standard_RAGRS","x-ms-account-kind":"StorageV2"}
2023-08-14T16:04:34.364Z 	 info: AccountDataStore:init() Refresh accounts from environment variable AZURITE_ACCOUNTS with value undefined
2023-08-14T16:04:34.364Z 	 info: AccountDataStore:init() Fallback to default emulator account devstoreaccount1.
2023-08-14T16:04:34.377Z 	 info: AccountDataStore:init() Refresh accounts from environment variable AZURITE_ACCOUNTS with value undefined
2023-08-14T16:04:34.377Z 	 info: AccountDataStore:init() Fallback to default emulator account devstoreaccount1.
2023-08-14T16:04:34.381Z 	 info: QueueGCManager:markSweepLoop() Start new mark and sweep.
2023-08-14T16:04:34.381Z 	 info: QueueGCManger:markSweep() Get all extents.
2023-08-14T16:04:34.381Z 	 info: QueueGCManager:marksweep() Get 0 extents.
2023-08-14T16:04:34.381Z 	 info: QueueGCManager:markSweep() Get referred extents, then remove from allExtents.
2023-08-14T16:04:34.381Z 	 info: QueueGCManager:markSweep() Got referred extents, unreferenced extents count is 0.
2023-08-14T16:04:34.381Z 	 info: QueueGCManager:markSweepLoop() Mark and sweep finished, take 0ms.
2023-08-14T16:04:34.381Z 	 info: QueueGCManager:markSweepLoop() Sleep for 60000
2023-08-14T16:04:34.382Z 	 info: AccountDataStore:init() Refresh accounts from environment variable AZURITE_ACCOUNTS with value undefined
2023-08-14T16:04:34.383Z 	 info: AccountDataStore:init() Fallback to default emulator account devstoreaccount1.
2023-08-14T16:04:34.405Z 6f7a70a6-a4cd-484a-9f6d-8409066753d7 info: BlobStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1/oleg?comp=list&maxresults=5000&restype=container&include=metadata&delimiter=%2F RequestHeaders:{"host":"127.0.0.1:10000","connection":"keep-alive","x-ms-version":"2019-07-07","accept":"application/xml","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-storageblob/12.12.0 (NODE-VERSION v18.15.0; Linux 6.2.0-26-generic)","x-ms-client-request-id":"6b07b8e9-54d0-4356-a24e-17ffae82b755","x-ms-date":"Mon, 14 Aug 2023 16:04:34 GMT","authorization":"SharedKey devstoreaccount1:GSGS4drS1+6wHglm81WuMuzC60JTZ88c0D8yA7l1HOk=","accept-language":"*","sec-fetch-mode":"cors","accept-encoding":"gzip, deflate"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:34.405Z 6f7a70a6-a4cd-484a-9f6d-8409066753d7 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=
2023-08-14T16:04:34.405Z 6f7a70a6-a4cd-484a-9f6d-8409066753d7 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:34.406Z 6f7a70a6-a4cd-484a-9f6d-8409066753d7 info: DispatchMiddleware: Operation=Container_ListBlobHierarchySegment
2023-08-14T16:04:34.407Z 6f7a70a6-a4cd-484a-9f6d-8409066753d7 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:34.407Z 6f7a70a6-a4cd-484a-9f6d-8409066753d7 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:34.407Z 6f7a70a6-a4cd-484a-9f6d-8409066753d7 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:34.407Z 6f7a70a6-a4cd-484a-9f6d-8409066753d7 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 
2023-08-14T16:04:34.407Z 6f7a70a6-a4cd-484a-9f6d-8409066753d7 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:34.407Z 6f7a70a6-a4cd-484a-9f6d-8409066753d7 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:34.407Z 6f7a70a6-a4cd-484a-9f6d-8409066753d7 info: BlobSharedKeyAuthenticator:validate() [STRING TO SIGN]:"GET\n\n\n\n\n\n\n\n\n\n\n\nx-ms-client-request-id:6b07b8e9-54d0-4356-a24e-17ffae82b755\nx-ms-date:Mon, 14 Aug 2023 16:04:34 GMT\nx-ms-version:2019-07-07\n/devstoreaccount1/devstoreaccount1/oleg\ncomp:list\ndelimiter:/\ninclude:metadata\nmaxresults:5000\nrestype:container"
2023-08-14T16:04:34.407Z 6f7a70a6-a4cd-484a-9f6d-8409066753d7 info: BlobSharedKeyAuthenticator:validate() Calculated authentication header based on key1: SharedKey devstoreaccount1:GSGS4drS1+6wHglm81WuMuzC60JTZ88c0D8yA7l1HOk=
2023-08-14T16:04:34.407Z 6f7a70a6-a4cd-484a-9f6d-8409066753d7 info: BlobSharedKeyAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:34.407Z 6f7a70a6-a4cd-484a-9f6d-8409066753d7 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:34.407Z 6f7a70a6-a4cd-484a-9f6d-8409066753d7 info: HandlerMiddleware: DeserializedParameters={"options":{"maxresults":5000,"include":["metadata"],"requestId":"6b07b8e9-54d0-4356-a24e-17ffae82b755"},"delimiter":"/","restype":"container","comp":"list","version":"2019-07-07"}
2023-08-14T16:04:34.408Z 6f7a70a6-a4cd-484a-9f6d-8409066753d7 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:34.409Z 6f7a70a6-a4cd-484a-9f6d-8409066753d7 debug: Serializer: Raw response body string is <?xml version="1.0" encoding="UTF-8" standalone="yes"?><EnumerationResults ServiceEndpoint="http://127.0.0.1:10000/devstoreaccount1" ContainerName="oleg"><Prefix/><Marker/><MaxResults>5000</MaxResults><Delimiter>/</Delimiter><Blobs/><NextMarker/></EnumerationResults>
2023-08-14T16:04:34.409Z 6f7a70a6-a4cd-484a-9f6d-8409066753d7 info: Serializer: Start returning stream body.
2023-08-14T16:04:34.409Z 6f7a70a6-a4cd-484a-9f6d-8409066753d7 info: EndMiddleware: End response. TotalTimeInMS=4 StatusCode=200 StatusMessage=OK Headers={"server":"Azurite-Blob/3.25.1","content-type":"application/xml","x-ms-client-request-id":"6b07b8e9-54d0-4356-a24e-17ffae82b755","x-ms-request-id":"6f7a70a6-a4cd-484a-9f6d-8409066753d7","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:04:34 GMT"}
2023-08-14T16:04:48.388Z 6e768af7-bc63-42be-b164-1f877b4252c8 info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/9.png?se=2023-09-13T16%3A04%3A46Z&sig=yB37%2BewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"61c5d3db-5ffa-480d-6d4b-95a648fb4153","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:48.388Z 6e768af7-bc63-42be-b164-1f877b4252c8 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=9.png
2023-08-14T16:04:48.388Z 6e768af7-bc63-42be-b164-1f877b4252c8 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:48.388Z 6e768af7-bc63-42be-b164-1f877b4252c8 info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:04:48.388Z 6e768af7-bc63-42be-b164-1f877b4252c8 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:48.388Z 6e768af7-bc63-42be-b164-1f877b4252c8 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:48.388Z 6e768af7-bc63-42be-b164-1f877b4252c8 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.388Z 6e768af7-bc63-42be-b164-1f877b4252c8 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 9.png
2023-08-14T16:04:48.389Z 6e768af7-bc63-42be-b164-1f877b4252c8 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:48.389Z 6e768af7-bc63-42be-b164-1f877b4252c8 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:48.389Z 6e768af7-bc63-42be-b164-1f877b4252c8 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:04:48.389Z 6e768af7-bc63-42be-b164-1f877b4252c8 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:04:48.389Z 6e768af7-bc63-42be-b164-1f877b4252c8 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.389Z 6e768af7-bc63-42be-b164-1f877b4252c8 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 9.png
2023-08-14T16:04:48.389Z 6e768af7-bc63-42be-b164-1f877b4252c8 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.389Z 6e768af7-bc63-42be-b164-1f877b4252c8 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.389Z 6e768af7-bc63-42be-b164-1f877b4252c8 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:04:48.390Z 6e768af7-bc63-42be-b164-1f877b4252c8 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:04:48.390Z 6e768af7-bc63-42be-b164-1f877b4252c8 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.390Z 6e768af7-bc63-42be-b164-1f877b4252c8 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 9.png
2023-08-14T16:04:48.390Z 6e768af7-bc63-42be-b164-1f877b4252c8 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.390Z 6e768af7-bc63-42be-b164-1f877b4252c8 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.390Z 6e768af7-bc63-42be-b164-1f877b4252c8 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:04:48.390Z 6e768af7-bc63-42be-b164-1f877b4252c8 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:04:46Z","permissions":"rwl","containerName":"oleg","blobName":"9.png","signedResource":"c"}
2023-08-14T16:04:48.390Z 6e768af7-bc63-42be-b164-1f877b4252c8 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:04:48.390Z 6e768af7-bc63-42be-b164-1f877b4252c8 debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:04:46Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:04:48.390Z 6e768af7-bc63-42be-b164-1f877b4252c8 debug: BlobSASAuthenticator:validate() Calculated signature is: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.390Z 6e768af7-bc63-42be-b164-1f877b4252c8 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:04:48.390Z 6e768af7-bc63-42be-b164-1f877b4252c8 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:04:48.390Z 6e768af7-bc63-42be-b164-1f877b4252c8 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:04:48.390Z 6e768af7-bc63-42be-b164-1f877b4252c8 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:04:48.391Z 6e768af7-bc63-42be-b164-1f877b4252c8 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:04:48.391Z 6e768af7-bc63-42be-b164-1f877b4252c8 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:04:48.391Z 6e768af7-bc63-42be-b164-1f877b4252c8 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:48.391Z 6e768af7-bc63-42be-b164-1f877b4252c8 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"61c5d3db-5ffa-480d-6d4b-95a648fb4153","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2019-07-07"}
2023-08-14T16:04:48.392Z 6e768af7-bc63-42be-b164-1f877b4252c8 error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:48.392Z 6e768af7-bc63-42be-b164-1f877b4252c8 error: ErrorMiddleware: ErrorName=StorageError ErrorMessage=The specified blob does not exist.  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=The specified blob does not exist. ErrorHTTPHeaders={"x-ms-error-code":"BlobNotFound","x-ms-request-id":"6e768af7-bc63-42be-b164-1f877b4252c8"} ErrorHTTPBody="<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>BlobNotFound</Code>\n  <Message>The specified blob does not exist.\nRequestId:6e768af7-bc63-42be-b164-1f877b4252c8\nTime:2023-08-14T16:04:48.391Z</Message>\n</Error>" ErrorStack="StorageError: The specified blob does not exist.\n    at StorageErrorFactory.getBlobNotFound (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/errors/StorageErrorFactory.js:29:16)\n    at LokiBlobMetadataStore.getBlobProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/persistence/LokiBlobMetadataStore.js:807:49)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async BlobHandler.getProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/handlers/BlobHandler.js:71:21)"
2023-08-14T16:04:48.392Z 6e768af7-bc63-42be-b164-1f877b4252c8 error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:48.392Z 6e768af7-bc63-42be-b164-1f877b4252c8 error: ErrorMiddleware: Set HTTP status message: The specified blob does not exist.
2023-08-14T16:04:48.392Z 6e768af7-bc63-42be-b164-1f877b4252c8 error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=BlobNotFound
2023-08-14T16:04:48.392Z 6e768af7-bc63-42be-b164-1f877b4252c8 error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=6e768af7-bc63-42be-b164-1f877b4252c8
2023-08-14T16:04:48.392Z 6e768af7-bc63-42be-b164-1f877b4252c8 error: ErrorMiddleware: Set HTTP body: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>BlobNotFound</Code>\n  <Message>The specified blob does not exist.\nRequestId:6e768af7-bc63-42be-b164-1f877b4252c8\nTime:2023-08-14T16:04:48.391Z</Message>\n</Error>"
2023-08-14T16:04:48.392Z 6e768af7-bc63-42be-b164-1f877b4252c8 info: EndMiddleware: End response. TotalTimeInMS=4 StatusCode=404 StatusMessage=The specified blob does not exist. Headers={"server":"Azurite-Blob/3.25.1","x-ms-error-code":"BlobNotFound","x-ms-request-id":"6e768af7-bc63-42be-b164-1f877b4252c8"}
2023-08-14T16:04:48.393Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/8.png?se=2023-09-13T16%3A04%3A46Z&sig=yB37%2BewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"f17e1a9f-45cc-41a8-4f43-01f00f7486e5","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:48.393Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=8.png
2023-08-14T16:04:48.393Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:48.393Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:04:48.393Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:48.393Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:48.393Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.393Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 8.png
2023-08-14T16:04:48.394Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:48.394Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:48.394Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:04:48.394Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:04:48.394Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.394Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 8.png
2023-08-14T16:04:48.394Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.394Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.394Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:04:48.394Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:04:48.394Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.394Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 8.png
2023-08-14T16:04:48.394Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.394Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.394Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:04:48.394Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:04:46Z","permissions":"rwl","containerName":"oleg","blobName":"8.png","signedResource":"c"}
2023-08-14T16:04:48.394Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:04:48.394Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:04:46Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:04:48.394Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a debug: BlobSASAuthenticator:validate() Calculated signature is: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.394Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:04:48.394Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:04:48.394Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:04:48.394Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:04:48.394Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:04:48.394Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:04:48.394Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:48.394Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"f17e1a9f-45cc-41a8-4f43-01f00f7486e5","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2019-07-07"}
2023-08-14T16:04:48.395Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:48.395Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a error: ErrorMiddleware: ErrorName=StorageError ErrorMessage=The specified blob does not exist.  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=The specified blob does not exist. ErrorHTTPHeaders={"x-ms-error-code":"BlobNotFound","x-ms-request-id":"3a799589-9ee6-4e47-98af-f8e1cf6bf80a"} ErrorHTTPBody="<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>BlobNotFound</Code>\n  <Message>The specified blob does not exist.\nRequestId:3a799589-9ee6-4e47-98af-f8e1cf6bf80a\nTime:2023-08-14T16:04:48.394Z</Message>\n</Error>" ErrorStack="StorageError: The specified blob does not exist.\n    at StorageErrorFactory.getBlobNotFound (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/errors/StorageErrorFactory.js:29:16)\n    at LokiBlobMetadataStore.getBlobProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/persistence/LokiBlobMetadataStore.js:807:49)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async BlobHandler.getProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/handlers/BlobHandler.js:71:21)"
2023-08-14T16:04:48.395Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:48.395Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a error: ErrorMiddleware: Set HTTP status message: The specified blob does not exist.
2023-08-14T16:04:48.395Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=BlobNotFound
2023-08-14T16:04:48.395Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=3a799589-9ee6-4e47-98af-f8e1cf6bf80a
2023-08-14T16:04:48.395Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a error: ErrorMiddleware: Set HTTP body: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>BlobNotFound</Code>\n  <Message>The specified blob does not exist.\nRequestId:3a799589-9ee6-4e47-98af-f8e1cf6bf80a\nTime:2023-08-14T16:04:48.394Z</Message>\n</Error>"
2023-08-14T16:04:48.395Z 3a799589-9ee6-4e47-98af-f8e1cf6bf80a info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=404 StatusMessage=The specified blob does not exist. Headers={"server":"Azurite-Blob/3.25.1","x-ms-error-code":"BlobNotFound","x-ms-request-id":"3a799589-9ee6-4e47-98af-f8e1cf6bf80a"}
2023-08-14T16:04:48.395Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/3.jpg?se=2023-09-13T16%3A04%3A46Z&sig=yB37%2BewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"02747f55-dca7-4863-4c8d-2593f438b576","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:48.395Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=3.jpg
2023-08-14T16:04:48.395Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:48.396Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:04:48.396Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:48.396Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:48.396Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.396Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 3.jpg
2023-08-14T16:04:48.396Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:48.396Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:48.396Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:04:48.396Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:04:48.396Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.396Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 3.jpg
2023-08-14T16:04:48.396Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.396Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.396Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:04:48.396Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:04:48.396Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.396Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 3.jpg
2023-08-14T16:04:48.396Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.396Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.396Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:04:48.396Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:04:46Z","permissions":"rwl","containerName":"oleg","blobName":"3.jpg","signedResource":"c"}
2023-08-14T16:04:48.396Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:04:48.396Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:04:46Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:04:48.396Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d debug: BlobSASAuthenticator:validate() Calculated signature is: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.396Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:04:48.396Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:04:48.396Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:04:48.396Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:04:48.396Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:04:48.397Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:04:48.397Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:48.397Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"02747f55-dca7-4863-4c8d-2593f438b576","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2019-07-07"}
2023-08-14T16:04:48.397Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:48.397Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d error: ErrorMiddleware: ErrorName=StorageError ErrorMessage=The specified blob does not exist.  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=The specified blob does not exist. ErrorHTTPHeaders={"x-ms-error-code":"BlobNotFound","x-ms-request-id":"b90d1af9-5acd-4ada-87a5-a8c99ab67d7d"} ErrorHTTPBody="<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>BlobNotFound</Code>\n  <Message>The specified blob does not exist.\nRequestId:b90d1af9-5acd-4ada-87a5-a8c99ab67d7d\nTime:2023-08-14T16:04:48.397Z</Message>\n</Error>" ErrorStack="StorageError: The specified blob does not exist.\n    at StorageErrorFactory.getBlobNotFound (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/errors/StorageErrorFactory.js:29:16)\n    at LokiBlobMetadataStore.getBlobProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/persistence/LokiBlobMetadataStore.js:807:49)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async BlobHandler.getProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/handlers/BlobHandler.js:71:21)"
2023-08-14T16:04:48.397Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:48.397Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d error: ErrorMiddleware: Set HTTP status message: The specified blob does not exist.
2023-08-14T16:04:48.397Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=BlobNotFound
2023-08-14T16:04:48.397Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=b90d1af9-5acd-4ada-87a5-a8c99ab67d7d
2023-08-14T16:04:48.397Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d error: ErrorMiddleware: Set HTTP body: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>BlobNotFound</Code>\n  <Message>The specified blob does not exist.\nRequestId:b90d1af9-5acd-4ada-87a5-a8c99ab67d7d\nTime:2023-08-14T16:04:48.397Z</Message>\n</Error>"
2023-08-14T16:04:48.398Z b90d1af9-5acd-4ada-87a5-a8c99ab67d7d info: EndMiddleware: End response. TotalTimeInMS=3 StatusCode=404 StatusMessage=The specified blob does not exist. Headers={"server":"Azurite-Blob/3.25.1","x-ms-error-code":"BlobNotFound","x-ms-request-id":"b90d1af9-5acd-4ada-87a5-a8c99ab67d7d"}
2023-08-14T16:04:48.398Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/4.jpg?se=2023-09-13T16%3A04%3A46Z&sig=yB37%2BewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"33a8cd6b-b48c-456b-6525-0443dadccbe0","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:48.398Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=4.jpg
2023-08-14T16:04:48.398Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 4.jpg
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 4.jpg
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 4.jpg
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:04:46Z","permissions":"rwl","containerName":"oleg","blobName":"4.jpg","signedResource":"c"}
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:04:46Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 debug: BlobSASAuthenticator:validate() Calculated signature is: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:04:48.399Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:48.400Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"33a8cd6b-b48c-456b-6525-0443dadccbe0","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2019-07-07"}
2023-08-14T16:04:48.400Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:48.400Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 error: ErrorMiddleware: ErrorName=StorageError ErrorMessage=The specified blob does not exist.  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=The specified blob does not exist. ErrorHTTPHeaders={"x-ms-error-code":"BlobNotFound","x-ms-request-id":"89e96ef5-2e4f-48f1-b1d6-87db370e4853"} ErrorHTTPBody="<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>BlobNotFound</Code>\n  <Message>The specified blob does not exist.\nRequestId:89e96ef5-2e4f-48f1-b1d6-87db370e4853\nTime:2023-08-14T16:04:48.400Z</Message>\n</Error>" ErrorStack="StorageError: The specified blob does not exist.\n    at StorageErrorFactory.getBlobNotFound (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/errors/StorageErrorFactory.js:29:16)\n    at LokiBlobMetadataStore.getBlobProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/persistence/LokiBlobMetadataStore.js:807:49)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async BlobHandler.getProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/handlers/BlobHandler.js:71:21)"
2023-08-14T16:04:48.400Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:48.400Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 error: ErrorMiddleware: Set HTTP status message: The specified blob does not exist.
2023-08-14T16:04:48.400Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=BlobNotFound
2023-08-14T16:04:48.400Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=89e96ef5-2e4f-48f1-b1d6-87db370e4853
2023-08-14T16:04:48.400Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 error: ErrorMiddleware: Set HTTP body: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>BlobNotFound</Code>\n  <Message>The specified blob does not exist.\nRequestId:89e96ef5-2e4f-48f1-b1d6-87db370e4853\nTime:2023-08-14T16:04:48.400Z</Message>\n</Error>"
2023-08-14T16:04:48.400Z 89e96ef5-2e4f-48f1-b1d6-87db370e4853 info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=404 StatusMessage=The specified blob does not exist. Headers={"server":"Azurite-Blob/3.25.1","x-ms-error-code":"BlobNotFound","x-ms-request-id":"89e96ef5-2e4f-48f1-b1d6-87db370e4853"}
2023-08-14T16:04:48.401Z cf6fd83b-9baf-4629-9c58-543d188161bf info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/10.png?se=2023-09-13T16%3A04%3A46Z&sig=yB37%2BewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"1f68316d-cdbf-4690-4033-03a669e8b751","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:48.401Z cf6fd83b-9baf-4629-9c58-543d188161bf info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=10.png
2023-08-14T16:04:48.401Z cf6fd83b-9baf-4629-9c58-543d188161bf verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:48.401Z cf6fd83b-9baf-4629-9c58-543d188161bf info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:04:48.401Z cf6fd83b-9baf-4629-9c58-543d188161bf verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:48.401Z cf6fd83b-9baf-4629-9c58-543d188161bf info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:48.401Z cf6fd83b-9baf-4629-9c58-543d188161bf debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.401Z cf6fd83b-9baf-4629-9c58-543d188161bf debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 10.png
2023-08-14T16:04:48.401Z cf6fd83b-9baf-4629-9c58-543d188161bf debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:48.401Z cf6fd83b-9baf-4629-9c58-543d188161bf info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:48.401Z cf6fd83b-9baf-4629-9c58-543d188161bf info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:04:48.401Z cf6fd83b-9baf-4629-9c58-543d188161bf info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:04:48.401Z cf6fd83b-9baf-4629-9c58-543d188161bf debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.401Z cf6fd83b-9baf-4629-9c58-543d188161bf debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 10.png
2023-08-14T16:04:48.401Z cf6fd83b-9baf-4629-9c58-543d188161bf debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.401Z cf6fd83b-9baf-4629-9c58-543d188161bf debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.401Z cf6fd83b-9baf-4629-9c58-543d188161bf info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:04:48.401Z cf6fd83b-9baf-4629-9c58-543d188161bf info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:04:48.401Z cf6fd83b-9baf-4629-9c58-543d188161bf debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.401Z cf6fd83b-9baf-4629-9c58-543d188161bf debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 10.png
2023-08-14T16:04:48.401Z cf6fd83b-9baf-4629-9c58-543d188161bf debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.401Z cf6fd83b-9baf-4629-9c58-543d188161bf debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.401Z cf6fd83b-9baf-4629-9c58-543d188161bf debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:04:48.402Z cf6fd83b-9baf-4629-9c58-543d188161bf debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:04:46Z","permissions":"rwl","containerName":"oleg","blobName":"10.png","signedResource":"c"}
2023-08-14T16:04:48.402Z cf6fd83b-9baf-4629-9c58-543d188161bf info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:04:48.402Z cf6fd83b-9baf-4629-9c58-543d188161bf debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:04:46Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:04:48.402Z cf6fd83b-9baf-4629-9c58-543d188161bf debug: BlobSASAuthenticator:validate() Calculated signature is: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.402Z cf6fd83b-9baf-4629-9c58-543d188161bf info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:04:48.402Z cf6fd83b-9baf-4629-9c58-543d188161bf info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:04:48.402Z cf6fd83b-9baf-4629-9c58-543d188161bf info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:04:48.402Z cf6fd83b-9baf-4629-9c58-543d188161bf info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:04:48.402Z cf6fd83b-9baf-4629-9c58-543d188161bf debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:04:48.402Z cf6fd83b-9baf-4629-9c58-543d188161bf info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:04:48.402Z cf6fd83b-9baf-4629-9c58-543d188161bf verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:48.402Z cf6fd83b-9baf-4629-9c58-543d188161bf info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"1f68316d-cdbf-4690-4033-03a669e8b751","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2019-07-07"}
2023-08-14T16:04:48.402Z cf6fd83b-9baf-4629-9c58-543d188161bf error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:48.402Z cf6fd83b-9baf-4629-9c58-543d188161bf error: ErrorMiddleware: ErrorName=StorageError ErrorMessage=The specified blob does not exist.  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=The specified blob does not exist. ErrorHTTPHeaders={"x-ms-error-code":"BlobNotFound","x-ms-request-id":"cf6fd83b-9baf-4629-9c58-543d188161bf"} ErrorHTTPBody="<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>BlobNotFound</Code>\n  <Message>The specified blob does not exist.\nRequestId:cf6fd83b-9baf-4629-9c58-543d188161bf\nTime:2023-08-14T16:04:48.402Z</Message>\n</Error>" ErrorStack="StorageError: The specified blob does not exist.\n    at StorageErrorFactory.getBlobNotFound (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/errors/StorageErrorFactory.js:29:16)\n    at LokiBlobMetadataStore.getBlobProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/persistence/LokiBlobMetadataStore.js:807:49)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async BlobHandler.getProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/handlers/BlobHandler.js:71:21)"
2023-08-14T16:04:48.402Z cf6fd83b-9baf-4629-9c58-543d188161bf error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:48.402Z cf6fd83b-9baf-4629-9c58-543d188161bf error: ErrorMiddleware: Set HTTP status message: The specified blob does not exist.
2023-08-14T16:04:48.402Z cf6fd83b-9baf-4629-9c58-543d188161bf error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=BlobNotFound
2023-08-14T16:04:48.402Z cf6fd83b-9baf-4629-9c58-543d188161bf error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=cf6fd83b-9baf-4629-9c58-543d188161bf
2023-08-14T16:04:48.402Z cf6fd83b-9baf-4629-9c58-543d188161bf error: ErrorMiddleware: Set HTTP body: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>BlobNotFound</Code>\n  <Message>The specified blob does not exist.\nRequestId:cf6fd83b-9baf-4629-9c58-543d188161bf\nTime:2023-08-14T16:04:48.402Z</Message>\n</Error>"
2023-08-14T16:04:48.402Z cf6fd83b-9baf-4629-9c58-543d188161bf info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=404 StatusMessage=The specified blob does not exist. Headers={"server":"Azurite-Blob/3.25.1","x-ms-error-code":"BlobNotFound","x-ms-request-id":"cf6fd83b-9baf-4629-9c58-543d188161bf"}
2023-08-14T16:04:48.403Z b4337304-70b3-4f96-8b07-33d18418ac71 info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/7.png?se=2023-09-13T16%3A04%3A46Z&sig=yB37%2BewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"7e19ac2f-9cf8-4454-5ddd-1266b954a2ed","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:48.403Z b4337304-70b3-4f96-8b07-33d18418ac71 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=7.png
2023-08-14T16:04:48.403Z b4337304-70b3-4f96-8b07-33d18418ac71 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:48.403Z b4337304-70b3-4f96-8b07-33d18418ac71 info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:04:48.403Z b4337304-70b3-4f96-8b07-33d18418ac71 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:48.403Z b4337304-70b3-4f96-8b07-33d18418ac71 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:48.403Z b4337304-70b3-4f96-8b07-33d18418ac71 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.403Z b4337304-70b3-4f96-8b07-33d18418ac71 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 7.png
2023-08-14T16:04:48.403Z b4337304-70b3-4f96-8b07-33d18418ac71 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:48.403Z b4337304-70b3-4f96-8b07-33d18418ac71 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:48.403Z b4337304-70b3-4f96-8b07-33d18418ac71 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:04:48.403Z b4337304-70b3-4f96-8b07-33d18418ac71 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:04:48.403Z b4337304-70b3-4f96-8b07-33d18418ac71 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.403Z b4337304-70b3-4f96-8b07-33d18418ac71 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 7.png
2023-08-14T16:04:48.403Z b4337304-70b3-4f96-8b07-33d18418ac71 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.403Z b4337304-70b3-4f96-8b07-33d18418ac71 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.403Z b4337304-70b3-4f96-8b07-33d18418ac71 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:04:48.403Z b4337304-70b3-4f96-8b07-33d18418ac71 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:04:48.404Z b4337304-70b3-4f96-8b07-33d18418ac71 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.404Z b4337304-70b3-4f96-8b07-33d18418ac71 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 7.png
2023-08-14T16:04:48.404Z b4337304-70b3-4f96-8b07-33d18418ac71 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.404Z b4337304-70b3-4f96-8b07-33d18418ac71 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.404Z b4337304-70b3-4f96-8b07-33d18418ac71 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:04:48.404Z b4337304-70b3-4f96-8b07-33d18418ac71 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:04:46Z","permissions":"rwl","containerName":"oleg","blobName":"7.png","signedResource":"c"}
2023-08-14T16:04:48.404Z b4337304-70b3-4f96-8b07-33d18418ac71 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:04:48.404Z b4337304-70b3-4f96-8b07-33d18418ac71 debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:04:46Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:04:48.404Z b4337304-70b3-4f96-8b07-33d18418ac71 debug: BlobSASAuthenticator:validate() Calculated signature is: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.404Z b4337304-70b3-4f96-8b07-33d18418ac71 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:04:48.404Z b4337304-70b3-4f96-8b07-33d18418ac71 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:04:48.404Z b4337304-70b3-4f96-8b07-33d18418ac71 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:04:48.404Z b4337304-70b3-4f96-8b07-33d18418ac71 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:04:48.404Z b4337304-70b3-4f96-8b07-33d18418ac71 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:04:48.404Z b4337304-70b3-4f96-8b07-33d18418ac71 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:04:48.404Z b4337304-70b3-4f96-8b07-33d18418ac71 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:48.404Z b4337304-70b3-4f96-8b07-33d18418ac71 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"7e19ac2f-9cf8-4454-5ddd-1266b954a2ed","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2019-07-07"}
2023-08-14T16:04:48.404Z b4337304-70b3-4f96-8b07-33d18418ac71 error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:48.404Z b4337304-70b3-4f96-8b07-33d18418ac71 error: ErrorMiddleware: ErrorName=StorageError ErrorMessage=The specified blob does not exist.  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=The specified blob does not exist. ErrorHTTPHeaders={"x-ms-error-code":"BlobNotFound","x-ms-request-id":"b4337304-70b3-4f96-8b07-33d18418ac71"} ErrorHTTPBody="<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>BlobNotFound</Code>\n  <Message>The specified blob does not exist.\nRequestId:b4337304-70b3-4f96-8b07-33d18418ac71\nTime:2023-08-14T16:04:48.404Z</Message>\n</Error>" ErrorStack="StorageError: The specified blob does not exist.\n    at StorageErrorFactory.getBlobNotFound (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/errors/StorageErrorFactory.js:29:16)\n    at LokiBlobMetadataStore.getBlobProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/persistence/LokiBlobMetadataStore.js:807:49)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async BlobHandler.getProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/handlers/BlobHandler.js:71:21)"
2023-08-14T16:04:48.404Z b4337304-70b3-4f96-8b07-33d18418ac71 error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:48.404Z b4337304-70b3-4f96-8b07-33d18418ac71 error: ErrorMiddleware: Set HTTP status message: The specified blob does not exist.
2023-08-14T16:04:48.404Z b4337304-70b3-4f96-8b07-33d18418ac71 error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=BlobNotFound
2023-08-14T16:04:48.404Z b4337304-70b3-4f96-8b07-33d18418ac71 error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=b4337304-70b3-4f96-8b07-33d18418ac71
2023-08-14T16:04:48.404Z b4337304-70b3-4f96-8b07-33d18418ac71 error: ErrorMiddleware: Set HTTP body: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>BlobNotFound</Code>\n  <Message>The specified blob does not exist.\nRequestId:b4337304-70b3-4f96-8b07-33d18418ac71\nTime:2023-08-14T16:04:48.404Z</Message>\n</Error>"
2023-08-14T16:04:48.404Z b4337304-70b3-4f96-8b07-33d18418ac71 info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=404 StatusMessage=The specified blob does not exist. Headers={"server":"Azurite-Blob/3.25.1","x-ms-error-code":"BlobNotFound","x-ms-request-id":"b4337304-70b3-4f96-8b07-33d18418ac71"}
2023-08-14T16:04:48.405Z 4f09e589-01e4-493e-aec3-13597a785984 info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/5.png?se=2023-09-13T16%3A04%3A46Z&sig=yB37%2BewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"a284b98c-c6a0-4a53-4581-bdad7a1abdaf","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:48.405Z 4f09e589-01e4-493e-aec3-13597a785984 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=5.png
2023-08-14T16:04:48.405Z 4f09e589-01e4-493e-aec3-13597a785984 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:48.406Z 4f09e589-01e4-493e-aec3-13597a785984 info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:04:48.406Z 4f09e589-01e4-493e-aec3-13597a785984 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:48.406Z 4f09e589-01e4-493e-aec3-13597a785984 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:48.406Z 4f09e589-01e4-493e-aec3-13597a785984 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.406Z 4f09e589-01e4-493e-aec3-13597a785984 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 5.png
2023-08-14T16:04:48.406Z 4f09e589-01e4-493e-aec3-13597a785984 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:48.406Z 4f09e589-01e4-493e-aec3-13597a785984 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:48.406Z 4f09e589-01e4-493e-aec3-13597a785984 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:04:48.406Z 4f09e589-01e4-493e-aec3-13597a785984 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:04:48.406Z 4f09e589-01e4-493e-aec3-13597a785984 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.406Z 4f09e589-01e4-493e-aec3-13597a785984 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 5.png
2023-08-14T16:04:48.406Z 4f09e589-01e4-493e-aec3-13597a785984 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.406Z 4f09e589-01e4-493e-aec3-13597a785984 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.406Z 4f09e589-01e4-493e-aec3-13597a785984 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:04:48.406Z 4f09e589-01e4-493e-aec3-13597a785984 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:04:48.406Z 4f09e589-01e4-493e-aec3-13597a785984 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.406Z 4f09e589-01e4-493e-aec3-13597a785984 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 5.png
2023-08-14T16:04:48.406Z 4f09e589-01e4-493e-aec3-13597a785984 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.406Z 4f09e589-01e4-493e-aec3-13597a785984 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.406Z 4f09e589-01e4-493e-aec3-13597a785984 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:04:48.406Z 4f09e589-01e4-493e-aec3-13597a785984 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:04:46Z","permissions":"rwl","containerName":"oleg","blobName":"5.png","signedResource":"c"}
2023-08-14T16:04:48.406Z 4f09e589-01e4-493e-aec3-13597a785984 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:04:48.406Z 4f09e589-01e4-493e-aec3-13597a785984 debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:04:46Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:04:48.406Z 4f09e589-01e4-493e-aec3-13597a785984 debug: BlobSASAuthenticator:validate() Calculated signature is: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.406Z 4f09e589-01e4-493e-aec3-13597a785984 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:04:48.406Z 4f09e589-01e4-493e-aec3-13597a785984 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:04:48.407Z 4f09e589-01e4-493e-aec3-13597a785984 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:04:48.407Z 4f09e589-01e4-493e-aec3-13597a785984 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:04:48.407Z 4f09e589-01e4-493e-aec3-13597a785984 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:04:48.407Z 4f09e589-01e4-493e-aec3-13597a785984 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:04:48.407Z 4f09e589-01e4-493e-aec3-13597a785984 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:48.407Z 4f09e589-01e4-493e-aec3-13597a785984 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"a284b98c-c6a0-4a53-4581-bdad7a1abdaf","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2019-07-07"}
2023-08-14T16:04:48.407Z 4f09e589-01e4-493e-aec3-13597a785984 error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:48.407Z 4f09e589-01e4-493e-aec3-13597a785984 error: ErrorMiddleware: ErrorName=StorageError ErrorMessage=The specified blob does not exist.  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=The specified blob does not exist. ErrorHTTPHeaders={"x-ms-error-code":"BlobNotFound","x-ms-request-id":"4f09e589-01e4-493e-aec3-13597a785984"} ErrorHTTPBody="<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>BlobNotFound</Code>\n  <Message>The specified blob does not exist.\nRequestId:4f09e589-01e4-493e-aec3-13597a785984\nTime:2023-08-14T16:04:48.407Z</Message>\n</Error>" ErrorStack="StorageError: The specified blob does not exist.\n    at StorageErrorFactory.getBlobNotFound (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/errors/StorageErrorFactory.js:29:16)\n    at LokiBlobMetadataStore.getBlobProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/persistence/LokiBlobMetadataStore.js:807:49)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async BlobHandler.getProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/handlers/BlobHandler.js:71:21)"
2023-08-14T16:04:48.407Z 4f09e589-01e4-493e-aec3-13597a785984 error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:48.407Z 4f09e589-01e4-493e-aec3-13597a785984 error: ErrorMiddleware: Set HTTP status message: The specified blob does not exist.
2023-08-14T16:04:48.407Z 4f09e589-01e4-493e-aec3-13597a785984 error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=BlobNotFound
2023-08-14T16:04:48.407Z 4f09e589-01e4-493e-aec3-13597a785984 error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=4f09e589-01e4-493e-aec3-13597a785984
2023-08-14T16:04:48.407Z 4f09e589-01e4-493e-aec3-13597a785984 error: ErrorMiddleware: Set HTTP body: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>BlobNotFound</Code>\n  <Message>The specified blob does not exist.\nRequestId:4f09e589-01e4-493e-aec3-13597a785984\nTime:2023-08-14T16:04:48.407Z</Message>\n</Error>"
2023-08-14T16:04:48.407Z 4f09e589-01e4-493e-aec3-13597a785984 info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=404 StatusMessage=The specified blob does not exist. Headers={"server":"Azurite-Blob/3.25.1","x-ms-error-code":"BlobNotFound","x-ms-request-id":"4f09e589-01e4-493e-aec3-13597a785984"}
2023-08-14T16:04:48.408Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/1.png?se=2023-09-13T16%3A04%3A46Z&sig=yB37%2BewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"cc33a93c-a0aa-41a0-784f-2c1093faf801","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:48.408Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=1.png
2023-08-14T16:04:48.408Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:48.408Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:04:48.409Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:48.409Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:48.409Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.409Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 1.png
2023-08-14T16:04:48.409Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:48.409Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:48.409Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:04:48.409Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:04:48.409Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.409Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 1.png
2023-08-14T16:04:48.409Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.409Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.409Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:04:48.409Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:04:48.409Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.410Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 1.png
2023-08-14T16:04:48.410Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.410Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.410Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:04:48.410Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:04:46Z","permissions":"rwl","containerName":"oleg","blobName":"1.png","signedResource":"c"}
2023-08-14T16:04:48.410Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:04:48.410Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:04:46Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:04:48.410Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 debug: BlobSASAuthenticator:validate() Calculated signature is: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.410Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:04:48.410Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:04:48.410Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:04:48.410Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:04:48.410Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:04:48.410Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:04:48.410Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:48.410Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"cc33a93c-a0aa-41a0-784f-2c1093faf801","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2019-07-07"}
2023-08-14T16:04:48.410Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:48.410Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 error: ErrorMiddleware: ErrorName=StorageError ErrorMessage=The specified blob does not exist.  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=The specified blob does not exist. ErrorHTTPHeaders={"x-ms-error-code":"BlobNotFound","x-ms-request-id":"3637b7ee-f66c-468e-a74d-1a5b56b73148"} ErrorHTTPBody="<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>BlobNotFound</Code>\n  <Message>The specified blob does not exist.\nRequestId:3637b7ee-f66c-468e-a74d-1a5b56b73148\nTime:2023-08-14T16:04:48.410Z</Message>\n</Error>" ErrorStack="StorageError: The specified blob does not exist.\n    at StorageErrorFactory.getBlobNotFound (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/errors/StorageErrorFactory.js:29:16)\n    at LokiBlobMetadataStore.getBlobProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/persistence/LokiBlobMetadataStore.js:807:49)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async BlobHandler.getProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/handlers/BlobHandler.js:71:21)"
2023-08-14T16:04:48.410Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:48.411Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 error: ErrorMiddleware: Set HTTP status message: The specified blob does not exist.
2023-08-14T16:04:48.411Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=BlobNotFound
2023-08-14T16:04:48.411Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=3637b7ee-f66c-468e-a74d-1a5b56b73148
2023-08-14T16:04:48.411Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 error: ErrorMiddleware: Set HTTP body: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>BlobNotFound</Code>\n  <Message>The specified blob does not exist.\nRequestId:3637b7ee-f66c-468e-a74d-1a5b56b73148\nTime:2023-08-14T16:04:48.410Z</Message>\n</Error>"
2023-08-14T16:04:48.411Z 3637b7ee-f66c-468e-a74d-1a5b56b73148 info: EndMiddleware: End response. TotalTimeInMS=3 StatusCode=404 StatusMessage=The specified blob does not exist. Headers={"server":"Azurite-Blob/3.25.1","x-ms-error-code":"BlobNotFound","x-ms-request-id":"3637b7ee-f66c-468e-a74d-1a5b56b73148"}
2023-08-14T16:04:48.412Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/6.png?se=2023-09-13T16%3A04%3A46Z&sig=yB37%2BewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"947517b1-a45e-42ca-7ac8-bfadaa91de53","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:48.412Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=6.png
2023-08-14T16:04:48.412Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:48.412Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:04:48.412Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:48.412Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:48.412Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.412Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 6.png
2023-08-14T16:04:48.412Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:48.412Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:48.412Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:04:48.412Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:04:48.412Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.412Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 6.png
2023-08-14T16:04:48.412Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.412Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.412Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:04:48.412Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:04:48.412Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.413Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 6.png
2023-08-14T16:04:48.413Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.413Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.413Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:04:48.413Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:04:46Z","permissions":"rwl","containerName":"oleg","blobName":"6.png","signedResource":"c"}
2023-08-14T16:04:48.413Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:04:48.413Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:04:46Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:04:48.413Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a debug: BlobSASAuthenticator:validate() Calculated signature is: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.413Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:04:48.413Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:04:48.413Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:04:48.413Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:04:48.413Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:04:48.413Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:04:48.413Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:48.413Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"947517b1-a45e-42ca-7ac8-bfadaa91de53","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2019-07-07"}
2023-08-14T16:04:48.413Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:48.413Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a error: ErrorMiddleware: ErrorName=StorageError ErrorMessage=The specified blob does not exist.  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=The specified blob does not exist. ErrorHTTPHeaders={"x-ms-error-code":"BlobNotFound","x-ms-request-id":"4047f8a3-ffc3-42d7-8dda-e575fbfa635a"} ErrorHTTPBody="<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>BlobNotFound</Code>\n  <Message>The specified blob does not exist.\nRequestId:4047f8a3-ffc3-42d7-8dda-e575fbfa635a\nTime:2023-08-14T16:04:48.413Z</Message>\n</Error>" ErrorStack="StorageError: The specified blob does not exist.\n    at StorageErrorFactory.getBlobNotFound (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/errors/StorageErrorFactory.js:29:16)\n    at LokiBlobMetadataStore.getBlobProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/persistence/LokiBlobMetadataStore.js:807:49)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async BlobHandler.getProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/handlers/BlobHandler.js:71:21)"
2023-08-14T16:04:48.413Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:48.414Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a error: ErrorMiddleware: Set HTTP status message: The specified blob does not exist.
2023-08-14T16:04:48.414Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=BlobNotFound
2023-08-14T16:04:48.414Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=4047f8a3-ffc3-42d7-8dda-e575fbfa635a
2023-08-14T16:04:48.414Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a error: ErrorMiddleware: Set HTTP body: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>BlobNotFound</Code>\n  <Message>The specified blob does not exist.\nRequestId:4047f8a3-ffc3-42d7-8dda-e575fbfa635a\nTime:2023-08-14T16:04:48.413Z</Message>\n</Error>"
2023-08-14T16:04:48.414Z 4047f8a3-ffc3-42d7-8dda-e575fbfa635a info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=404 StatusMessage=The specified blob does not exist. Headers={"server":"Azurite-Blob/3.25.1","x-ms-error-code":"BlobNotFound","x-ms-request-id":"4047f8a3-ffc3-42d7-8dda-e575fbfa635a"}
2023-08-14T16:04:48.414Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/2.png?se=2023-09-13T16%3A04%3A46Z&sig=yB37%2BewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"beb72275-c034-4f6b-5704-4391a60af7a3","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:48.414Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=2.png
2023-08-14T16:04:48.414Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:48.414Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 2.png
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 2.png
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 2.png
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:04:46Z","permissions":"rwl","containerName":"oleg","blobName":"2.png","signedResource":"c"}
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:04:46Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 debug: BlobSASAuthenticator:validate() Calculated signature is: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:48.415Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"beb72275-c034-4f6b-5704-4391a60af7a3","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2019-07-07"}
2023-08-14T16:04:48.416Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:04:48.416Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 error: ErrorMiddleware: ErrorName=StorageError ErrorMessage=The specified blob does not exist.  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=The specified blob does not exist. ErrorHTTPHeaders={"x-ms-error-code":"BlobNotFound","x-ms-request-id":"9d04c68b-e7e4-47b4-999b-5d9d4fb84524"} ErrorHTTPBody="<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>BlobNotFound</Code>\n  <Message>The specified blob does not exist.\nRequestId:9d04c68b-e7e4-47b4-999b-5d9d4fb84524\nTime:2023-08-14T16:04:48.415Z</Message>\n</Error>" ErrorStack="StorageError: The specified blob does not exist.\n    at StorageErrorFactory.getBlobNotFound (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/errors/StorageErrorFactory.js:29:16)\n    at LokiBlobMetadataStore.getBlobProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/persistence/LokiBlobMetadataStore.js:807:49)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async BlobHandler.getProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/handlers/BlobHandler.js:71:21)"
2023-08-14T16:04:48.416Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:04:48.416Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 error: ErrorMiddleware: Set HTTP status message: The specified blob does not exist.
2023-08-14T16:04:48.416Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=BlobNotFound
2023-08-14T16:04:48.416Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=9d04c68b-e7e4-47b4-999b-5d9d4fb84524
2023-08-14T16:04:48.416Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 error: ErrorMiddleware: Set HTTP body: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>BlobNotFound</Code>\n  <Message>The specified blob does not exist.\nRequestId:9d04c68b-e7e4-47b4-999b-5d9d4fb84524\nTime:2023-08-14T16:04:48.415Z</Message>\n</Error>"
2023-08-14T16:04:48.416Z 9d04c68b-e7e4-47b4-999b-5d9d4fb84524 info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=404 StatusMessage=The specified blob does not exist. Headers={"server":"Azurite-Blob/3.25.1","x-ms-error-code":"BlobNotFound","x-ms-request-id":"9d04c68b-e7e4-47b4-999b-5d9d4fb84524"}
2023-08-14T16:04:48.470Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 info: BlobStorageContextMiddleware: RequestMethod=PUT RequestURL=http://127.0.0.1/devstoreaccount1/oleg/4.jpg?se=2023-09-13T16%3A04%3A46Z&sig=yB37%2BewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","content-length":"467323","x-ms-blob-cache-control":"","x-ms-blob-content-disposition":"","x-ms-blob-content-encoding":"","x-ms-blob-content-language":"","x-ms-blob-content-md5":"nbTZU6yagqqG6fSdJmvTtQ==","x-ms-blob-content-type":"image/jpeg","x-ms-blob-type":"BlockBlob","x-ms-client-request-id":"a278f828-f87b-4702-41fa-cf0ea5e6cfa9","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:48.470Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=4.jpg
2023-08-14T16:04:48.470Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:48.471Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 info: DispatchMiddleware: Operation=BlockBlob_Upload
2023-08-14T16:04:48.472Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:48.472Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:48.472Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.472Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 4.jpg
2023-08-14T16:04:48.472Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:48.472Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:48.472Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:04:48.472Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:04:48.472Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.472Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 4.jpg
2023-08-14T16:04:48.472Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.472Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.473Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:04:48.473Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:04:48.473Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.473Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 4.jpg
2023-08-14T16:04:48.473Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.473Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.473Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:04:48.473Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:04:46Z","permissions":"rwl","containerName":"oleg","blobName":"4.jpg","signedResource":"c"}
2023-08-14T16:04:48.473Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:04:48.473Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:04:46Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:04:48.473Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: BlobSASAuthenticator:validate() Calculated signature is: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.473Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:04:48.473Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:04:48.473Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:04:48.473Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:04:48.473Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: BlobSASAuthenticator:validate() Got permission requirements for operation BlockBlob_Upload - {"permission":"wc"}
2023-08-14T16:04:48.473Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 info: BlobSASAuthenticator:validate() For BlockBlob_Upload, if blob exists, the permission must be Write.
2023-08-14T16:04:48.473Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:04:48.473Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:48.474Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"metadata":{},"requestId":"a278f828-f87b-4702-41fa-cf0ea5e6cfa9","blobHTTPHeaders":{"blobContentType":"image/jpeg","blobContentEncoding":"","blobContentLanguage":"","blobContentMD5":{"type":"Buffer","data":[157,180,217,83,172,154,130,170,134,233,244,157,38,107,211,181]},"blobCacheControl":"","blobContentDisposition":""},"leaseAccessConditions":{},"cpkInfo":{},"cpkScopeInfo":{},"modifiedAccessConditions":{}},"contentLength":467323,"version":"2019-07-07","blobType":"BlockBlob","body":"ReadableStream"}
2023-08-14T16:04:48.475Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: OperationQueue.operate() Schedule incoming job 66a97a61-939b-4bb4-a6b1-922c75530e52
2023-08-14T16:04:48.475Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: OperationQueue:execute() Current runningConcurrency:0 maxConcurrency:50 operations.length:1
2023-08-14T16:04:48.475Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 info: FSExtentStore:appendExtent() Select extent from idle location for extent append operation. LocationId:1 extentId:758a4fd5-ebda-4237-8492-9a86d9f5cf76 offset:0 MAX_EXTENT_SIZE:67108864 
2023-08-14T16:04:48.475Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: FSExtentStore:appendExtent() Get fd:undefined for extent:758a4fd5-ebda-4237-8492-9a86d9f5cf76 from cache.
2023-08-14T16:04:48.476Z c206ebe0-458f-4fb5-97e6-659121819f3c info: BlobStorageContextMiddleware: RequestMethod=PUT RequestURL=http://127.0.0.1/devstoreaccount1/oleg/3.jpg?se=2023-09-13T16%3A04%3A46Z&sig=yB37%2BewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","content-length":"176116","x-ms-blob-cache-control":"","x-ms-blob-content-disposition":"","x-ms-blob-content-encoding":"","x-ms-blob-content-language":"","x-ms-blob-content-md5":"JM5rlVNQHKMZIwy51r+1zA==","x-ms-blob-content-type":"image/jpeg","x-ms-blob-type":"BlockBlob","x-ms-client-request-id":"795619ba-c369-4459-6fc2-93920dc2c52c","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:48.476Z c206ebe0-458f-4fb5-97e6-659121819f3c info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=3.jpg
2023-08-14T16:04:48.476Z c206ebe0-458f-4fb5-97e6-659121819f3c verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:48.477Z c206ebe0-458f-4fb5-97e6-659121819f3c info: DispatchMiddleware: Operation=BlockBlob_Upload
2023-08-14T16:04:48.477Z c206ebe0-458f-4fb5-97e6-659121819f3c verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:48.477Z c206ebe0-458f-4fb5-97e6-659121819f3c info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:48.477Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.477Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 3.jpg
2023-08-14T16:04:48.478Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:48.478Z c206ebe0-458f-4fb5-97e6-659121819f3c info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:48.478Z c206ebe0-458f-4fb5-97e6-659121819f3c info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:04:48.478Z c206ebe0-458f-4fb5-97e6-659121819f3c info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:04:48.478Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.478Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 3.jpg
2023-08-14T16:04:48.478Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.478Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.478Z c206ebe0-458f-4fb5-97e6-659121819f3c info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:04:48.478Z c206ebe0-458f-4fb5-97e6-659121819f3c info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:04:48.478Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.478Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 3.jpg
2023-08-14T16:04:48.478Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.478Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.478Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:04:48.478Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:04:46Z","permissions":"rwl","containerName":"oleg","blobName":"3.jpg","signedResource":"c"}
2023-08-14T16:04:48.478Z c206ebe0-458f-4fb5-97e6-659121819f3c info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:04:48.478Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:04:46Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:04:48.478Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: BlobSASAuthenticator:validate() Calculated signature is: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.478Z c206ebe0-458f-4fb5-97e6-659121819f3c info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:04:48.478Z c206ebe0-458f-4fb5-97e6-659121819f3c info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:04:48.478Z c206ebe0-458f-4fb5-97e6-659121819f3c info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:04:48.478Z c206ebe0-458f-4fb5-97e6-659121819f3c info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:04:48.478Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: BlobSASAuthenticator:validate() Got permission requirements for operation BlockBlob_Upload - {"permission":"wc"}
2023-08-14T16:04:48.478Z c206ebe0-458f-4fb5-97e6-659121819f3c info: BlobSASAuthenticator:validate() For BlockBlob_Upload, if blob exists, the permission must be Write.
2023-08-14T16:04:48.478Z c206ebe0-458f-4fb5-97e6-659121819f3c info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:04:48.479Z c206ebe0-458f-4fb5-97e6-659121819f3c verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:48.479Z c206ebe0-458f-4fb5-97e6-659121819f3c info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"metadata":{},"requestId":"795619ba-c369-4459-6fc2-93920dc2c52c","blobHTTPHeaders":{"blobContentType":"image/jpeg","blobContentEncoding":"","blobContentLanguage":"","blobContentMD5":{"type":"Buffer","data":[36,206,107,149,83,80,28,163,25,35,12,185,214,191,181,204]},"blobCacheControl":"","blobContentDisposition":""},"leaseAccessConditions":{},"cpkInfo":{},"cpkScopeInfo":{},"modifiedAccessConditions":{}},"contentLength":176116,"version":"2019-07-07","blobType":"BlockBlob","body":"ReadableStream"}
2023-08-14T16:04:48.479Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: OperationQueue.operate() Schedule incoming job 511810dc-1f65-4fb3-8635-1351a2e2c36c
2023-08-14T16:04:48.479Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: OperationQueue:execute() Current runningConcurrency:1 maxConcurrency:50 operations.length:1
2023-08-14T16:04:48.479Z c206ebe0-458f-4fb5-97e6-659121819f3c info: FSExtentStore:appendExtent() Select extent from idle location for extent append operation. LocationId:2 extentId:8bbe146c-2fdd-408a-a88d-8ae920b7c9b4 offset:0 MAX_EXTENT_SIZE:67108864 
2023-08-14T16:04:48.479Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: FSExtentStore:appendExtent() Get fd:undefined for extent:8bbe146c-2fdd-408a-a88d-8ae920b7c9b4 from cache.
2023-08-14T16:04:48.480Z 007d10fe-cdc7-4344-8cab-e367474d1605 info: BlobStorageContextMiddleware: RequestMethod=PUT RequestURL=http://127.0.0.1/devstoreaccount1/oleg/8.png?se=2023-09-13T16%3A04%3A46Z&sig=yB37%2BewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","content-length":"1888630","x-ms-blob-cache-control":"","x-ms-blob-content-disposition":"","x-ms-blob-content-encoding":"","x-ms-blob-content-language":"","x-ms-blob-content-md5":"AF2DTS+hjg/7a5bF2nY/oQ==","x-ms-blob-content-type":"image/png","x-ms-blob-type":"BlockBlob","x-ms-client-request-id":"7268b11a-41d9-4fb3-4c3a-5b18acd90dd7","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:48.480Z 007d10fe-cdc7-4344-8cab-e367474d1605 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=8.png
2023-08-14T16:04:48.480Z 007d10fe-cdc7-4344-8cab-e367474d1605 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:48.481Z 007d10fe-cdc7-4344-8cab-e367474d1605 info: DispatchMiddleware: Operation=BlockBlob_Upload
2023-08-14T16:04:48.481Z 007d10fe-cdc7-4344-8cab-e367474d1605 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 8.png
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 8.png
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 8.png
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:04:46Z","permissions":"rwl","containerName":"oleg","blobName":"8.png","signedResource":"c"}
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:04:46Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: BlobSASAuthenticator:validate() Calculated signature is: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: BlobSASAuthenticator:validate() Got permission requirements for operation BlockBlob_Upload - {"permission":"wc"}
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 info: BlobSASAuthenticator:validate() For BlockBlob_Upload, if blob exists, the permission must be Write.
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"metadata":{},"requestId":"7268b11a-41d9-4fb3-4c3a-5b18acd90dd7","blobHTTPHeaders":{"blobContentType":"image/png","blobContentEncoding":"","blobContentLanguage":"","blobContentMD5":{"type":"Buffer","data":[0,93,131,77,47,161,142,15,251,107,150,197,218,118,63,161]},"blobCacheControl":"","blobContentDisposition":""},"leaseAccessConditions":{},"cpkInfo":{},"cpkScopeInfo":{},"modifiedAccessConditions":{}},"contentLength":1888630,"version":"2019-07-07","blobType":"BlockBlob","body":"ReadableStream"}
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: OperationQueue.operate() Schedule incoming job 4cda4271-4f9a-4c1a-aa76-b5fe8f497f2a
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: OperationQueue:execute() Current runningConcurrency:2 maxConcurrency:50 operations.length:1
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 info: FSExtentStore:appendExtent() Select extent from idle location for extent append operation. LocationId:3 extentId:d44dc0c6-4d6b-4962-9eb9-5b0593e278eb offset:0 MAX_EXTENT_SIZE:67108864 
2023-08-14T16:04:48.482Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: FSExtentStore:appendExtent() Get fd:undefined for extent:d44dc0c6-4d6b-4962-9eb9-5b0593e278eb from cache.
2023-08-14T16:04:48.483Z cebe366c-54a1-4fd7-8b81-b36de7c77189 info: BlobStorageContextMiddleware: RequestMethod=PUT RequestURL=http://127.0.0.1/devstoreaccount1/oleg/9.png?se=2023-09-13T16%3A04%3A46Z&sig=yB37%2BewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","content-length":"1591097","x-ms-blob-cache-control":"","x-ms-blob-content-disposition":"","x-ms-blob-content-encoding":"","x-ms-blob-content-language":"","x-ms-blob-content-md5":"o4qsh2qWccT1fdXC2fI9jg==","x-ms-blob-content-type":"image/png","x-ms-blob-type":"BlockBlob","x-ms-client-request-id":"8631514c-eeac-4acd-4f94-25f82b2ac19e","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:48.483Z cebe366c-54a1-4fd7-8b81-b36de7c77189 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=9.png
2023-08-14T16:04:48.483Z cebe366c-54a1-4fd7-8b81-b36de7c77189 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:48.483Z cebe366c-54a1-4fd7-8b81-b36de7c77189 info: DispatchMiddleware: Operation=BlockBlob_Upload
2023-08-14T16:04:48.483Z cebe366c-54a1-4fd7-8b81-b36de7c77189 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:48.483Z cebe366c-54a1-4fd7-8b81-b36de7c77189 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:48.483Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.483Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 9.png
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 9.png
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 9.png
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:04:46Z","permissions":"rwl","containerName":"oleg","blobName":"9.png","signedResource":"c"}
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:04:46Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: BlobSASAuthenticator:validate() Calculated signature is: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: BlobSASAuthenticator:validate() Got permission requirements for operation BlockBlob_Upload - {"permission":"wc"}
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 info: BlobSASAuthenticator:validate() For BlockBlob_Upload, if blob exists, the permission must be Write.
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"metadata":{},"requestId":"8631514c-eeac-4acd-4f94-25f82b2ac19e","blobHTTPHeaders":{"blobContentType":"image/png","blobContentEncoding":"","blobContentLanguage":"","blobContentMD5":{"type":"Buffer","data":[163,138,172,135,106,150,113,196,245,125,213,194,217,242,61,142]},"blobCacheControl":"","blobContentDisposition":""},"leaseAccessConditions":{},"cpkInfo":{},"cpkScopeInfo":{},"modifiedAccessConditions":{}},"contentLength":1591097,"version":"2019-07-07","blobType":"BlockBlob","body":"ReadableStream"}
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: OperationQueue.operate() Schedule incoming job 33e2e38f-a4f6-4ef9-a37a-384eab63ebda
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: OperationQueue:execute() Current runningConcurrency:3 maxConcurrency:50 operations.length:1
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 info: FSExtentStore:appendExtent() Select extent from idle location for extent append operation. LocationId:4 extentId:4267d371-b0d3-49cb-9ead-dd64504762e8 offset:0 MAX_EXTENT_SIZE:67108864 
2023-08-14T16:04:48.484Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: FSExtentStore:appendExtent() Get fd:undefined for extent:4267d371-b0d3-49cb-9ead-dd64504762e8 from cache.
2023-08-14T16:04:48.485Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: FSExtentStore:appendExtent() Open file:test_files/__blobstorage__/758a4fd5-ebda-4237-8492-9a86d9f5cf76 for extent:758a4fd5-ebda-4237-8492-9a86d9f5cf76, get new fd:44
2023-08-14T16:04:48.485Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: FSExtentStore:appendExtent() Created write stream for fd:44
2023-08-14T16:04:48.485Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: FSExtentStore:appendExtent() Start writing to extent 758a4fd5-ebda-4237-8492-9a86d9f5cf76
2023-08-14T16:04:48.485Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: FSExtentStore:streamPipe() Start piping data to write stream
2023-08-14T16:04:48.485Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: FSExtentStore:appendExtent() Open file:test_files/__blobstorage__/8bbe146c-2fdd-408a-a88d-8ae920b7c9b4 for extent:8bbe146c-2fdd-408a-a88d-8ae920b7c9b4, get new fd:45
2023-08-14T16:04:48.485Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: FSExtentStore:appendExtent() Created write stream for fd:45
2023-08-14T16:04:48.485Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: FSExtentStore:appendExtent() Start writing to extent 8bbe146c-2fdd-408a-a88d-8ae920b7c9b4
2023-08-14T16:04:48.485Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: FSExtentStore:streamPipe() Start piping data to write stream
2023-08-14T16:04:48.485Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: FSExtentStore:appendExtent() Open file:test_files/__blobstorage__/d44dc0c6-4d6b-4962-9eb9-5b0593e278eb for extent:d44dc0c6-4d6b-4962-9eb9-5b0593e278eb, get new fd:46
2023-08-14T16:04:48.486Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: FSExtentStore:appendExtent() Created write stream for fd:46
2023-08-14T16:04:48.486Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: FSExtentStore:appendExtent() Start writing to extent d44dc0c6-4d6b-4962-9eb9-5b0593e278eb
2023-08-14T16:04:48.486Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: FSExtentStore:streamPipe() Start piping data to write stream
2023-08-14T16:04:48.486Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: FSExtentStore:appendExtent() Open file:test_files/__blobstorage__/4267d371-b0d3-49cb-9ead-dd64504762e8 for extent:4267d371-b0d3-49cb-9ead-dd64504762e8, get new fd:47
2023-08-14T16:04:48.486Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: FSExtentStore:appendExtent() Created write stream for fd:47
2023-08-14T16:04:48.486Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: FSExtentStore:appendExtent() Start writing to extent 4267d371-b0d3-49cb-9ead-dd64504762e8
2023-08-14T16:04:48.486Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: FSExtentStore:streamPipe() Start piping data to write stream
2023-08-14T16:04:48.487Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: FSExtentStore:streamPipe() Readable stream triggers close event, 176116 bytes piped
2023-08-14T16:04:48.487Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: FSExtentStore:streamPipe() Invoke write stream end()
2023-08-14T16:04:48.487Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: FSExtentStore:streamPipe() Readable stream triggers close event, 176116 bytes piped
2023-08-14T16:04:48.488Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: FSExtentStore:streamPipe() Writable stream triggers finish event, after 176116 bytes piped. Flush data to fd:45.
2023-08-14T16:04:48.489Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: FSExtentStore:streamPipe() Readable stream triggers close event, 467323 bytes piped
2023-08-14T16:04:48.490Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: FSExtentStore:streamPipe() Invoke write stream end()
2023-08-14T16:04:48.490Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: FSExtentStore:streamPipe() Readable stream triggers close event, 467323 bytes piped
2023-08-14T16:04:48.490Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: FSExtentStore:streamPipe() Writable stream triggers finish event, after 467323 bytes piped. Flush data to fd:44.
2023-08-14T16:04:48.493Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: FSExtentStore:streamPipe() Readable stream triggers close event, 1591097 bytes piped
2023-08-14T16:04:48.493Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: FSExtentStore:streamPipe() Invoke write stream end()
2023-08-14T16:04:48.493Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: FSExtentStore:streamPipe() Readable stream triggers close event, 1591097 bytes piped
2023-08-14T16:04:48.493Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: FSExtentStore:streamPipe() Writable stream triggers finish event, after 1591097 bytes piped. Flush data to fd:47.
2023-08-14T16:04:48.494Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: FSExtentStore:streamPipe() Readable stream triggers close event, 1888630 bytes piped
2023-08-14T16:04:48.494Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: FSExtentStore:streamPipe() Invoke write stream end()
2023-08-14T16:04:48.494Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: FSExtentStore:streamPipe() Readable stream triggers close event, 1888630 bytes piped
2023-08-14T16:04:48.494Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: FSExtentStore:streamPipe() Writable stream triggers finish event, after 1888630 bytes piped. Flush data to fd:46.
2023-08-14T16:04:48.496Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: FSExtentStore:streamPipe() Flush data to fd:45 successfully. Resolve streamPipe().
2023-08-14T16:04:48.497Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: FSExtentStore:appendExtent() Write finish, start updating extent metadata. extent:{"id":"8bbe146c-2fdd-408a-a88d-8ae920b7c9b4","locationId":"Default","path":"8bbe146c-2fdd-408a-a88d-8ae920b7c9b4","size":176116,"lastModifiedInMS":1692029088497}
2023-08-14T16:04:48.497Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: FSExtentStore:appendExtent() Update extent metadata done. Resolve()
2023-08-14T16:04:48.497Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: OperationQueue.operate() Job 511810dc-1f65-4fb3-8635-1351a2e2c36c completes callback, resolve.
2023-08-14T16:04:48.497Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: OperationQueue.operate() Schedule incoming job 8eaaacb7-f935-4ad8-a6c6-33002e697b01
2023-08-14T16:04:48.497Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: OperationQueue:execute() Current runningConcurrency:0 maxConcurrency:100 operations.length:1
2023-08-14T16:04:48.497Z c206ebe0-458f-4fb5-97e6-659121819f3c verbose: FSExtentStore:readExtent() Creating read stream. LocationId:Default extentId:8bbe146c-2fdd-408a-a88d-8ae920b7c9b4 path:test_files/__blobstorage__/8bbe146c-2fdd-408a-a88d-8ae920b7c9b4 offset:0 count:176116 end:176115
2023-08-14T16:04:48.497Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: OperationQueue.operate() Job 8eaaacb7-f935-4ad8-a6c6-33002e697b01 completes callback, resolve.
2023-08-14T16:04:48.498Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: OperationQueue:execute() Current runningConcurrency:3 maxConcurrency:50 operations.length:0
2023-08-14T16:04:48.498Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: OperationQueue:execute() return. Operation.length === 0
2023-08-14T16:04:48.498Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: OperationQueue:execute() Current runningConcurrency:0 maxConcurrency:100 operations.length:0
2023-08-14T16:04:48.498Z c206ebe0-458f-4fb5-97e6-659121819f3c debug: OperationQueue:execute() return. Operation.length === 0
2023-08-14T16:04:48.507Z c206ebe0-458f-4fb5-97e6-659121819f3c verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:48.507Z c206ebe0-458f-4fb5-97e6-659121819f3c info: EndMiddleware: End response. TotalTimeInMS=31 StatusCode=201 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","etag":"\"0x1D818D7E0115960\"","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","content-md5":"JM5rlVNQHKMZIwy51r+1zA==","x-ms-client-request-id":"795619ba-c369-4459-6fc2-93920dc2c52c","x-ms-request-id":"c206ebe0-458f-4fb5-97e6-659121819f3c","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-request-server-encrypted":"true"}
2023-08-14T16:04:48.508Z c206ebe0-458f-4fb5-97e6-659121819f3c verbose: FSExtentStore:readExtent() Read stream closed. LocationId:Default extentId:8bbe146c-2fdd-408a-a88d-8ae920b7c9b4 path:test_files/__blobstorage__/8bbe146c-2fdd-408a-a88d-8ae920b7c9b4 offset:0 count:176116 end:176115
2023-08-14T16:04:48.509Z f0b11091-ca87-427d-bde0-6c7d9ff97535 info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/3.jpg?se=2023-09-13T16%3A04%3A46Z&sig=yB37%2BewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"62e65d96-519f-4884-6953-98240253cfd9","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:48.509Z f0b11091-ca87-427d-bde0-6c7d9ff97535 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=3.jpg
2023-08-14T16:04:48.509Z f0b11091-ca87-427d-bde0-6c7d9ff97535 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:48.509Z f0b11091-ca87-427d-bde0-6c7d9ff97535 info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:04:48.509Z f0b11091-ca87-427d-bde0-6c7d9ff97535 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:48.509Z f0b11091-ca87-427d-bde0-6c7d9ff97535 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:48.509Z f0b11091-ca87-427d-bde0-6c7d9ff97535 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.509Z f0b11091-ca87-427d-bde0-6c7d9ff97535 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 3.jpg
2023-08-14T16:04:48.509Z f0b11091-ca87-427d-bde0-6c7d9ff97535 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:48.509Z f0b11091-ca87-427d-bde0-6c7d9ff97535 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:48.509Z f0b11091-ca87-427d-bde0-6c7d9ff97535 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:04:48.509Z f0b11091-ca87-427d-bde0-6c7d9ff97535 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:04:48.509Z f0b11091-ca87-427d-bde0-6c7d9ff97535 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.509Z f0b11091-ca87-427d-bde0-6c7d9ff97535 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 3.jpg
2023-08-14T16:04:48.509Z f0b11091-ca87-427d-bde0-6c7d9ff97535 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.509Z f0b11091-ca87-427d-bde0-6c7d9ff97535 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.509Z f0b11091-ca87-427d-bde0-6c7d9ff97535 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:04:48.509Z f0b11091-ca87-427d-bde0-6c7d9ff97535 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:04:48.509Z f0b11091-ca87-427d-bde0-6c7d9ff97535 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.509Z f0b11091-ca87-427d-bde0-6c7d9ff97535 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 3.jpg
2023-08-14T16:04:48.509Z f0b11091-ca87-427d-bde0-6c7d9ff97535 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.509Z f0b11091-ca87-427d-bde0-6c7d9ff97535 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.509Z f0b11091-ca87-427d-bde0-6c7d9ff97535 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:04:48.509Z f0b11091-ca87-427d-bde0-6c7d9ff97535 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:04:46Z","permissions":"rwl","containerName":"oleg","blobName":"3.jpg","signedResource":"c"}
2023-08-14T16:04:48.509Z f0b11091-ca87-427d-bde0-6c7d9ff97535 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:04:48.509Z f0b11091-ca87-427d-bde0-6c7d9ff97535 debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:04:46Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:04:48.509Z f0b11091-ca87-427d-bde0-6c7d9ff97535 debug: BlobSASAuthenticator:validate() Calculated signature is: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.509Z f0b11091-ca87-427d-bde0-6c7d9ff97535 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:04:48.510Z f0b11091-ca87-427d-bde0-6c7d9ff97535 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:04:48.510Z f0b11091-ca87-427d-bde0-6c7d9ff97535 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:04:48.510Z f0b11091-ca87-427d-bde0-6c7d9ff97535 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:04:48.510Z f0b11091-ca87-427d-bde0-6c7d9ff97535 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:04:48.510Z f0b11091-ca87-427d-bde0-6c7d9ff97535 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:04:48.510Z f0b11091-ca87-427d-bde0-6c7d9ff97535 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:48.510Z f0b11091-ca87-427d-bde0-6c7d9ff97535 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"62e65d96-519f-4884-6953-98240253cfd9","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2019-07-07"}
2023-08-14T16:04:48.510Z f0b11091-ca87-427d-bde0-6c7d9ff97535 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:48.510Z f0b11091-ca87-427d-bde0-6c7d9ff97535 info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"176116","content-type":"image/jpeg","etag":"\"0x1D818D7E0115960\"","content-md5":"JM5rlVNQHKMZIwy51r+1zA==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"62e65d96-519f-4884-6953-98240253cfd9","x-ms-request-id":"f0b11091-ca87-427d-bde0-6c7d9ff97535","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:04:48 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:04:48 GMT"}
2023-08-14T16:04:48.513Z 9756f79a-c9f4-4871-8732-6677088e6e10 info: BlobStorageContextMiddleware: RequestMethod=PUT RequestURL=http://127.0.0.1/devstoreaccount1/oleg/7.png?se=2023-09-13T16%3A04%3A46Z&sig=yB37%2BewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","content-length":"1413252","x-ms-blob-cache-control":"","x-ms-blob-content-disposition":"","x-ms-blob-content-encoding":"","x-ms-blob-content-language":"","x-ms-blob-content-md5":"a3MdCt7Cyh3g1MZQhClGKA==","x-ms-blob-content-type":"image/png","x-ms-blob-type":"BlockBlob","x-ms-client-request-id":"c59f9f12-a563-4aab-5502-42b114c43dea","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:48.513Z 9756f79a-c9f4-4871-8732-6677088e6e10 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=7.png
2023-08-14T16:04:48.513Z 9756f79a-c9f4-4871-8732-6677088e6e10 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:48.513Z 9756f79a-c9f4-4871-8732-6677088e6e10 info: DispatchMiddleware: Operation=BlockBlob_Upload
2023-08-14T16:04:48.513Z 9756f79a-c9f4-4871-8732-6677088e6e10 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:48.513Z 9756f79a-c9f4-4871-8732-6677088e6e10 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:48.513Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.513Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 7.png
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 7.png
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 7.png
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:04:46Z","permissions":"rwl","containerName":"oleg","blobName":"7.png","signedResource":"c"}
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:04:46Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: BlobSASAuthenticator:validate() Calculated signature is: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: BlobSASAuthenticator:validate() Got permission requirements for operation BlockBlob_Upload - {"permission":"wc"}
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 info: BlobSASAuthenticator:validate() For BlockBlob_Upload, if blob exists, the permission must be Write.
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"metadata":{},"requestId":"c59f9f12-a563-4aab-5502-42b114c43dea","blobHTTPHeaders":{"blobContentType":"image/png","blobContentEncoding":"","blobContentLanguage":"","blobContentMD5":{"type":"Buffer","data":[107,115,29,10,222,194,202,29,224,212,198,80,132,41,70,40]},"blobCacheControl":"","blobContentDisposition":""},"leaseAccessConditions":{},"cpkInfo":{},"cpkScopeInfo":{},"modifiedAccessConditions":{}},"contentLength":1413252,"version":"2019-07-07","blobType":"BlockBlob","body":"ReadableStream"}
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: OperationQueue.operate() Schedule incoming job 48960473-48af-43c1-a73b-0d017c2a39cc
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: OperationQueue:execute() Current runningConcurrency:3 maxConcurrency:50 operations.length:1
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 info: FSExtentStore:appendExtent() Select extent from idle location for extent append operation. LocationId:2 extentId:8bbe146c-2fdd-408a-a88d-8ae920b7c9b4 offset:176116 MAX_EXTENT_SIZE:67108864 
2023-08-14T16:04:48.514Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: FSExtentStore:appendExtent() Get fd:45 for extent:8bbe146c-2fdd-408a-a88d-8ae920b7c9b4 from cache.
2023-08-14T16:04:48.515Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: FSExtentStore:appendExtent() Created write stream for fd:45
2023-08-14T16:04:48.515Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: FSExtentStore:appendExtent() Start writing to extent 8bbe146c-2fdd-408a-a88d-8ae920b7c9b4
2023-08-14T16:04:48.515Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: FSExtentStore:streamPipe() Start piping data to write stream
2023-08-14T16:04:48.515Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: FSExtentStore:streamPipe() Flush data to fd:44 successfully. Resolve streamPipe().
2023-08-14T16:04:48.515Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: FSExtentStore:appendExtent() Write finish, start updating extent metadata. extent:{"id":"758a4fd5-ebda-4237-8492-9a86d9f5cf76","locationId":"Default","path":"758a4fd5-ebda-4237-8492-9a86d9f5cf76","size":467323,"lastModifiedInMS":1692029088515}
2023-08-14T16:04:48.515Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: FSExtentStore:appendExtent() Update extent metadata done. Resolve()
2023-08-14T16:04:48.515Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: OperationQueue.operate() Job 66a97a61-939b-4bb4-a6b1-922c75530e52 completes callback, resolve.
2023-08-14T16:04:48.515Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: OperationQueue.operate() Schedule incoming job a9b00607-65ba-4678-8d06-ea7f55e0f631
2023-08-14T16:04:48.515Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: OperationQueue:execute() Current runningConcurrency:0 maxConcurrency:100 operations.length:1
2023-08-14T16:04:48.515Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 verbose: FSExtentStore:readExtent() Creating read stream. LocationId:Default extentId:758a4fd5-ebda-4237-8492-9a86d9f5cf76 path:test_files/__blobstorage__/758a4fd5-ebda-4237-8492-9a86d9f5cf76 offset:0 count:467323 end:467322
2023-08-14T16:04:48.515Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: OperationQueue.operate() Job a9b00607-65ba-4678-8d06-ea7f55e0f631 completes callback, resolve.
2023-08-14T16:04:48.515Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: OperationQueue:execute() Current runningConcurrency:3 maxConcurrency:50 operations.length:0
2023-08-14T16:04:48.515Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: OperationQueue:execute() return. Operation.length === 0
2023-08-14T16:04:48.515Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: OperationQueue:execute() Current runningConcurrency:0 maxConcurrency:100 operations.length:0
2023-08-14T16:04:48.515Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 debug: OperationQueue:execute() return. Operation.length === 0
2023-08-14T16:04:48.517Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:48.517Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 info: EndMiddleware: End response. TotalTimeInMS=47 StatusCode=201 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","etag":"\"0x20021DC4FE14AE0\"","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","content-md5":"nbTZU6yagqqG6fSdJmvTtQ==","x-ms-client-request-id":"a278f828-f87b-4702-41fa-cf0ea5e6cfa9","x-ms-request-id":"c90e0e60-fc0b-4f7a-9e99-6aff76f70253","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-request-server-encrypted":"true"}
2023-08-14T16:04:48.517Z c90e0e60-fc0b-4f7a-9e99-6aff76f70253 verbose: FSExtentStore:readExtent() Read stream closed. LocationId:Default extentId:758a4fd5-ebda-4237-8492-9a86d9f5cf76 path:test_files/__blobstorage__/758a4fd5-ebda-4237-8492-9a86d9f5cf76 offset:0 count:467323 end:467322
2023-08-14T16:04:48.518Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/4.jpg?se=2023-09-13T16%3A04%3A46Z&sig=yB37%2BewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"f00e6ee5-1fe1-42cf-558b-e0c8d36b1f13","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:48.518Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=4.jpg
2023-08-14T16:04:48.518Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:48.518Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:04:48.518Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:48.518Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:48.519Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.519Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 4.jpg
2023-08-14T16:04:48.519Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:48.519Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:48.519Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:04:48.519Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:04:48.519Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.519Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 4.jpg
2023-08-14T16:04:48.519Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.519Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.519Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:04:48.519Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:04:48.519Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.519Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 4.jpg
2023-08-14T16:04:48.519Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.519Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.519Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:04:48.519Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:04:46Z","permissions":"rwl","containerName":"oleg","blobName":"4.jpg","signedResource":"c"}
2023-08-14T16:04:48.519Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:04:48.520Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:04:46Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:04:48.520Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 debug: BlobSASAuthenticator:validate() Calculated signature is: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.520Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:04:48.520Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:04:48.520Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:04:48.520Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:04:48.520Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:04:48.520Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:04:48.520Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:48.520Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"f00e6ee5-1fe1-42cf-558b-e0c8d36b1f13","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2019-07-07"}
2023-08-14T16:04:48.520Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:48.520Z 05e98081-5840-4b4b-a1a3-77dbe6e917b0 info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"467323","content-type":"image/jpeg","etag":"\"0x20021DC4FE14AE0\"","content-md5":"nbTZU6yagqqG6fSdJmvTtQ==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"f00e6ee5-1fe1-42cf-558b-e0c8d36b1f13","x-ms-request-id":"05e98081-5840-4b4b-a1a3-77dbe6e917b0","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:04:48 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:04:48 GMT"}
2023-08-14T16:04:48.521Z 4eecce7e-1545-4109-8209-570b718906c0 info: BlobStorageContextMiddleware: RequestMethod=PUT RequestURL=http://127.0.0.1/devstoreaccount1/oleg/10.png?se=2023-09-13T16%3A04%3A46Z&sig=yB37%2BewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","content-length":"1396766","x-ms-blob-cache-control":"","x-ms-blob-content-disposition":"","x-ms-blob-content-encoding":"","x-ms-blob-content-language":"","x-ms-blob-content-md5":"DBkcRvIVD45KGcGPXBYWUA==","x-ms-blob-content-type":"image/png","x-ms-blob-type":"BlockBlob","x-ms-client-request-id":"89fdf69f-6d2e-4791-5fb4-5ca0dc6bc3b4","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:48.521Z 4eecce7e-1545-4109-8209-570b718906c0 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=10.png
2023-08-14T16:04:48.521Z 4eecce7e-1545-4109-8209-570b718906c0 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:48.521Z 4eecce7e-1545-4109-8209-570b718906c0 info: DispatchMiddleware: Operation=BlockBlob_Upload
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 10.png
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 10.png
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 10.png
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:04:46Z","permissions":"rwl","containerName":"oleg","blobName":"10.png","signedResource":"c"}
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:04:46Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 debug: BlobSASAuthenticator:validate() Calculated signature is: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 debug: BlobSASAuthenticator:validate() Got permission requirements for operation BlockBlob_Upload - {"permission":"wc"}
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 info: BlobSASAuthenticator:validate() For BlockBlob_Upload, if blob exists, the permission must be Write.
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"metadata":{},"requestId":"89fdf69f-6d2e-4791-5fb4-5ca0dc6bc3b4","blobHTTPHeaders":{"blobContentType":"image/png","blobContentEncoding":"","blobContentLanguage":"","blobContentMD5":{"type":"Buffer","data":[12,25,28,70,242,21,15,142,74,25,193,143,92,22,22,80]},"blobCacheControl":"","blobContentDisposition":""},"leaseAccessConditions":{},"cpkInfo":{},"cpkScopeInfo":{},"modifiedAccessConditions":{}},"contentLength":1396766,"version":"2019-07-07","blobType":"BlockBlob","body":"ReadableStream"}
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 debug: OperationQueue.operate() Schedule incoming job 9692da2d-844f-4edc-aba0-c90a20f7712d
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 debug: OperationQueue:execute() Current runningConcurrency:3 maxConcurrency:50 operations.length:1
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 info: FSExtentStore:appendExtent() Select extent from idle location for extent append operation. LocationId:1 extentId:758a4fd5-ebda-4237-8492-9a86d9f5cf76 offset:467323 MAX_EXTENT_SIZE:67108864 
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 debug: FSExtentStore:appendExtent() Get fd:44 for extent:758a4fd5-ebda-4237-8492-9a86d9f5cf76 from cache.
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 debug: FSExtentStore:appendExtent() Created write stream for fd:44
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 debug: FSExtentStore:appendExtent() Start writing to extent 758a4fd5-ebda-4237-8492-9a86d9f5cf76
2023-08-14T16:04:48.522Z 4eecce7e-1545-4109-8209-570b718906c0 debug: FSExtentStore:streamPipe() Start piping data to write stream
2023-08-14T16:04:48.522Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: FSExtentStore:streamPipe() Flush data to fd:47 successfully. Resolve streamPipe().
2023-08-14T16:04:48.522Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: FSExtentStore:appendExtent() Write finish, start updating extent metadata. extent:{"id":"4267d371-b0d3-49cb-9ead-dd64504762e8","locationId":"Default","path":"4267d371-b0d3-49cb-9ead-dd64504762e8","size":1591097,"lastModifiedInMS":1692029088522}
2023-08-14T16:04:48.522Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: FSExtentStore:appendExtent() Update extent metadata done. Resolve()
2023-08-14T16:04:48.522Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: OperationQueue.operate() Job 33e2e38f-a4f6-4ef9-a37a-384eab63ebda completes callback, resolve.
2023-08-14T16:04:48.523Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: OperationQueue.operate() Schedule incoming job e116d576-445a-41be-9122-c061b8e67748
2023-08-14T16:04:48.523Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: OperationQueue:execute() Current runningConcurrency:0 maxConcurrency:100 operations.length:1
2023-08-14T16:04:48.523Z cebe366c-54a1-4fd7-8b81-b36de7c77189 verbose: FSExtentStore:readExtent() Creating read stream. LocationId:Default extentId:4267d371-b0d3-49cb-9ead-dd64504762e8 path:test_files/__blobstorage__/4267d371-b0d3-49cb-9ead-dd64504762e8 offset:0 count:1591097 end:1591096
2023-08-14T16:04:48.523Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: OperationQueue.operate() Job e116d576-445a-41be-9122-c061b8e67748 completes callback, resolve.
2023-08-14T16:04:48.523Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: OperationQueue:execute() Current runningConcurrency:3 maxConcurrency:50 operations.length:0
2023-08-14T16:04:48.523Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: OperationQueue:execute() return. Operation.length === 0
2023-08-14T16:04:48.523Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: OperationQueue:execute() Current runningConcurrency:0 maxConcurrency:100 operations.length:0
2023-08-14T16:04:48.523Z cebe366c-54a1-4fd7-8b81-b36de7c77189 debug: OperationQueue:execute() return. Operation.length === 0
2023-08-14T16:04:48.523Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: FSExtentStore:streamPipe() Flush data to fd:46 successfully. Resolve streamPipe().
2023-08-14T16:04:48.523Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: FSExtentStore:appendExtent() Write finish, start updating extent metadata. extent:{"id":"d44dc0c6-4d6b-4962-9eb9-5b0593e278eb","locationId":"Default","path":"d44dc0c6-4d6b-4962-9eb9-5b0593e278eb","size":1888630,"lastModifiedInMS":1692029088523}
2023-08-14T16:04:48.523Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: FSExtentStore:appendExtent() Update extent metadata done. Resolve()
2023-08-14T16:04:48.523Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: OperationQueue.operate() Job 4cda4271-4f9a-4c1a-aa76-b5fe8f497f2a completes callback, resolve.
2023-08-14T16:04:48.523Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: OperationQueue.operate() Schedule incoming job 3cd7229a-1200-4f9a-9efb-38dec2d34d0d
2023-08-14T16:04:48.523Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: OperationQueue:execute() Current runningConcurrency:0 maxConcurrency:100 operations.length:1
2023-08-14T16:04:48.523Z 007d10fe-cdc7-4344-8cab-e367474d1605 verbose: FSExtentStore:readExtent() Creating read stream. LocationId:Default extentId:d44dc0c6-4d6b-4962-9eb9-5b0593e278eb path:test_files/__blobstorage__/d44dc0c6-4d6b-4962-9eb9-5b0593e278eb offset:0 count:1888630 end:1888629
2023-08-14T16:04:48.523Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: OperationQueue.operate() Job 3cd7229a-1200-4f9a-9efb-38dec2d34d0d completes callback, resolve.
2023-08-14T16:04:48.523Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: OperationQueue:execute() Current runningConcurrency:2 maxConcurrency:50 operations.length:0
2023-08-14T16:04:48.523Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: OperationQueue:execute() return. Operation.length === 0
2023-08-14T16:04:48.523Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: OperationQueue:execute() Current runningConcurrency:0 maxConcurrency:100 operations.length:0
2023-08-14T16:04:48.523Z 007d10fe-cdc7-4344-8cab-e367474d1605 debug: OperationQueue:execute() return. Operation.length === 0
2023-08-14T16:04:48.527Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: FSExtentStore:streamPipe() Readable stream triggers close event, 1413252 bytes piped
2023-08-14T16:04:48.527Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: FSExtentStore:streamPipe() Invoke write stream end()
2023-08-14T16:04:48.527Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: FSExtentStore:streamPipe() Writable stream triggers finish event, after 1413252 bytes piped. Flush data to fd:45.
2023-08-14T16:04:48.527Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: FSExtentStore:streamPipe() Readable stream triggers close event, 1413252 bytes piped
2023-08-14T16:04:48.530Z 4eecce7e-1545-4109-8209-570b718906c0 debug: FSExtentStore:streamPipe() Readable stream triggers close event, 1396766 bytes piped
2023-08-14T16:04:48.530Z 4eecce7e-1545-4109-8209-570b718906c0 debug: FSExtentStore:streamPipe() Invoke write stream end()
2023-08-14T16:04:48.530Z 4eecce7e-1545-4109-8209-570b718906c0 debug: FSExtentStore:streamPipe() Readable stream triggers close event, 1396766 bytes piped
2023-08-14T16:04:48.530Z 4eecce7e-1545-4109-8209-570b718906c0 debug: FSExtentStore:streamPipe() Writable stream triggers finish event, after 1396766 bytes piped. Flush data to fd:44.
2023-08-14T16:04:48.531Z cebe366c-54a1-4fd7-8b81-b36de7c77189 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:48.531Z cebe366c-54a1-4fd7-8b81-b36de7c77189 info: EndMiddleware: End response. TotalTimeInMS=48 StatusCode=201 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","etag":"\"0x1BEBAB89E9B70D0\"","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","content-md5":"o4qsh2qWccT1fdXC2fI9jg==","x-ms-client-request-id":"8631514c-eeac-4acd-4f94-25f82b2ac19e","x-ms-request-id":"cebe366c-54a1-4fd7-8b81-b36de7c77189","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-request-server-encrypted":"true"}
2023-08-14T16:04:48.531Z cebe366c-54a1-4fd7-8b81-b36de7c77189 verbose: FSExtentStore:readExtent() Read stream closed. LocationId:Default extentId:4267d371-b0d3-49cb-9ead-dd64504762e8 path:test_files/__blobstorage__/4267d371-b0d3-49cb-9ead-dd64504762e8 offset:0 count:1591097 end:1591096
2023-08-14T16:04:48.532Z 007d10fe-cdc7-4344-8cab-e367474d1605 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:48.532Z 007d10fe-cdc7-4344-8cab-e367474d1605 info: EndMiddleware: End response. TotalTimeInMS=52 StatusCode=201 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","etag":"\"0x1F4C9F8EBF76160\"","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","content-md5":"AF2DTS+hjg/7a5bF2nY/oQ==","x-ms-client-request-id":"7268b11a-41d9-4fb3-4c3a-5b18acd90dd7","x-ms-request-id":"007d10fe-cdc7-4344-8cab-e367474d1605","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-request-server-encrypted":"true"}
2023-08-14T16:04:48.532Z 007d10fe-cdc7-4344-8cab-e367474d1605 verbose: FSExtentStore:readExtent() Read stream closed. LocationId:Default extentId:d44dc0c6-4d6b-4962-9eb9-5b0593e278eb path:test_files/__blobstorage__/d44dc0c6-4d6b-4962-9eb9-5b0593e278eb offset:0 count:1888630 end:1888629
2023-08-14T16:04:48.533Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/9.png?se=2023-09-13T16%3A04%3A46Z&sig=yB37%2BewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"ba10f98c-502f-4293-45bd-fb3dc6eb88db","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:48.533Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=9.png
2023-08-14T16:04:48.533Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:48.536Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:04:48.536Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:48.536Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:48.536Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.536Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 9.png
2023-08-14T16:04:48.536Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:48.536Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:48.536Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:04:48.536Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:04:48.536Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.536Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 9.png
2023-08-14T16:04:48.536Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.536Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.536Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:04:48.536Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:04:48.536Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.536Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 9.png
2023-08-14T16:04:48.536Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.536Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.536Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:04:48.536Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:04:46Z","permissions":"rwl","containerName":"oleg","blobName":"9.png","signedResource":"c"}
2023-08-14T16:04:48.536Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:04:48.536Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:04:46Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:04:48.536Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 debug: BlobSASAuthenticator:validate() Calculated signature is: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.536Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:04:48.536Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:04:48.536Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:04:48.536Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:04:48.536Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:04:48.537Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:04:48.537Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:48.537Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"ba10f98c-502f-4293-45bd-fb3dc6eb88db","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2019-07-07"}
2023-08-14T16:04:48.537Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:48.537Z 73d1645a-1f5d-4014-a1f3-33608d3c19e0 info: EndMiddleware: End response. TotalTimeInMS=4 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"1591097","content-type":"image/png","etag":"\"0x1BEBAB89E9B70D0\"","content-md5":"o4qsh2qWccT1fdXC2fI9jg==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"ba10f98c-502f-4293-45bd-fb3dc6eb88db","x-ms-request-id":"73d1645a-1f5d-4014-a1f3-33608d3c19e0","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:04:48 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:04:48 GMT"}
2023-08-14T16:04:48.538Z 743c5565-b232-4ad9-9a84-90495bcac0e2 info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/8.png?se=2023-09-13T16%3A04%3A46Z&sig=yB37%2BewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"b39a3393-68a9-4996-643d-32639ce014cf","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:48.538Z 743c5565-b232-4ad9-9a84-90495bcac0e2 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=8.png
2023-08-14T16:04:48.538Z 743c5565-b232-4ad9-9a84-90495bcac0e2 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:48.538Z 743c5565-b232-4ad9-9a84-90495bcac0e2 info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:04:48.539Z 743c5565-b232-4ad9-9a84-90495bcac0e2 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:48.539Z 743c5565-b232-4ad9-9a84-90495bcac0e2 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:48.539Z 743c5565-b232-4ad9-9a84-90495bcac0e2 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.539Z 743c5565-b232-4ad9-9a84-90495bcac0e2 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 8.png
2023-08-14T16:04:48.539Z 743c5565-b232-4ad9-9a84-90495bcac0e2 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:48.539Z 743c5565-b232-4ad9-9a84-90495bcac0e2 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:48.539Z 743c5565-b232-4ad9-9a84-90495bcac0e2 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:04:48.539Z 743c5565-b232-4ad9-9a84-90495bcac0e2 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:04:48.539Z 743c5565-b232-4ad9-9a84-90495bcac0e2 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.539Z 743c5565-b232-4ad9-9a84-90495bcac0e2 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 8.png
2023-08-14T16:04:48.539Z 743c5565-b232-4ad9-9a84-90495bcac0e2 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.539Z 743c5565-b232-4ad9-9a84-90495bcac0e2 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.539Z 743c5565-b232-4ad9-9a84-90495bcac0e2 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:04:48.539Z 743c5565-b232-4ad9-9a84-90495bcac0e2 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:04:48.539Z 743c5565-b232-4ad9-9a84-90495bcac0e2 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.539Z 743c5565-b232-4ad9-9a84-90495bcac0e2 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 8.png
2023-08-14T16:04:48.539Z 743c5565-b232-4ad9-9a84-90495bcac0e2 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.539Z 743c5565-b232-4ad9-9a84-90495bcac0e2 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.539Z 743c5565-b232-4ad9-9a84-90495bcac0e2 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:04:48.539Z 743c5565-b232-4ad9-9a84-90495bcac0e2 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:04:46Z","permissions":"rwl","containerName":"oleg","blobName":"8.png","signedResource":"c"}
2023-08-14T16:04:48.539Z 743c5565-b232-4ad9-9a84-90495bcac0e2 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:04:48.539Z 743c5565-b232-4ad9-9a84-90495bcac0e2 debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:04:46Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:04:48.539Z 743c5565-b232-4ad9-9a84-90495bcac0e2 debug: BlobSASAuthenticator:validate() Calculated signature is: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.539Z 743c5565-b232-4ad9-9a84-90495bcac0e2 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:04:48.539Z 743c5565-b232-4ad9-9a84-90495bcac0e2 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:04:48.539Z 743c5565-b232-4ad9-9a84-90495bcac0e2 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:04:48.539Z 743c5565-b232-4ad9-9a84-90495bcac0e2 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:04:48.539Z 743c5565-b232-4ad9-9a84-90495bcac0e2 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:04:48.539Z 743c5565-b232-4ad9-9a84-90495bcac0e2 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:04:48.539Z 743c5565-b232-4ad9-9a84-90495bcac0e2 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:48.540Z 743c5565-b232-4ad9-9a84-90495bcac0e2 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"b39a3393-68a9-4996-643d-32639ce014cf","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2019-07-07"}
2023-08-14T16:04:48.540Z 743c5565-b232-4ad9-9a84-90495bcac0e2 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:48.540Z 743c5565-b232-4ad9-9a84-90495bcac0e2 info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"1888630","content-type":"image/png","etag":"\"0x1F4C9F8EBF76160\"","content-md5":"AF2DTS+hjg/7a5bF2nY/oQ==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"b39a3393-68a9-4996-643d-32639ce014cf","x-ms-request-id":"743c5565-b232-4ad9-9a84-90495bcac0e2","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:04:48 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:04:48 GMT"}
2023-08-14T16:04:48.541Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: FSExtentStore:streamPipe() Flush data to fd:45 successfully. Resolve streamPipe().
2023-08-14T16:04:48.541Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: FSExtentStore:appendExtent() Write finish, start updating extent metadata. extent:{"id":"8bbe146c-2fdd-408a-a88d-8ae920b7c9b4","locationId":"Default","path":"8bbe146c-2fdd-408a-a88d-8ae920b7c9b4","size":1589368,"lastModifiedInMS":1692029088541}
2023-08-14T16:04:48.541Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: FSExtentStore:appendExtent() Update extent metadata done. Resolve()
2023-08-14T16:04:48.541Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: OperationQueue.operate() Job 48960473-48af-43c1-a73b-0d017c2a39cc completes callback, resolve.
2023-08-14T16:04:48.541Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: OperationQueue.operate() Schedule incoming job 7897dcfa-9482-46e8-b299-f9f35e33f3dd
2023-08-14T16:04:48.542Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: OperationQueue:execute() Current runningConcurrency:0 maxConcurrency:100 operations.length:1
2023-08-14T16:04:48.542Z 9756f79a-c9f4-4871-8732-6677088e6e10 verbose: FSExtentStore:readExtent() Creating read stream. LocationId:Default extentId:8bbe146c-2fdd-408a-a88d-8ae920b7c9b4 path:test_files/__blobstorage__/8bbe146c-2fdd-408a-a88d-8ae920b7c9b4 offset:176116 count:1413252 end:1589367
2023-08-14T16:04:48.542Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: OperationQueue.operate() Job 7897dcfa-9482-46e8-b299-f9f35e33f3dd completes callback, resolve.
2023-08-14T16:04:48.542Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: OperationQueue:execute() Current runningConcurrency:1 maxConcurrency:50 operations.length:0
2023-08-14T16:04:48.542Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: OperationQueue:execute() return. Operation.length === 0
2023-08-14T16:04:48.542Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: OperationQueue:execute() Current runningConcurrency:0 maxConcurrency:100 operations.length:0
2023-08-14T16:04:48.542Z 9756f79a-c9f4-4871-8732-6677088e6e10 debug: OperationQueue:execute() return. Operation.length === 0
2023-08-14T16:04:48.542Z 6e322621-3e7a-4161-b19b-00138459cbbc info: BlobStorageContextMiddleware: RequestMethod=PUT RequestURL=http://127.0.0.1/devstoreaccount1/oleg/5.png?se=2023-09-13T16%3A04%3A46Z&sig=yB37%2BewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","content-length":"1637282","x-ms-blob-cache-control":"","x-ms-blob-content-disposition":"","x-ms-blob-content-encoding":"","x-ms-blob-content-language":"","x-ms-blob-content-md5":"sVy9MlmydwHP4Qk+L9LtgQ==","x-ms-blob-content-type":"image/png","x-ms-blob-type":"BlockBlob","x-ms-client-request-id":"64876e9e-6ec0-4e7f-748b-567711a02a96","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:48.542Z 6e322621-3e7a-4161-b19b-00138459cbbc info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=5.png
2023-08-14T16:04:48.542Z 6e322621-3e7a-4161-b19b-00138459cbbc verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc info: DispatchMiddleware: Operation=BlockBlob_Upload
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 5.png
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 5.png
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 5.png
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:04:46Z","permissions":"rwl","containerName":"oleg","blobName":"5.png","signedResource":"c"}
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:04:46Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: BlobSASAuthenticator:validate() Calculated signature is: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: BlobSASAuthenticator:validate() Got permission requirements for operation BlockBlob_Upload - {"permission":"wc"}
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc info: BlobSASAuthenticator:validate() For BlockBlob_Upload, if blob exists, the permission must be Write.
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:04:48.544Z 6e322621-3e7a-4161-b19b-00138459cbbc verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:48.545Z 6e322621-3e7a-4161-b19b-00138459cbbc info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"metadata":{},"requestId":"64876e9e-6ec0-4e7f-748b-567711a02a96","blobHTTPHeaders":{"blobContentType":"image/png","blobContentEncoding":"","blobContentLanguage":"","blobContentMD5":{"type":"Buffer","data":[177,92,189,50,89,178,119,1,207,225,9,62,47,210,237,129]},"blobCacheControl":"","blobContentDisposition":""},"leaseAccessConditions":{},"cpkInfo":{},"cpkScopeInfo":{},"modifiedAccessConditions":{}},"contentLength":1637282,"version":"2019-07-07","blobType":"BlockBlob","body":"ReadableStream"}
2023-08-14T16:04:48.545Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: OperationQueue.operate() Schedule incoming job 9c30ac7e-1a56-453d-82c6-463437db19b7
2023-08-14T16:04:48.545Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: OperationQueue:execute() Current runningConcurrency:1 maxConcurrency:50 operations.length:1
2023-08-14T16:04:48.545Z 6e322621-3e7a-4161-b19b-00138459cbbc info: FSExtentStore:appendExtent() Select extent from idle location for extent append operation. LocationId:2 extentId:8bbe146c-2fdd-408a-a88d-8ae920b7c9b4 offset:1589368 MAX_EXTENT_SIZE:67108864 
2023-08-14T16:04:48.545Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: FSExtentStore:appendExtent() Get fd:45 for extent:8bbe146c-2fdd-408a-a88d-8ae920b7c9b4 from cache.
2023-08-14T16:04:48.545Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: FSExtentStore:appendExtent() Created write stream for fd:45
2023-08-14T16:04:48.545Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: FSExtentStore:appendExtent() Start writing to extent 8bbe146c-2fdd-408a-a88d-8ae920b7c9b4
2023-08-14T16:04:48.545Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: FSExtentStore:streamPipe() Start piping data to write stream
2023-08-14T16:04:48.547Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 info: BlobStorageContextMiddleware: RequestMethod=PUT RequestURL=http://127.0.0.1/devstoreaccount1/oleg/6.png?se=2023-09-13T16%3A04%3A46Z&sig=yB37%2BewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","content-length":"1311150","x-ms-blob-cache-control":"","x-ms-blob-content-disposition":"","x-ms-blob-content-encoding":"","x-ms-blob-content-language":"","x-ms-blob-content-md5":"PTO201002qAVYqOzyemSoQ==","x-ms-blob-content-type":"image/png","x-ms-blob-type":"BlockBlob","x-ms-client-request-id":"dd28311d-dd82-42b1-7f3e-377affc7abf0","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:48.547Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=6.png
2023-08-14T16:04:48.547Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:48.548Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 info: DispatchMiddleware: Operation=BlockBlob_Upload
2023-08-14T16:04:48.548Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:48.548Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:48.548Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.548Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 6.png
2023-08-14T16:04:48.548Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:48.548Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:48.548Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:04:48.549Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:04:48.549Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.549Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 6.png
2023-08-14T16:04:48.549Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.549Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.549Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:04:48.549Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:04:48.549Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.549Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 6.png
2023-08-14T16:04:48.549Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.549Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.549Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:04:48.549Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:04:46Z","permissions":"rwl","containerName":"oleg","blobName":"6.png","signedResource":"c"}
2023-08-14T16:04:48.549Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:04:48.549Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:04:46Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:04:48.549Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: BlobSASAuthenticator:validate() Calculated signature is: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.549Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:04:48.549Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:04:48.549Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:04:48.549Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:04:48.549Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: BlobSASAuthenticator:validate() Got permission requirements for operation BlockBlob_Upload - {"permission":"wc"}
2023-08-14T16:04:48.549Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 info: BlobSASAuthenticator:validate() For BlockBlob_Upload, if blob exists, the permission must be Write.
2023-08-14T16:04:48.549Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:04:48.549Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:48.550Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"metadata":{},"requestId":"dd28311d-dd82-42b1-7f3e-377affc7abf0","blobHTTPHeaders":{"blobContentType":"image/png","blobContentEncoding":"","blobContentLanguage":"","blobContentMD5":{"type":"Buffer","data":[61,51,182,211,93,52,218,160,21,98,163,179,201,233,146,161]},"blobCacheControl":"","blobContentDisposition":""},"leaseAccessConditions":{},"cpkInfo":{},"cpkScopeInfo":{},"modifiedAccessConditions":{}},"contentLength":1311150,"version":"2019-07-07","blobType":"BlockBlob","body":"ReadableStream"}
2023-08-14T16:04:48.550Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: OperationQueue.operate() Schedule incoming job 5a0e6398-0645-430b-8c6c-091cad6e15c6
2023-08-14T16:04:48.550Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: OperationQueue:execute() Current runningConcurrency:2 maxConcurrency:50 operations.length:1
2023-08-14T16:04:48.550Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 info: FSExtentStore:appendExtent() Select extent from idle location for extent append operation. LocationId:3 extentId:d44dc0c6-4d6b-4962-9eb9-5b0593e278eb offset:1888630 MAX_EXTENT_SIZE:67108864 
2023-08-14T16:04:48.550Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: FSExtentStore:appendExtent() Get fd:46 for extent:d44dc0c6-4d6b-4962-9eb9-5b0593e278eb from cache.
2023-08-14T16:04:48.550Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: FSExtentStore:appendExtent() Created write stream for fd:46
2023-08-14T16:04:48.550Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: FSExtentStore:appendExtent() Start writing to extent d44dc0c6-4d6b-4962-9eb9-5b0593e278eb
2023-08-14T16:04:48.550Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: FSExtentStore:streamPipe() Start piping data to write stream
2023-08-14T16:04:48.551Z 4eecce7e-1545-4109-8209-570b718906c0 debug: FSExtentStore:streamPipe() Flush data to fd:44 successfully. Resolve streamPipe().
2023-08-14T16:04:48.551Z 4eecce7e-1545-4109-8209-570b718906c0 debug: FSExtentStore:appendExtent() Write finish, start updating extent metadata. extent:{"id":"758a4fd5-ebda-4237-8492-9a86d9f5cf76","locationId":"Default","path":"758a4fd5-ebda-4237-8492-9a86d9f5cf76","size":1864089,"lastModifiedInMS":1692029088551}
2023-08-14T16:04:48.551Z 4eecce7e-1545-4109-8209-570b718906c0 debug: FSExtentStore:appendExtent() Update extent metadata done. Resolve()
2023-08-14T16:04:48.551Z 4eecce7e-1545-4109-8209-570b718906c0 debug: OperationQueue.operate() Job 9692da2d-844f-4edc-aba0-c90a20f7712d completes callback, resolve.
2023-08-14T16:04:48.551Z 4eecce7e-1545-4109-8209-570b718906c0 debug: OperationQueue.operate() Schedule incoming job 2ad9e70b-1282-4516-ad1e-904a2cb95e24
2023-08-14T16:04:48.551Z 4eecce7e-1545-4109-8209-570b718906c0 debug: OperationQueue:execute() Current runningConcurrency:0 maxConcurrency:100 operations.length:1
2023-08-14T16:04:48.551Z 4eecce7e-1545-4109-8209-570b718906c0 verbose: FSExtentStore:readExtent() Creating read stream. LocationId:Default extentId:758a4fd5-ebda-4237-8492-9a86d9f5cf76 path:test_files/__blobstorage__/758a4fd5-ebda-4237-8492-9a86d9f5cf76 offset:467323 count:1396766 end:1864088
2023-08-14T16:04:48.551Z 4eecce7e-1545-4109-8209-570b718906c0 debug: OperationQueue.operate() Job 2ad9e70b-1282-4516-ad1e-904a2cb95e24 completes callback, resolve.
2023-08-14T16:04:48.551Z 4eecce7e-1545-4109-8209-570b718906c0 debug: OperationQueue:execute() Current runningConcurrency:2 maxConcurrency:50 operations.length:0
2023-08-14T16:04:48.551Z 4eecce7e-1545-4109-8209-570b718906c0 debug: OperationQueue:execute() return. Operation.length === 0
2023-08-14T16:04:48.551Z 4eecce7e-1545-4109-8209-570b718906c0 debug: OperationQueue:execute() Current runningConcurrency:0 maxConcurrency:100 operations.length:0
2023-08-14T16:04:48.551Z 4eecce7e-1545-4109-8209-570b718906c0 debug: OperationQueue:execute() return. Operation.length === 0
2023-08-14T16:04:48.562Z 9756f79a-c9f4-4871-8732-6677088e6e10 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:48.563Z 9756f79a-c9f4-4871-8732-6677088e6e10 info: EndMiddleware: End response. TotalTimeInMS=50 StatusCode=201 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","etag":"\"0x1FCDCB420D0E650\"","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","content-md5":"a3MdCt7Cyh3g1MZQhClGKA==","x-ms-client-request-id":"c59f9f12-a563-4aab-5502-42b114c43dea","x-ms-request-id":"9756f79a-c9f4-4871-8732-6677088e6e10","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-request-server-encrypted":"true"}
2023-08-14T16:04:48.563Z 9756f79a-c9f4-4871-8732-6677088e6e10 verbose: FSExtentStore:readExtent() Read stream closed. LocationId:Default extentId:8bbe146c-2fdd-408a-a88d-8ae920b7c9b4 path:test_files/__blobstorage__/8bbe146c-2fdd-408a-a88d-8ae920b7c9b4 offset:176116 count:1413252 end:1589367
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/7.png?se=2023-09-13T16%3A04%3A46Z&sig=yB37%2BewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"09e10bc7-ac23-43ba-511d-a70d867e40cf","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=7.png
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 7.png
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 7.png
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 7.png
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:04:46Z","permissions":"rwl","containerName":"oleg","blobName":"7.png","signedResource":"c"}
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:04:46Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 debug: BlobSASAuthenticator:validate() Calculated signature is: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"09e10bc7-ac23-43ba-511d-a70d867e40cf","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2019-07-07"}
2023-08-14T16:04:48.564Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:48.565Z fa8f8caf-b1f3-4ea9-835d-248d79ff3402 info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"1413252","content-type":"image/png","etag":"\"0x1FCDCB420D0E650\"","content-md5":"a3MdCt7Cyh3g1MZQhClGKA==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"09e10bc7-ac23-43ba-511d-a70d867e40cf","x-ms-request-id":"fa8f8caf-b1f3-4ea9-835d-248d79ff3402","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:04:48 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:04:48 GMT"}
2023-08-14T16:04:48.565Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: FSExtentStore:streamPipe() Readable stream triggers close event, 1311150 bytes piped
2023-08-14T16:04:48.565Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: FSExtentStore:streamPipe() Invoke write stream end()
2023-08-14T16:04:48.565Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: FSExtentStore:streamPipe() Readable stream triggers close event, 1311150 bytes piped
2023-08-14T16:04:48.565Z 4eecce7e-1545-4109-8209-570b718906c0 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:48.565Z 4eecce7e-1545-4109-8209-570b718906c0 info: EndMiddleware: End response. TotalTimeInMS=44 StatusCode=201 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","etag":"\"0x1D2864A755ECF90\"","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","content-md5":"DBkcRvIVD45KGcGPXBYWUA==","x-ms-client-request-id":"89fdf69f-6d2e-4791-5fb4-5ca0dc6bc3b4","x-ms-request-id":"4eecce7e-1545-4109-8209-570b718906c0","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-request-server-encrypted":"true"}
2023-08-14T16:04:48.565Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: FSExtentStore:streamPipe() Writable stream triggers finish event, after 1311150 bytes piped. Flush data to fd:46.
2023-08-14T16:04:48.565Z 4eecce7e-1545-4109-8209-570b718906c0 verbose: FSExtentStore:readExtent() Read stream closed. LocationId:Default extentId:758a4fd5-ebda-4237-8492-9a86d9f5cf76 path:test_files/__blobstorage__/758a4fd5-ebda-4237-8492-9a86d9f5cf76 offset:467323 count:1396766 end:1864088
2023-08-14T16:04:48.566Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 info: BlobStorageContextMiddleware: RequestMethod=PUT RequestURL=http://127.0.0.1/devstoreaccount1/oleg/2.png?se=2023-09-13T16%3A04%3A46Z&sig=yB37%2BewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","content-length":"6560203","x-ms-blob-cache-control":"","x-ms-blob-content-disposition":"","x-ms-blob-content-encoding":"","x-ms-blob-content-language":"","x-ms-blob-content-md5":"e3Xw41sUJOMPTmoInCYmYg==","x-ms-blob-content-type":"image/png","x-ms-blob-type":"BlockBlob","x-ms-client-request-id":"6c24c603-d84f-4032-7790-aed2cfb83ea5","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:48.566Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=2.png
2023-08-14T16:04:48.566Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:48.566Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 info: DispatchMiddleware: Operation=BlockBlob_Upload
2023-08-14T16:04:48.566Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:48.566Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:48.566Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.566Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 2.png
2023-08-14T16:04:48.566Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:48.566Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:48.566Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:04:48.567Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:04:48.567Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.567Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 2.png
2023-08-14T16:04:48.567Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.567Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.567Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:04:48.567Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:04:48.567Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.567Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 2.png
2023-08-14T16:04:48.567Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.567Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.567Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:04:48.567Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:04:46Z","permissions":"rwl","containerName":"oleg","blobName":"2.png","signedResource":"c"}
2023-08-14T16:04:48.567Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:04:48.567Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:04:46Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:04:48.567Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: BlobSASAuthenticator:validate() Calculated signature is: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.567Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:04:48.567Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:04:48.567Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:04:48.567Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:04:48.567Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: BlobSASAuthenticator:validate() Got permission requirements for operation BlockBlob_Upload - {"permission":"wc"}
2023-08-14T16:04:48.567Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 info: BlobSASAuthenticator:validate() For BlockBlob_Upload, if blob exists, the permission must be Write.
2023-08-14T16:04:48.567Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:04:48.567Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:48.567Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"metadata":{},"requestId":"6c24c603-d84f-4032-7790-aed2cfb83ea5","blobHTTPHeaders":{"blobContentType":"image/png","blobContentEncoding":"","blobContentLanguage":"","blobContentMD5":{"type":"Buffer","data":[123,117,240,227,91,20,36,227,15,78,106,8,156,38,38,98]},"blobCacheControl":"","blobContentDisposition":""},"leaseAccessConditions":{},"cpkInfo":{},"cpkScopeInfo":{},"modifiedAccessConditions":{}},"contentLength":6560203,"version":"2019-07-07","blobType":"BlockBlob","body":"ReadableStream"}
2023-08-14T16:04:48.568Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: OperationQueue.operate() Schedule incoming job a0abe434-73aa-4242-aff1-860932ec17f6
2023-08-14T16:04:48.568Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: OperationQueue:execute() Current runningConcurrency:2 maxConcurrency:50 operations.length:1
2023-08-14T16:04:48.568Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 info: FSExtentStore:appendExtent() Select extent from idle location for extent append operation. LocationId:1 extentId:758a4fd5-ebda-4237-8492-9a86d9f5cf76 offset:1864089 MAX_EXTENT_SIZE:67108864 
2023-08-14T16:04:48.568Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: FSExtentStore:appendExtent() Get fd:44 for extent:758a4fd5-ebda-4237-8492-9a86d9f5cf76 from cache.
2023-08-14T16:04:48.568Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: FSExtentStore:appendExtent() Created write stream for fd:44
2023-08-14T16:04:48.568Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: FSExtentStore:appendExtent() Start writing to extent 758a4fd5-ebda-4237-8492-9a86d9f5cf76
2023-08-14T16:04:48.568Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: FSExtentStore:streamPipe() Start piping data to write stream
2023-08-14T16:04:48.569Z b2479126-cea1-434d-af36-ba3934c8e6cd info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/10.png?se=2023-09-13T16%3A04%3A46Z&sig=yB37%2BewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"f2bfbefe-0622-41e0-53bb-80d4197a52c8","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:48.569Z b2479126-cea1-434d-af36-ba3934c8e6cd info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=10.png
2023-08-14T16:04:48.569Z b2479126-cea1-434d-af36-ba3934c8e6cd verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 10.png
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 10.png
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 10.png
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:04:46Z","permissions":"rwl","containerName":"oleg","blobName":"10.png","signedResource":"c"}
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:04:46Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd debug: BlobSASAuthenticator:validate() Calculated signature is: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:48.570Z b2479126-cea1-434d-af36-ba3934c8e6cd info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"f2bfbefe-0622-41e0-53bb-80d4197a52c8","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2019-07-07"}
2023-08-14T16:04:48.571Z b2479126-cea1-434d-af36-ba3934c8e6cd verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:48.571Z b2479126-cea1-434d-af36-ba3934c8e6cd info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"1396766","content-type":"image/png","etag":"\"0x1D2864A755ECF90\"","content-md5":"DBkcRvIVD45KGcGPXBYWUA==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"f2bfbefe-0622-41e0-53bb-80d4197a52c8","x-ms-request-id":"b2479126-cea1-434d-af36-ba3934c8e6cd","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:04:48 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:04:48 GMT"}
2023-08-14T16:04:48.573Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: FSExtentStore:streamPipe() Readable stream triggers close event, 1637282 bytes piped
2023-08-14T16:04:48.573Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: FSExtentStore:streamPipe() Invoke write stream end()
2023-08-14T16:04:48.573Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: FSExtentStore:streamPipe() Readable stream triggers close event, 1637282 bytes piped
2023-08-14T16:04:48.573Z f591ce73-7b00-4e14-941d-4975bd8df566 info: BlobStorageContextMiddleware: RequestMethod=PUT RequestURL=http://127.0.0.1/devstoreaccount1/oleg/1.png?se=2023-09-13T16%3A04%3A46Z&sig=yB37%2BewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","content-length":"6604193","x-ms-blob-cache-control":"","x-ms-blob-content-disposition":"","x-ms-blob-content-encoding":"","x-ms-blob-content-language":"","x-ms-blob-content-md5":"pQDre1iacfD8peYXxrWIvw==","x-ms-blob-content-type":"image/png","x-ms-blob-type":"BlockBlob","x-ms-client-request-id":"f97b4fac-75a6-4f5a-71e7-dae4adefee09","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:48.574Z f591ce73-7b00-4e14-941d-4975bd8df566 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=1.png
2023-08-14T16:04:48.574Z f591ce73-7b00-4e14-941d-4975bd8df566 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:48.574Z f591ce73-7b00-4e14-941d-4975bd8df566 info: DispatchMiddleware: Operation=BlockBlob_Upload
2023-08-14T16:04:48.574Z f591ce73-7b00-4e14-941d-4975bd8df566 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:48.574Z f591ce73-7b00-4e14-941d-4975bd8df566 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:48.574Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.574Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 1.png
2023-08-14T16:04:48.575Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:48.575Z f591ce73-7b00-4e14-941d-4975bd8df566 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:48.575Z f591ce73-7b00-4e14-941d-4975bd8df566 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:04:48.575Z f591ce73-7b00-4e14-941d-4975bd8df566 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:04:48.575Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.575Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 1.png
2023-08-14T16:04:48.575Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.575Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.575Z f591ce73-7b00-4e14-941d-4975bd8df566 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:04:48.575Z f591ce73-7b00-4e14-941d-4975bd8df566 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:04:48.575Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.575Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 1.png
2023-08-14T16:04:48.575Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.575Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.575Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:04:48.575Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:04:46Z","permissions":"rwl","containerName":"oleg","blobName":"1.png","signedResource":"c"}
2023-08-14T16:04:48.575Z f591ce73-7b00-4e14-941d-4975bd8df566 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:04:48.575Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:04:46Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:04:48.575Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: BlobSASAuthenticator:validate() Calculated signature is: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.575Z f591ce73-7b00-4e14-941d-4975bd8df566 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:04:48.575Z f591ce73-7b00-4e14-941d-4975bd8df566 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:04:48.575Z f591ce73-7b00-4e14-941d-4975bd8df566 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:04:48.575Z f591ce73-7b00-4e14-941d-4975bd8df566 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:04:48.575Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: BlobSASAuthenticator:validate() Got permission requirements for operation BlockBlob_Upload - {"permission":"wc"}
2023-08-14T16:04:48.575Z f591ce73-7b00-4e14-941d-4975bd8df566 info: BlobSASAuthenticator:validate() For BlockBlob_Upload, if blob exists, the permission must be Write.
2023-08-14T16:04:48.575Z f591ce73-7b00-4e14-941d-4975bd8df566 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:04:48.575Z f591ce73-7b00-4e14-941d-4975bd8df566 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:48.576Z f591ce73-7b00-4e14-941d-4975bd8df566 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"metadata":{},"requestId":"f97b4fac-75a6-4f5a-71e7-dae4adefee09","blobHTTPHeaders":{"blobContentType":"image/png","blobContentEncoding":"","blobContentLanguage":"","blobContentMD5":{"type":"Buffer","data":[165,0,235,123,88,154,113,240,252,165,230,23,198,181,136,191]},"blobCacheControl":"","blobContentDisposition":""},"leaseAccessConditions":{},"cpkInfo":{},"cpkScopeInfo":{},"modifiedAccessConditions":{}},"contentLength":6604193,"version":"2019-07-07","blobType":"BlockBlob","body":"ReadableStream"}
2023-08-14T16:04:48.576Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: OperationQueue.operate() Schedule incoming job 8ce257c4-ec65-47c0-85f6-4445105b7bd7
2023-08-14T16:04:48.576Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: OperationQueue:execute() Current runningConcurrency:3 maxConcurrency:50 operations.length:1
2023-08-14T16:04:48.576Z f591ce73-7b00-4e14-941d-4975bd8df566 info: FSExtentStore:appendExtent() Select extent from idle location for extent append operation. LocationId:4 extentId:4267d371-b0d3-49cb-9ead-dd64504762e8 offset:1591097 MAX_EXTENT_SIZE:67108864 
2023-08-14T16:04:48.576Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: FSExtentStore:appendExtent() Get fd:47 for extent:4267d371-b0d3-49cb-9ead-dd64504762e8 from cache.
2023-08-14T16:04:48.576Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: FSExtentStore:appendExtent() Created write stream for fd:47
2023-08-14T16:04:48.576Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: FSExtentStore:appendExtent() Start writing to extent 4267d371-b0d3-49cb-9ead-dd64504762e8
2023-08-14T16:04:48.576Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: FSExtentStore:streamPipe() Start piping data to write stream
2023-08-14T16:04:48.577Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: FSExtentStore:streamPipe() Writable stream triggers finish event, after 1637282 bytes piped. Flush data to fd:45.
2023-08-14T16:04:48.578Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: FSExtentStore:streamPipe() Flush data to fd:46 successfully. Resolve streamPipe().
2023-08-14T16:04:48.578Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: FSExtentStore:appendExtent() Write finish, start updating extent metadata. extent:{"id":"d44dc0c6-4d6b-4962-9eb9-5b0593e278eb","locationId":"Default","path":"d44dc0c6-4d6b-4962-9eb9-5b0593e278eb","size":3199780,"lastModifiedInMS":1692029088578}
2023-08-14T16:04:48.578Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: FSExtentStore:appendExtent() Update extent metadata done. Resolve()
2023-08-14T16:04:48.578Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: OperationQueue.operate() Job 5a0e6398-0645-430b-8c6c-091cad6e15c6 completes callback, resolve.
2023-08-14T16:04:48.578Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: OperationQueue.operate() Schedule incoming job 60cf0655-7de5-478c-9871-db36b05ec161
2023-08-14T16:04:48.578Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: OperationQueue:execute() Current runningConcurrency:0 maxConcurrency:100 operations.length:1
2023-08-14T16:04:48.578Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 verbose: FSExtentStore:readExtent() Creating read stream. LocationId:Default extentId:d44dc0c6-4d6b-4962-9eb9-5b0593e278eb path:test_files/__blobstorage__/d44dc0c6-4d6b-4962-9eb9-5b0593e278eb offset:1888630 count:1311150 end:3199779
2023-08-14T16:04:48.578Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: OperationQueue.operate() Job 60cf0655-7de5-478c-9871-db36b05ec161 completes callback, resolve.
2023-08-14T16:04:48.578Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: OperationQueue:execute() Current runningConcurrency:3 maxConcurrency:50 operations.length:0
2023-08-14T16:04:48.578Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: OperationQueue:execute() return. Operation.length === 0
2023-08-14T16:04:48.578Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: OperationQueue:execute() Current runningConcurrency:0 maxConcurrency:100 operations.length:0
2023-08-14T16:04:48.578Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 debug: OperationQueue:execute() return. Operation.length === 0
2023-08-14T16:04:48.585Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:48.586Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 info: EndMiddleware: End response. TotalTimeInMS=38 StatusCode=201 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","etag":"\"0x1B1E843FFEA5C80\"","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","content-md5":"PTO201002qAVYqOzyemSoQ==","x-ms-client-request-id":"dd28311d-dd82-42b1-7f3e-377affc7abf0","x-ms-request-id":"6f1999ad-9953-47d2-b10f-edc719b7eb81","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-request-server-encrypted":"true"}
2023-08-14T16:04:48.586Z 6f1999ad-9953-47d2-b10f-edc719b7eb81 verbose: FSExtentStore:readExtent() Read stream closed. LocationId:Default extentId:d44dc0c6-4d6b-4962-9eb9-5b0593e278eb path:test_files/__blobstorage__/d44dc0c6-4d6b-4962-9eb9-5b0593e278eb offset:1888630 count:1311150 end:3199779
2023-08-14T16:04:48.586Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/6.png?se=2023-09-13T16%3A04%3A46Z&sig=yB37%2BewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"6dad1c25-852a-4059-4034-121de933eb55","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:48.586Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=6.png
2023-08-14T16:04:48.586Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 6.png
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 6.png
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 6.png
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:04:46Z","permissions":"rwl","containerName":"oleg","blobName":"6.png","signedResource":"c"}
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:04:46Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da debug: BlobSASAuthenticator:validate() Calculated signature is: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"6dad1c25-852a-4059-4034-121de933eb55","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2019-07-07"}
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:48.587Z 6bd73d27-f29b-4be3-a244-c2f72b8cb1da info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"1311150","content-type":"image/png","etag":"\"0x1B1E843FFEA5C80\"","content-md5":"PTO201002qAVYqOzyemSoQ==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"6dad1c25-852a-4059-4034-121de933eb55","x-ms-request-id":"6bd73d27-f29b-4be3-a244-c2f72b8cb1da","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:04:48 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:04:48 GMT"}
2023-08-14T16:04:48.589Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: FSExtentStore:streamPipe() Flush data to fd:45 successfully. Resolve streamPipe().
2023-08-14T16:04:48.589Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: FSExtentStore:appendExtent() Write finish, start updating extent metadata. extent:{"id":"8bbe146c-2fdd-408a-a88d-8ae920b7c9b4","locationId":"Default","path":"8bbe146c-2fdd-408a-a88d-8ae920b7c9b4","size":3226650,"lastModifiedInMS":1692029088589}
2023-08-14T16:04:48.589Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: FSExtentStore:appendExtent() Update extent metadata done. Resolve()
2023-08-14T16:04:48.589Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: OperationQueue.operate() Job 9c30ac7e-1a56-453d-82c6-463437db19b7 completes callback, resolve.
2023-08-14T16:04:48.589Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: OperationQueue.operate() Schedule incoming job 503679a3-ae82-4a13-9f6b-6237b86403e2
2023-08-14T16:04:48.589Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: OperationQueue:execute() Current runningConcurrency:0 maxConcurrency:100 operations.length:1
2023-08-14T16:04:48.589Z 6e322621-3e7a-4161-b19b-00138459cbbc verbose: FSExtentStore:readExtent() Creating read stream. LocationId:Default extentId:8bbe146c-2fdd-408a-a88d-8ae920b7c9b4 path:test_files/__blobstorage__/8bbe146c-2fdd-408a-a88d-8ae920b7c9b4 offset:1589368 count:1637282 end:3226649
2023-08-14T16:04:48.590Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: OperationQueue.operate() Job 503679a3-ae82-4a13-9f6b-6237b86403e2 completes callback, resolve.
2023-08-14T16:04:48.590Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: OperationQueue:execute() Current runningConcurrency:2 maxConcurrency:50 operations.length:0
2023-08-14T16:04:48.590Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: OperationQueue:execute() return. Operation.length === 0
2023-08-14T16:04:48.590Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: OperationQueue:execute() Current runningConcurrency:0 maxConcurrency:100 operations.length:0
2023-08-14T16:04:48.590Z 6e322621-3e7a-4161-b19b-00138459cbbc debug: OperationQueue:execute() return. Operation.length === 0
2023-08-14T16:04:48.598Z 6e322621-3e7a-4161-b19b-00138459cbbc verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:48.598Z 6e322621-3e7a-4161-b19b-00138459cbbc info: EndMiddleware: End response. TotalTimeInMS=56 StatusCode=201 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","etag":"\"0x22156B27B83DB40\"","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","content-md5":"sVy9MlmydwHP4Qk+L9LtgQ==","x-ms-client-request-id":"64876e9e-6ec0-4e7f-748b-567711a02a96","x-ms-request-id":"6e322621-3e7a-4161-b19b-00138459cbbc","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-request-server-encrypted":"true"}
2023-08-14T16:04:48.598Z 6e322621-3e7a-4161-b19b-00138459cbbc verbose: FSExtentStore:readExtent() Read stream closed. LocationId:Default extentId:8bbe146c-2fdd-408a-a88d-8ae920b7c9b4 path:test_files/__blobstorage__/8bbe146c-2fdd-408a-a88d-8ae920b7c9b4 offset:1589368 count:1637282 end:3226649
2023-08-14T16:04:48.599Z 517c0ae3-b5ce-427d-9f75-2d500112234e info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/5.png?se=2023-09-13T16%3A04%3A46Z&sig=yB37%2BewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"06b3b41d-4d49-4f88-5599-43fd65d0a970","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:48.599Z 517c0ae3-b5ce-427d-9f75-2d500112234e info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=5.png
2023-08-14T16:04:48.599Z 517c0ae3-b5ce-427d-9f75-2d500112234e verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:48.599Z 517c0ae3-b5ce-427d-9f75-2d500112234e info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:04:48.599Z 517c0ae3-b5ce-427d-9f75-2d500112234e verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:48.599Z 517c0ae3-b5ce-427d-9f75-2d500112234e info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:48.599Z 517c0ae3-b5ce-427d-9f75-2d500112234e debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.599Z 517c0ae3-b5ce-427d-9f75-2d500112234e debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 5.png
2023-08-14T16:04:48.599Z 517c0ae3-b5ce-427d-9f75-2d500112234e debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:48.599Z 517c0ae3-b5ce-427d-9f75-2d500112234e info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:48.599Z 517c0ae3-b5ce-427d-9f75-2d500112234e info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:04:48.599Z 517c0ae3-b5ce-427d-9f75-2d500112234e info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:04:48.599Z 517c0ae3-b5ce-427d-9f75-2d500112234e debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.599Z 517c0ae3-b5ce-427d-9f75-2d500112234e debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 5.png
2023-08-14T16:04:48.599Z 517c0ae3-b5ce-427d-9f75-2d500112234e debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.599Z 517c0ae3-b5ce-427d-9f75-2d500112234e debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.599Z 517c0ae3-b5ce-427d-9f75-2d500112234e info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:04:48.599Z 517c0ae3-b5ce-427d-9f75-2d500112234e info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:04:48.599Z 517c0ae3-b5ce-427d-9f75-2d500112234e debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.599Z 517c0ae3-b5ce-427d-9f75-2d500112234e debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 5.png
2023-08-14T16:04:48.599Z 517c0ae3-b5ce-427d-9f75-2d500112234e debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.599Z 517c0ae3-b5ce-427d-9f75-2d500112234e debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.599Z 517c0ae3-b5ce-427d-9f75-2d500112234e debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:04:48.600Z 517c0ae3-b5ce-427d-9f75-2d500112234e debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:04:46Z","permissions":"rwl","containerName":"oleg","blobName":"5.png","signedResource":"c"}
2023-08-14T16:04:48.600Z 517c0ae3-b5ce-427d-9f75-2d500112234e info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:04:48.600Z 517c0ae3-b5ce-427d-9f75-2d500112234e debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:04:46Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:04:48.600Z 517c0ae3-b5ce-427d-9f75-2d500112234e debug: BlobSASAuthenticator:validate() Calculated signature is: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.600Z 517c0ae3-b5ce-427d-9f75-2d500112234e info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:04:48.600Z 517c0ae3-b5ce-427d-9f75-2d500112234e info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:04:48.600Z 517c0ae3-b5ce-427d-9f75-2d500112234e info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:04:48.600Z 517c0ae3-b5ce-427d-9f75-2d500112234e info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:04:48.600Z 517c0ae3-b5ce-427d-9f75-2d500112234e debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:04:48.600Z 517c0ae3-b5ce-427d-9f75-2d500112234e info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:04:48.600Z 517c0ae3-b5ce-427d-9f75-2d500112234e verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:48.600Z 517c0ae3-b5ce-427d-9f75-2d500112234e info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"06b3b41d-4d49-4f88-5599-43fd65d0a970","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2019-07-07"}
2023-08-14T16:04:48.600Z 517c0ae3-b5ce-427d-9f75-2d500112234e verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:48.600Z 517c0ae3-b5ce-427d-9f75-2d500112234e info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"1637282","content-type":"image/png","etag":"\"0x22156B27B83DB40\"","content-md5":"sVy9MlmydwHP4Qk+L9LtgQ==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"06b3b41d-4d49-4f88-5599-43fd65d0a970","x-ms-request-id":"517c0ae3-b5ce-427d-9f75-2d500112234e","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:04:48 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:04:48 GMT"}
2023-08-14T16:04:48.608Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: FSExtentStore:streamPipe() Readable stream triggers close event, 6560203 bytes piped
2023-08-14T16:04:48.608Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: FSExtentStore:streamPipe() Invoke write stream end()
2023-08-14T16:04:48.608Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: FSExtentStore:streamPipe() Readable stream triggers close event, 6560203 bytes piped
2023-08-14T16:04:48.608Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: FSExtentStore:streamPipe() Writable stream triggers finish event, after 6560203 bytes piped. Flush data to fd:44.
2023-08-14T16:04:48.610Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: FSExtentStore:streamPipe() Readable stream triggers close event, 6604193 bytes piped
2023-08-14T16:04:48.610Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: FSExtentStore:streamPipe() Invoke write stream end()
2023-08-14T16:04:48.610Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: FSExtentStore:streamPipe() Readable stream triggers close event, 6604193 bytes piped
2023-08-14T16:04:48.610Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: FSExtentStore:streamPipe() Writable stream triggers finish event, after 6604193 bytes piped. Flush data to fd:47.
2023-08-14T16:04:48.674Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: FSExtentStore:streamPipe() Flush data to fd:44 successfully. Resolve streamPipe().
2023-08-14T16:04:48.675Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: FSExtentStore:appendExtent() Write finish, start updating extent metadata. extent:{"id":"758a4fd5-ebda-4237-8492-9a86d9f5cf76","locationId":"Default","path":"758a4fd5-ebda-4237-8492-9a86d9f5cf76","size":8424292,"lastModifiedInMS":1692029088675}
2023-08-14T16:04:48.675Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: FSExtentStore:appendExtent() Update extent metadata done. Resolve()
2023-08-14T16:04:48.675Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: OperationQueue.operate() Job a0abe434-73aa-4242-aff1-860932ec17f6 completes callback, resolve.
2023-08-14T16:04:48.675Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: OperationQueue.operate() Schedule incoming job b609ec20-f3b6-4a7f-bd1c-0bd288d722dc
2023-08-14T16:04:48.675Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: OperationQueue:execute() Current runningConcurrency:0 maxConcurrency:100 operations.length:1
2023-08-14T16:04:48.675Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 verbose: FSExtentStore:readExtent() Creating read stream. LocationId:Default extentId:758a4fd5-ebda-4237-8492-9a86d9f5cf76 path:test_files/__blobstorage__/758a4fd5-ebda-4237-8492-9a86d9f5cf76 offset:1864089 count:6560203 end:8424291
2023-08-14T16:04:48.675Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: OperationQueue.operate() Job b609ec20-f3b6-4a7f-bd1c-0bd288d722dc completes callback, resolve.
2023-08-14T16:04:48.675Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: OperationQueue:execute() Current runningConcurrency:1 maxConcurrency:50 operations.length:0
2023-08-14T16:04:48.675Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: OperationQueue:execute() return. Operation.length === 0
2023-08-14T16:04:48.675Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: OperationQueue:execute() Current runningConcurrency:0 maxConcurrency:100 operations.length:0
2023-08-14T16:04:48.675Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 debug: OperationQueue:execute() return. Operation.length === 0
2023-08-14T16:04:48.689Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:48.690Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 info: EndMiddleware: End response. TotalTimeInMS=124 StatusCode=201 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","etag":"\"0x1C8DD4ACF975B50\"","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","content-md5":"e3Xw41sUJOMPTmoInCYmYg==","x-ms-client-request-id":"6c24c603-d84f-4032-7790-aed2cfb83ea5","x-ms-request-id":"1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-request-server-encrypted":"true"}
2023-08-14T16:04:48.690Z 1a614b03-c4cd-4fd9-80d5-40bdd60f6dd3 verbose: FSExtentStore:readExtent() Read stream closed. LocationId:Default extentId:758a4fd5-ebda-4237-8492-9a86d9f5cf76 path:test_files/__blobstorage__/758a4fd5-ebda-4237-8492-9a86d9f5cf76 offset:1864089 count:6560203 end:8424291
2023-08-14T16:04:48.690Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/2.png?se=2023-09-13T16%3A04%3A46Z&sig=yB37%2BewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"e62eea74-29b4-485e-584b-d42fc69a8589","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:48.690Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=2.png
2023-08-14T16:04:48.690Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:48.690Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:04:48.690Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 2.png
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 2.png
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 2.png
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:04:46Z","permissions":"rwl","containerName":"oleg","blobName":"2.png","signedResource":"c"}
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:04:46Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b debug: BlobSASAuthenticator:validate() Calculated signature is: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"e62eea74-29b4-485e-584b-d42fc69a8589","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2019-07-07"}
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:48.691Z cc4c383d-a664-4063-9a3f-2ce3248a1f2b info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"6560203","content-type":"image/png","etag":"\"0x1C8DD4ACF975B50\"","content-md5":"e3Xw41sUJOMPTmoInCYmYg==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"e62eea74-29b4-485e-584b-d42fc69a8589","x-ms-request-id":"cc4c383d-a664-4063-9a3f-2ce3248a1f2b","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:04:48 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:04:48 GMT"}
2023-08-14T16:04:48.693Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: FSExtentStore:streamPipe() Flush data to fd:47 successfully. Resolve streamPipe().
2023-08-14T16:04:48.693Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: FSExtentStore:appendExtent() Write finish, start updating extent metadata. extent:{"id":"4267d371-b0d3-49cb-9ead-dd64504762e8","locationId":"Default","path":"4267d371-b0d3-49cb-9ead-dd64504762e8","size":8195290,"lastModifiedInMS":1692029088693}
2023-08-14T16:04:48.693Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: FSExtentStore:appendExtent() Update extent metadata done. Resolve()
2023-08-14T16:04:48.693Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: OperationQueue.operate() Job 8ce257c4-ec65-47c0-85f6-4445105b7bd7 completes callback, resolve.
2023-08-14T16:04:48.693Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: OperationQueue.operate() Schedule incoming job cadbff64-0fd2-4c0f-93da-0bdab50f678e
2023-08-14T16:04:48.693Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: OperationQueue:execute() Current runningConcurrency:0 maxConcurrency:100 operations.length:1
2023-08-14T16:04:48.693Z f591ce73-7b00-4e14-941d-4975bd8df566 verbose: FSExtentStore:readExtent() Creating read stream. LocationId:Default extentId:4267d371-b0d3-49cb-9ead-dd64504762e8 path:test_files/__blobstorage__/4267d371-b0d3-49cb-9ead-dd64504762e8 offset:1591097 count:6604193 end:8195289
2023-08-14T16:04:48.694Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: OperationQueue.operate() Job cadbff64-0fd2-4c0f-93da-0bdab50f678e completes callback, resolve.
2023-08-14T16:04:48.694Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: OperationQueue:execute() Current runningConcurrency:0 maxConcurrency:50 operations.length:0
2023-08-14T16:04:48.694Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: OperationQueue:execute() return. Operation.length === 0
2023-08-14T16:04:48.694Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: OperationQueue:execute() Current runningConcurrency:0 maxConcurrency:100 operations.length:0
2023-08-14T16:04:48.694Z f591ce73-7b00-4e14-941d-4975bd8df566 debug: OperationQueue:execute() return. Operation.length === 0
2023-08-14T16:04:48.716Z f591ce73-7b00-4e14-941d-4975bd8df566 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:48.717Z f591ce73-7b00-4e14-941d-4975bd8df566 info: EndMiddleware: End response. TotalTimeInMS=144 StatusCode=201 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","etag":"\"0x23DC2937FEB4AC0\"","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","content-md5":"pQDre1iacfD8peYXxrWIvw==","x-ms-client-request-id":"f97b4fac-75a6-4f5a-71e7-dae4adefee09","x-ms-request-id":"f591ce73-7b00-4e14-941d-4975bd8df566","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-request-server-encrypted":"true"}
2023-08-14T16:04:48.717Z f591ce73-7b00-4e14-941d-4975bd8df566 verbose: FSExtentStore:readExtent() Read stream closed. LocationId:Default extentId:4267d371-b0d3-49cb-9ead-dd64504762e8 path:test_files/__blobstorage__/4267d371-b0d3-49cb-9ead-dd64504762e8 offset:1591097 count:6604193 end:8195289
2023-08-14T16:04:48.718Z e76fbd26-7f78-4688-a669-0378b3e452a6 info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/1.png?se=2023-09-13T16%3A04%3A46Z&sig=yB37%2BewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"5813c6ae-0f90-4f8d-73b9-214aae99f881","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:48.718Z e76fbd26-7f78-4688-a669-0378b3e452a6 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=1.png
2023-08-14T16:04:48.718Z e76fbd26-7f78-4688-a669-0378b3e452a6 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:48.718Z e76fbd26-7f78-4688-a669-0378b3e452a6 info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:04:48.718Z e76fbd26-7f78-4688-a669-0378b3e452a6 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:48.718Z e76fbd26-7f78-4688-a669-0378b3e452a6 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:48.718Z e76fbd26-7f78-4688-a669-0378b3e452a6 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.718Z e76fbd26-7f78-4688-a669-0378b3e452a6 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 1.png
2023-08-14T16:04:48.718Z e76fbd26-7f78-4688-a669-0378b3e452a6 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:48.718Z e76fbd26-7f78-4688-a669-0378b3e452a6 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:48.718Z e76fbd26-7f78-4688-a669-0378b3e452a6 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:04:48.719Z e76fbd26-7f78-4688-a669-0378b3e452a6 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:04:48.719Z e76fbd26-7f78-4688-a669-0378b3e452a6 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.719Z e76fbd26-7f78-4688-a669-0378b3e452a6 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 1.png
2023-08-14T16:04:48.719Z e76fbd26-7f78-4688-a669-0378b3e452a6 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.719Z e76fbd26-7f78-4688-a669-0378b3e452a6 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.719Z e76fbd26-7f78-4688-a669-0378b3e452a6 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:04:48.719Z e76fbd26-7f78-4688-a669-0378b3e452a6 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:04:48.719Z e76fbd26-7f78-4688-a669-0378b3e452a6 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:04:48.719Z e76fbd26-7f78-4688-a669-0378b3e452a6 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 1.png
2023-08-14T16:04:48.719Z e76fbd26-7f78-4688-a669-0378b3e452a6 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:04:48.719Z e76fbd26-7f78-4688-a669-0378b3e452a6 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.719Z e76fbd26-7f78-4688-a669-0378b3e452a6 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:04:48.719Z e76fbd26-7f78-4688-a669-0378b3e452a6 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:04:46Z","permissions":"rwl","containerName":"oleg","blobName":"1.png","signedResource":"c"}
2023-08-14T16:04:48.719Z e76fbd26-7f78-4688-a669-0378b3e452a6 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:04:48.719Z e76fbd26-7f78-4688-a669-0378b3e452a6 debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:04:46Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:04:48.719Z e76fbd26-7f78-4688-a669-0378b3e452a6 debug: BlobSASAuthenticator:validate() Calculated signature is: yB37+ewYwKcf92ILp0zzvcqyTDBeQeVPQ29OnYjSezM=
2023-08-14T16:04:48.719Z e76fbd26-7f78-4688-a669-0378b3e452a6 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:04:48.719Z e76fbd26-7f78-4688-a669-0378b3e452a6 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:04:48.719Z e76fbd26-7f78-4688-a669-0378b3e452a6 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:04:48.719Z e76fbd26-7f78-4688-a669-0378b3e452a6 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:04:48.719Z e76fbd26-7f78-4688-a669-0378b3e452a6 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:04:48.719Z e76fbd26-7f78-4688-a669-0378b3e452a6 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:04:48.719Z e76fbd26-7f78-4688-a669-0378b3e452a6 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:48.719Z e76fbd26-7f78-4688-a669-0378b3e452a6 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"5813c6ae-0f90-4f8d-73b9-214aae99f881","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2019-07-07"}
2023-08-14T16:04:48.719Z e76fbd26-7f78-4688-a669-0378b3e452a6 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:48.719Z e76fbd26-7f78-4688-a669-0378b3e452a6 info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"6604193","content-type":"image/png","etag":"\"0x23DC2937FEB4AC0\"","content-md5":"pQDre1iacfD8peYXxrWIvw==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"5813c6ae-0f90-4f8d-73b9-214aae99f881","x-ms-request-id":"e76fbd26-7f78-4688-a669-0378b3e452a6","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:04:48 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:04:48 GMT"}
2023-08-14T16:04:51.641Z de799c57-366b-4f67-af81-787fe8c2e99b info: BlobStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1/oleg?comp=list&maxresults=5000&restype=container&include=metadata&delimiter=%2F RequestHeaders:{"host":"127.0.0.1:10000","connection":"keep-alive","x-ms-version":"2019-07-07","accept":"application/xml","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-storageblob/12.12.0 (NODE-VERSION v18.15.0; Linux 6.2.0-26-generic)","x-ms-client-request-id":"5c61dc78-5d46-4da6-9856-4abeb21baa8a","x-ms-date":"Mon, 14 Aug 2023 16:04:51 GMT","authorization":"SharedKey devstoreaccount1:OfxefqRRb5R2oftzuQE8aUilvCWlbTDxzwbOodMEbxQ=","accept-language":"*","sec-fetch-mode":"cors","accept-encoding":"gzip, deflate"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:51.642Z de799c57-366b-4f67-af81-787fe8c2e99b info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=
2023-08-14T16:04:51.642Z de799c57-366b-4f67-af81-787fe8c2e99b verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:51.643Z de799c57-366b-4f67-af81-787fe8c2e99b info: DispatchMiddleware: Operation=Container_ListBlobHierarchySegment
2023-08-14T16:04:51.643Z de799c57-366b-4f67-af81-787fe8c2e99b verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:51.643Z de799c57-366b-4f67-af81-787fe8c2e99b info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:51.643Z de799c57-366b-4f67-af81-787fe8c2e99b debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:51.643Z de799c57-366b-4f67-af81-787fe8c2e99b debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 
2023-08-14T16:04:51.643Z de799c57-366b-4f67-af81-787fe8c2e99b debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:04:51.643Z de799c57-366b-4f67-af81-787fe8c2e99b info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:51.643Z de799c57-366b-4f67-af81-787fe8c2e99b info: BlobSharedKeyAuthenticator:validate() [STRING TO SIGN]:"GET\n\n\n\n\n\n\n\n\n\n\n\nx-ms-client-request-id:5c61dc78-5d46-4da6-9856-4abeb21baa8a\nx-ms-date:Mon, 14 Aug 2023 16:04:51 GMT\nx-ms-version:2019-07-07\n/devstoreaccount1/devstoreaccount1/oleg\ncomp:list\ndelimiter:/\ninclude:metadata\nmaxresults:5000\nrestype:container"
2023-08-14T16:04:51.643Z de799c57-366b-4f67-af81-787fe8c2e99b info: BlobSharedKeyAuthenticator:validate() Calculated authentication header based on key1: SharedKey devstoreaccount1:OfxefqRRb5R2oftzuQE8aUilvCWlbTDxzwbOodMEbxQ=
2023-08-14T16:04:51.643Z de799c57-366b-4f67-af81-787fe8c2e99b info: BlobSharedKeyAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:51.643Z de799c57-366b-4f67-af81-787fe8c2e99b verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:51.644Z de799c57-366b-4f67-af81-787fe8c2e99b info: HandlerMiddleware: DeserializedParameters={"options":{"maxresults":5000,"include":["metadata"],"requestId":"5c61dc78-5d46-4da6-9856-4abeb21baa8a"},"delimiter":"/","restype":"container","comp":"list","version":"2019-07-07"}
2023-08-14T16:04:51.646Z de799c57-366b-4f67-af81-787fe8c2e99b verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:51.652Z de799c57-366b-4f67-af81-787fe8c2e99b debug: Serializer: Raw response body string is <?xml version="1.0" encoding="UTF-8" standalone="yes"?><EnumerationResults ServiceEndpoint="http://127.0.0.1:10000/devstoreaccount1" ContainerName="oleg"><Prefix/><Marker/><MaxResults>5000</MaxResults><Delimiter>/</Delimiter><Blobs><Blob><Name>1.png</Name><Properties><Creation-Time>Mon, 14 Aug 2023 16:04:48 GMT</Creation-Time><Last-Modified>Mon, 14 Aug 2023 16:04:48 GMT</Last-Modified><Etag>0x23DC2937FEB4AC0</Etag><Content-Length>6604193</Content-Length><Content-Type>image/png</Content-Type><Content-Encoding/><Content-Language/><Content-MD5>pQDre1iacfD8peYXxrWIvw==</Content-MD5><Content-Disposition/><Cache-Control/><BlobType>BlockBlob</BlobType><LeaseStatus>unlocked</LeaseStatus><LeaseState>available</LeaseState><ServerEncrypted>true</ServerEncrypted><AccessTier>Hot</AccessTier><AccessTierInferred>true</AccessTierInferred><AccessTierChangeTime>Mon, 14 Aug 2023 16:04:48 GMT</AccessTierChangeTime></Properties></Blob><Blob><Name>10.png</Name><Properties><Creation-Time>Mon, 14 Aug 2023 16:04:48 GMT</Creation-Time><Last-Modified>Mon, 14 Aug 2023 16:04:48 GMT</Last-Modified><Etag>0x1D2864A755ECF90</Etag><Content-Length>1396766</Content-Length><Content-Type>image/png</Content-Type><Content-Encoding/><Content-Language/><Content-MD5>DBkcRvIVD45KGcGPXBYWUA==</Content-MD5><Content-Disposition/><Cache-Control/><BlobType>BlockBlob</BlobType><LeaseStatus>unlocked</LeaseStatus><LeaseState>available</LeaseState><ServerEncrypted>true</ServerEncrypted><AccessTier>Hot</AccessTier><AccessTierInferred>true</AccessTierInferred><AccessTierChangeTime>Mon, 14 Aug 2023 16:04:48 GMT</AccessTierChangeTime></Properties></Blob><Blob><Name>2.png</Name><Properties><Creation-Time>Mon, 14 Aug 2023 16:04:48 GMT</Creation-Time><Last-Modified>Mon, 14 Aug 2023 16:04:48 GMT</Last-Modified><Etag>0x1C8DD4ACF975B50</Etag><Content-Length>6560203</Content-Length><Content-Type>image/png</Content-Type><Content-Encoding/><Content-Language/><Content-MD5>e3Xw41sUJOMPTmoInCYmYg==</Content-MD5><Content-Disposition/><Cache-Control/><BlobType>BlockBlob</BlobType><LeaseStatus>unlocked</LeaseStatus><LeaseState>available</LeaseState><ServerEncrypted>true</ServerEncrypted><AccessTier>Hot</AccessTier><AccessTierInferred>true</AccessTierInferred><AccessTierChangeTime>Mon, 14 Aug 2023 16:04:48 GMT</AccessTierChangeTime></Properties></Blob><Blob><Name>3.jpg</Name><Properties><Creation-Time>Mon, 14 Aug 2023 16:04:48 GMT</Creation-Time><Last-Modified>Mon, 14 Aug 2023 16:04:48 GMT</Last-Modified><Etag>0x1D818D7E0115960</Etag><Content-Length>176116</Content-Length><Content-Type>image/jpeg</Content-Type><Content-Encoding/><Content-Language/><Content-MD5>JM5rlVNQHKMZIwy51r+1zA==</Content-MD5><Content-Disposition/><Cache-Control/><BlobType>BlockBlob</BlobType><LeaseStatus>unlocked</LeaseStatus><LeaseState>available</LeaseState><ServerEncrypted>true</ServerEncrypted><AccessTier>Hot</AccessTier><AccessTierInferred>true</AccessTierInferred><AccessTierChangeTime>Mon, 14 Aug 2023 16:04:48 GMT</AccessTierChangeTime></Properties></Blob><Blob><Name>4.jpg</Name><Properties><Creation-Time>Mon, 14 Aug 2023 16:04:48 GMT</Creation-Time><Last-Modified>Mon, 14 Aug 2023 16:04:48 GMT</Last-Modified><Etag>0x20021DC4FE14AE0</Etag><Content-Length>467323</Content-Length><Content-Type>image/jpeg</Content-Type><Content-Encoding/><Content-Language/><Content-MD5>nbTZU6yagqqG6fSdJmvTtQ==</Content-MD5><Content-Disposition/><Cache-Control/><BlobType>BlockBlob</BlobType><LeaseStatus>unlocked</LeaseStatus><LeaseState>available</LeaseState><ServerEncrypted>true</ServerEncrypted><AccessTier>Hot</AccessTier><AccessTierInferred>true</AccessTierInferred><AccessTierChangeTime>Mon, 14 Aug 2023 16:04:48 GMT</AccessTierChangeTime></Properties></Blob><Blob><Name>5.png</Name><Properties><Creation-Time>Mon, 14 Aug 2023 16:04:48 GMT</Creation-Time><Last-Modified>Mon, 14 Aug 2023 16:04:48 GMT</Last-Modified><Etag>0x22156B27B83DB40</Etag><Content-Length>1637282</Content-Length><Content-Type>image/png</Content-Type><Content-Encoding/><Content-Language/><Content-MD5>sVy9MlmydwHP4Qk+L9LtgQ==</Content-MD5><Content-Disposition/><Cache-Control/><BlobType>BlockBlob</BlobType><LeaseStatus>unlocked</LeaseStatus><LeaseState>available</LeaseState><ServerEncrypted>true</ServerEncrypted><AccessTier>Hot</AccessTier><AccessTierInferred>true</AccessTierInferred><AccessTierChangeTime>Mon, 14 Aug 2023 16:04:48 GMT</AccessTierChangeTime></Properties></Blob><Blob><Name>6.png</Name><Properties><Creation-Time>Mon, 14 Aug 2023 16:04:48 GMT</Creation-Time><Last-Modified>Mon, 14 Aug 2023 16:04:48 GMT</Last-Modified><Etag>0x1B1E843FFEA5C80</Etag><Content-Length>1311150</Content-Length><Content-Type>image/png</Content-Type><Content-Encoding/><Content-Language/><Content-MD5>PTO201002qAVYqOzyemSoQ==</Content-MD5><Content-Disposition/><Cache-Control/><BlobType>BlockBlob</BlobType><LeaseStatus>unlocked</LeaseStatus><LeaseState>available</LeaseState><ServerEncrypted>true</ServerEncrypted><AccessTier>Hot</AccessTier><AccessTierInferred>true</AccessTierInferred><AccessTierChangeTime>Mon, 14 Aug 2023 16:04:48 GMT</AccessTierChangeTime></Properties></Blob><Blob><Name>7.png</Name><Properties><Creation-Time>Mon, 14 Aug 2023 16:04:48 GMT</Creation-Time><Last-Modified>Mon, 14 Aug 2023 16:04:48 GMT</Last-Modified><Etag>0x1FCDCB420D0E650</Etag><Content-Length>1413252</Content-Length><Content-Type>image/png</Content-Type><Content-Encoding/><Content-Language/><Content-MD5>a3MdCt7Cyh3g1MZQhClGKA==</Content-MD5><Content-Disposition/><Cache-Control/><BlobType>BlockBlob</BlobType><LeaseStatus>unlocked</LeaseStatus><LeaseState>available</LeaseState><ServerEncrypted>true</ServerEncrypted><AccessTier>Hot</AccessTier><AccessTierInferred>true</AccessTierInferred><AccessTierChangeTime>Mon, 14 Aug 2023 16:04:48 GMT</AccessTierChangeTime></Properties></Blob><Blob><Name>8.png</Name><Properties><Creation-Time>Mon, 14 Aug 2023 16:04:48 GMT</Creation-Time><Last-Modified>Mon, 14 Aug 2023 16:04:48 GMT</Last-Modified><Etag>0x1F4C9F8EBF76160</Etag><Content-Length>1888630</Content-Length><Content-Type>image/png</Content-Type><Content-Encoding/><Content-Language/><Content-MD5>AF2DTS+hjg/7a5bF2nY/oQ==</Content-MD5><Content-Disposition/><Cache-Control/><BlobType>BlockBlob</BlobType><LeaseStatus>unlocked</LeaseStatus><LeaseState>available</LeaseState><ServerEncrypted>true</ServerEncrypted><AccessTier>Hot</AccessTier><AccessTierInferred>true</AccessTierInferred><AccessTierChangeTime>Mon, 14 Aug 2023 16:04:48 GMT</AccessTierChangeTime></Properties></Blob><Blob><Name>9.png</Name><Properties><Creation-Time>Mon, 14 Aug 2023 16:04:48 GMT</Creation-Time><Last-Modified>Mon, 14 Aug 2023 16:04:48 GMT</Last-Modified><Etag>0x1BEBAB89E9B70D0</Etag><Content-Length>1591097</Content-Length><Content-Type>image/png</Content-Type><Content-Encoding/><Content-Language/><Content-MD5>o4qsh2qWccT1fdXC2fI9jg==</Content-MD5><Content-Disposition/><Cache-Control/><BlobType>BlockBlob</BlobType><LeaseStatus>unlocked</LeaseStatus><LeaseState>available</LeaseState><ServerEncrypted>true</ServerEncrypted><AccessTier>Hot</AccessTier><AccessTierInferred>true</AccessTierInferred><AccessTierChangeTime>Mon, 14 Aug 2023 16:04:48 GMT</AccessTierChangeTime></Properties></Blob></Blobs><NextMarker/></EnumerationResults>
2023-08-14T16:04:51.653Z de799c57-366b-4f67-af81-787fe8c2e99b info: Serializer: Start returning stream body.
2023-08-14T16:04:51.653Z de799c57-366b-4f67-af81-787fe8c2e99b info: EndMiddleware: End response. TotalTimeInMS=12 StatusCode=200 StatusMessage=OK Headers={"server":"Azurite-Blob/3.25.1","content-type":"application/xml","x-ms-client-request-id":"5c61dc78-5d46-4da6-9856-4abeb21baa8a","x-ms-request-id":"de799c57-366b-4f67-af81-787fe8c2e99b","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:04:51 GMT"}
2023-08-14T16:04:58.667Z 86da2083-f305-4b20-88b3-1de91f51e18d info: BlobStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1?restype=service&comp=properties RequestHeaders:{"host":"127.0.0.1:10000","connection":"keep-alive","x-ms-version":"2019-07-07","accept":"application/xml","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-storageblob/12.12.0 (NODE-VERSION v18.15.0; Linux 6.2.0-26-generic)","x-ms-client-request-id":"380431e5-d16a-45b0-8162-37d5872ab834","x-ms-date":"Mon, 14 Aug 2023 16:04:58 GMT","authorization":"SharedKey devstoreaccount1:cUz7mlD18LNyGgLVCqTUumDwD5U18k//C3fM2E2L5Bg=","accept-language":"*","sec-fetch-mode":"cors","accept-encoding":"gzip, deflate"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:04:58.667Z 86da2083-f305-4b20-88b3-1de91f51e18d info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=undefined Blob=
2023-08-14T16:04:58.667Z 86da2083-f305-4b20-88b3-1de91f51e18d verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:04:58.667Z 86da2083-f305-4b20-88b3-1de91f51e18d info: DispatchMiddleware: Operation=Service_GetProperties
2023-08-14T16:04:58.667Z 86da2083-f305-4b20-88b3-1de91f51e18d verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:04:58.667Z 86da2083-f305-4b20-88b3-1de91f51e18d info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:04:58.667Z 86da2083-f305-4b20-88b3-1de91f51e18d debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:04:58.667Z 86da2083-f305-4b20-88b3-1de91f51e18d debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: undefined, blob: 
2023-08-14T16:04:58.667Z 86da2083-f305-4b20-88b3-1de91f51e18d info: PublicAccessAuthenticator:validate() Skip public access authentication. Container name is undefined.
2023-08-14T16:04:58.667Z 86da2083-f305-4b20-88b3-1de91f51e18d info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:04:58.667Z 86da2083-f305-4b20-88b3-1de91f51e18d info: BlobSharedKeyAuthenticator:validate() [STRING TO SIGN]:"GET\n\n\n\n\n\n\n\n\n\n\n\nx-ms-client-request-id:380431e5-d16a-45b0-8162-37d5872ab834\nx-ms-date:Mon, 14 Aug 2023 16:04:58 GMT\nx-ms-version:2019-07-07\n/devstoreaccount1/devstoreaccount1\ncomp:properties\nrestype:service"
2023-08-14T16:04:58.668Z 86da2083-f305-4b20-88b3-1de91f51e18d info: BlobSharedKeyAuthenticator:validate() Calculated authentication header based on key1: SharedKey devstoreaccount1:cUz7mlD18LNyGgLVCqTUumDwD5U18k//C3fM2E2L5Bg=
2023-08-14T16:04:58.668Z 86da2083-f305-4b20-88b3-1de91f51e18d info: BlobSharedKeyAuthenticator:validate() Signature 1 matched.
2023-08-14T16:04:58.668Z 86da2083-f305-4b20-88b3-1de91f51e18d verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:04:58.668Z 86da2083-f305-4b20-88b3-1de91f51e18d info: HandlerMiddleware: DeserializedParameters={"options":{"requestId":"380431e5-d16a-45b0-8162-37d5872ab834"},"restype":"service","comp":"properties","version":"2019-07-07"}
2023-08-14T16:04:58.668Z 86da2083-f305-4b20-88b3-1de91f51e18d verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:04:58.669Z 86da2083-f305-4b20-88b3-1de91f51e18d debug: Serializer: Raw response body string is <?xml version="1.0" encoding="UTF-8" standalone="yes"?><StorageServiceProperties><Logging><Version>1.0</Version><Delete>true</Delete><Read>true</Read><Write>true</Write><RetentionPolicy><Enabled>false</Enabled></RetentionPolicy></Logging><HourMetrics><Version>1.0</Version><Enabled>false</Enabled><RetentionPolicy><Enabled>false</Enabled></RetentionPolicy></HourMetrics><MinuteMetrics><Version>1.0</Version><Enabled>false</Enabled><RetentionPolicy><Enabled>false</Enabled></RetentionPolicy></MinuteMetrics><Cors/><DefaultServiceVersion>2023-01-03</DefaultServiceVersion><StaticWebsite><Enabled>false</Enabled></StaticWebsite></StorageServiceProperties>
2023-08-14T16:04:58.669Z 86da2083-f305-4b20-88b3-1de91f51e18d info: Serializer: Start returning stream body.
2023-08-14T16:04:58.669Z 86da2083-f305-4b20-88b3-1de91f51e18d info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=200 StatusMessage=OK Headers={"server":"Azurite-Blob/3.25.1","x-ms-client-request-id":"380431e5-d16a-45b0-8162-37d5872ab834","x-ms-request-id":"86da2083-f305-4b20-88b3-1de91f51e18d","x-ms-version":"2023-01-03","content-type":"application/xml"}
2023-08-14T16:05:01.867Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/1.png?se=2023-09-13T16%3A05%3A00Z&sig=2pvgLKUkjzeLaI2A%2F6BlJfp0sYZgrFh5TvKnjDcdl80%3D&sp=rdl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"dc89f043-379c-445f-6d6d-8fed9550c797","x-ms-version":"2020-10-02"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:01.867Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=1.png
2023-08-14T16:05:01.867Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:01.868Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:05:01.868Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:01.868Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:01.868Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.868Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 1.png
2023-08-14T16:05:01.868Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:01.868Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:01.868Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:01.868Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:01.868Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.868Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 1.png
2023-08-14T16:05:01.868Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.868Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.868Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:01.868Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:01.868Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.868Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 1.png
2023-08-14T16:05:01.868Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.868Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.868Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:01.868Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:00Z","permissions":"rdl","containerName":"oleg","blobName":"1.png","signedResource":"c"}
2023-08-14T16:05:01.868Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:01.869Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b debug: BlobSASAuthenticator:validate() String to sign is: "rdl\n\n2023-09-13T16:05:00Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:01.869Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b debug: BlobSASAuthenticator:validate() Calculated signature is: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.869Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:01.869Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:01.869Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:01.869Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:01.869Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:05:01.869Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:01.869Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:01.869Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"dc89f043-379c-445f-6d6d-8fed9550c797","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2020-10-02"}
2023-08-14T16:05:01.869Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:01.869Z 573d7b96-c1ac-4eff-aa52-a98a9762c72b info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"6604193","content-type":"image/png","etag":"\"0x23DC2937FEB4AC0\"","content-md5":"pQDre1iacfD8peYXxrWIvw==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"dc89f043-379c-445f-6d6d-8fed9550c797","x-ms-request-id":"573d7b96-c1ac-4eff-aa52-a98a9762c72b","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:01 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:04:48 GMT"}
2023-08-14T16:05:01.870Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/1.png?se=2023-09-13T16%3A05%3A00Z&sig=2pvgLKUkjzeLaI2A%2F6BlJfp0sYZgrFh5TvKnjDcdl80%3D&sp=rdl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"576ead7f-fa50-44a5-5f34-f6d136207235","x-ms-version":"2020-10-02"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:01.870Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=1.png
2023-08-14T16:05:01.870Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:01.871Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:05:01.871Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:01.871Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:01.871Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.871Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 1.png
2023-08-14T16:05:01.871Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:01.871Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:01.871Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:01.871Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:01.871Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.871Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 1.png
2023-08-14T16:05:01.871Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.871Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.871Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:01.871Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:01.871Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.871Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 1.png
2023-08-14T16:05:01.871Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.871Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.871Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:01.871Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:00Z","permissions":"rdl","containerName":"oleg","blobName":"1.png","signedResource":"c"}
2023-08-14T16:05:01.871Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:01.871Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 debug: BlobSASAuthenticator:validate() String to sign is: "rdl\n\n2023-09-13T16:05:00Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:01.871Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 debug: BlobSASAuthenticator:validate() Calculated signature is: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.871Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:01.871Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:01.871Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:01.871Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:01.872Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:05:01.872Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:01.872Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:01.872Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"576ead7f-fa50-44a5-5f34-f6d136207235","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2020-10-02"}
2023-08-14T16:05:01.872Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:01.872Z 06a08d8e-5bb9-41cd-b6f2-12c24e2965a7 info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"6604193","content-type":"image/png","etag":"\"0x23DC2937FEB4AC0\"","content-md5":"pQDre1iacfD8peYXxrWIvw==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"576ead7f-fa50-44a5-5f34-f6d136207235","x-ms-request-id":"06a08d8e-5bb9-41cd-b6f2-12c24e2965a7","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:01 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:04:48 GMT"}
2023-08-14T16:05:01.873Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/10.png?se=2023-09-13T16%3A05%3A00Z&sig=2pvgLKUkjzeLaI2A%2F6BlJfp0sYZgrFh5TvKnjDcdl80%3D&sp=rdl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"d787799e-7f7a-41a9-55e3-fa9986ea1f87","x-ms-version":"2020-10-02"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:01.873Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=10.png
2023-08-14T16:05:01.873Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:01.873Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:05:01.873Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:01.874Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:01.874Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.874Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 10.png
2023-08-14T16:05:01.874Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:01.874Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:01.874Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:01.874Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:01.874Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.874Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 10.png
2023-08-14T16:05:01.874Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.874Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.874Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:01.874Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:01.874Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.874Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 10.png
2023-08-14T16:05:01.874Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.874Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.874Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:01.874Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:00Z","permissions":"rdl","containerName":"oleg","blobName":"10.png","signedResource":"c"}
2023-08-14T16:05:01.875Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:01.875Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 debug: BlobSASAuthenticator:validate() String to sign is: "rdl\n\n2023-09-13T16:05:00Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:01.875Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 debug: BlobSASAuthenticator:validate() Calculated signature is: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.875Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:01.875Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:01.875Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:01.875Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:01.875Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:05:01.875Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:01.875Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:01.875Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"d787799e-7f7a-41a9-55e3-fa9986ea1f87","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2020-10-02"}
2023-08-14T16:05:01.875Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:01.875Z 0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9 info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"1396766","content-type":"image/png","etag":"\"0x1D2864A755ECF90\"","content-md5":"DBkcRvIVD45KGcGPXBYWUA==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"d787799e-7f7a-41a9-55e3-fa9986ea1f87","x-ms-request-id":"0d6178d3-9b7a-49ad-9e93-55c4dcfda8f9","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:01 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:04:48 GMT"}
2023-08-14T16:05:01.876Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/10.png?se=2023-09-13T16%3A05%3A00Z&sig=2pvgLKUkjzeLaI2A%2F6BlJfp0sYZgrFh5TvKnjDcdl80%3D&sp=rdl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"cbc359da-69db-4358-5049-33936835df0c","x-ms-version":"2020-10-02"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:01.876Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=10.png
2023-08-14T16:05:01.876Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:01.876Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:05:01.877Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:01.877Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:01.877Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.877Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 10.png
2023-08-14T16:05:01.877Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:01.877Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:01.877Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:01.877Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:01.877Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.877Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 10.png
2023-08-14T16:05:01.877Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.877Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.877Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:01.877Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:01.877Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.877Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 10.png
2023-08-14T16:05:01.877Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.877Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.877Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:01.877Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:00Z","permissions":"rdl","containerName":"oleg","blobName":"10.png","signedResource":"c"}
2023-08-14T16:05:01.877Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:01.877Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a debug: BlobSASAuthenticator:validate() String to sign is: "rdl\n\n2023-09-13T16:05:00Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:01.877Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a debug: BlobSASAuthenticator:validate() Calculated signature is: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.877Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:01.877Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:01.877Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:01.877Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:01.877Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:05:01.877Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:01.877Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:01.878Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"cbc359da-69db-4358-5049-33936835df0c","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2020-10-02"}
2023-08-14T16:05:01.878Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:01.878Z 6c356817-a98b-462a-9e9d-e08ed6c70c4a info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"1396766","content-type":"image/png","etag":"\"0x1D2864A755ECF90\"","content-md5":"DBkcRvIVD45KGcGPXBYWUA==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"cbc359da-69db-4358-5049-33936835df0c","x-ms-request-id":"6c356817-a98b-462a-9e9d-e08ed6c70c4a","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:01 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:04:48 GMT"}
2023-08-14T16:05:01.879Z 5d884cab-e5dd-4010-976b-96bf559612cc info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/2.png?se=2023-09-13T16%3A05%3A00Z&sig=2pvgLKUkjzeLaI2A%2F6BlJfp0sYZgrFh5TvKnjDcdl80%3D&sp=rdl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"dafd7c28-74a2-4bb2-5bfe-8d3857d72714","x-ms-version":"2020-10-02"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:01.879Z 5d884cab-e5dd-4010-976b-96bf559612cc info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=2.png
2023-08-14T16:05:01.879Z 5d884cab-e5dd-4010-976b-96bf559612cc verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:01.879Z 5d884cab-e5dd-4010-976b-96bf559612cc info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:05:01.879Z 5d884cab-e5dd-4010-976b-96bf559612cc verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:01.879Z 5d884cab-e5dd-4010-976b-96bf559612cc info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:01.879Z 5d884cab-e5dd-4010-976b-96bf559612cc debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.879Z 5d884cab-e5dd-4010-976b-96bf559612cc debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 2.png
2023-08-14T16:05:01.880Z 5d884cab-e5dd-4010-976b-96bf559612cc debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:01.880Z 5d884cab-e5dd-4010-976b-96bf559612cc info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:01.880Z 5d884cab-e5dd-4010-976b-96bf559612cc info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:01.880Z 5d884cab-e5dd-4010-976b-96bf559612cc info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:01.880Z 5d884cab-e5dd-4010-976b-96bf559612cc debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.880Z 5d884cab-e5dd-4010-976b-96bf559612cc debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 2.png
2023-08-14T16:05:01.880Z 5d884cab-e5dd-4010-976b-96bf559612cc debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.880Z 5d884cab-e5dd-4010-976b-96bf559612cc debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.880Z 5d884cab-e5dd-4010-976b-96bf559612cc info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:01.880Z 5d884cab-e5dd-4010-976b-96bf559612cc info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:01.880Z 5d884cab-e5dd-4010-976b-96bf559612cc debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.880Z 5d884cab-e5dd-4010-976b-96bf559612cc debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 2.png
2023-08-14T16:05:01.880Z 5d884cab-e5dd-4010-976b-96bf559612cc debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.880Z 5d884cab-e5dd-4010-976b-96bf559612cc debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.880Z 5d884cab-e5dd-4010-976b-96bf559612cc debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:01.880Z 5d884cab-e5dd-4010-976b-96bf559612cc debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:00Z","permissions":"rdl","containerName":"oleg","blobName":"2.png","signedResource":"c"}
2023-08-14T16:05:01.880Z 5d884cab-e5dd-4010-976b-96bf559612cc info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:01.880Z 5d884cab-e5dd-4010-976b-96bf559612cc debug: BlobSASAuthenticator:validate() String to sign is: "rdl\n\n2023-09-13T16:05:00Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:01.880Z 5d884cab-e5dd-4010-976b-96bf559612cc debug: BlobSASAuthenticator:validate() Calculated signature is: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.880Z 5d884cab-e5dd-4010-976b-96bf559612cc info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:01.880Z 5d884cab-e5dd-4010-976b-96bf559612cc info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:01.881Z 5d884cab-e5dd-4010-976b-96bf559612cc info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:01.881Z 5d884cab-e5dd-4010-976b-96bf559612cc info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:01.881Z 5d884cab-e5dd-4010-976b-96bf559612cc debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:05:01.881Z 5d884cab-e5dd-4010-976b-96bf559612cc info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:01.881Z 5d884cab-e5dd-4010-976b-96bf559612cc verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:01.881Z 5d884cab-e5dd-4010-976b-96bf559612cc info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"dafd7c28-74a2-4bb2-5bfe-8d3857d72714","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2020-10-02"}
2023-08-14T16:05:01.881Z 5d884cab-e5dd-4010-976b-96bf559612cc verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:01.881Z 5d884cab-e5dd-4010-976b-96bf559612cc info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"6560203","content-type":"image/png","etag":"\"0x1C8DD4ACF975B50\"","content-md5":"e3Xw41sUJOMPTmoInCYmYg==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"dafd7c28-74a2-4bb2-5bfe-8d3857d72714","x-ms-request-id":"5d884cab-e5dd-4010-976b-96bf559612cc","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:01 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:04:48 GMT"}
2023-08-14T16:05:01.882Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/2.png?se=2023-09-13T16%3A05%3A00Z&sig=2pvgLKUkjzeLaI2A%2F6BlJfp0sYZgrFh5TvKnjDcdl80%3D&sp=rdl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"35a9cb58-0af4-4648-7804-b671dfb61776","x-ms-version":"2020-10-02"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:01.882Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=2.png
2023-08-14T16:05:01.882Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:01.882Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:05:01.882Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:01.882Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:01.883Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.883Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 2.png
2023-08-14T16:05:01.883Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:01.883Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:01.883Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:01.883Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:01.883Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.883Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 2.png
2023-08-14T16:05:01.883Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.883Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.883Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:01.883Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:01.883Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.883Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 2.png
2023-08-14T16:05:01.883Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.883Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.883Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:01.883Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:00Z","permissions":"rdl","containerName":"oleg","blobName":"2.png","signedResource":"c"}
2023-08-14T16:05:01.883Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:01.883Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 debug: BlobSASAuthenticator:validate() String to sign is: "rdl\n\n2023-09-13T16:05:00Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:01.883Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 debug: BlobSASAuthenticator:validate() Calculated signature is: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.883Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:01.883Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:01.883Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:01.883Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:01.883Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:05:01.883Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:01.883Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:01.883Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"35a9cb58-0af4-4648-7804-b671dfb61776","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2020-10-02"}
2023-08-14T16:05:01.883Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:01.884Z 4b0b9ee6-8f14-4132-848e-770b2a13efc6 info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"6560203","content-type":"image/png","etag":"\"0x1C8DD4ACF975B50\"","content-md5":"e3Xw41sUJOMPTmoInCYmYg==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"35a9cb58-0af4-4648-7804-b671dfb61776","x-ms-request-id":"4b0b9ee6-8f14-4132-848e-770b2a13efc6","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:01 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:04:48 GMT"}
2023-08-14T16:05:01.885Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/3.jpg?se=2023-09-13T16%3A05%3A00Z&sig=2pvgLKUkjzeLaI2A%2F6BlJfp0sYZgrFh5TvKnjDcdl80%3D&sp=rdl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"3b348b08-2efa-4e44-7009-e7de435720b8","x-ms-version":"2020-10-02"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:01.885Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=3.jpg
2023-08-14T16:05:01.885Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:01.885Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:05:01.885Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:01.885Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:01.885Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.885Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 3.jpg
2023-08-14T16:05:01.885Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:01.885Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:01.885Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:01.885Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:01.885Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.886Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 3.jpg
2023-08-14T16:05:01.886Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.886Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.886Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:01.886Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:01.886Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.886Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 3.jpg
2023-08-14T16:05:01.886Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.886Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.886Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:01.886Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:00Z","permissions":"rdl","containerName":"oleg","blobName":"3.jpg","signedResource":"c"}
2023-08-14T16:05:01.886Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:01.886Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 debug: BlobSASAuthenticator:validate() String to sign is: "rdl\n\n2023-09-13T16:05:00Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:01.886Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 debug: BlobSASAuthenticator:validate() Calculated signature is: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.886Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:01.886Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:01.886Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:01.886Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:01.886Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:05:01.886Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:01.886Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:01.886Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"3b348b08-2efa-4e44-7009-e7de435720b8","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2020-10-02"}
2023-08-14T16:05:01.886Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:01.887Z 28aacb24-b562-4f31-b259-66b8d18d7ca5 info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"176116","content-type":"image/jpeg","etag":"\"0x1D818D7E0115960\"","content-md5":"JM5rlVNQHKMZIwy51r+1zA==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"3b348b08-2efa-4e44-7009-e7de435720b8","x-ms-request-id":"28aacb24-b562-4f31-b259-66b8d18d7ca5","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:01 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:04:48 GMT"}
2023-08-14T16:05:01.887Z adab2dc0-0695-4455-83cc-94de15b18502 info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/3.jpg?se=2023-09-13T16%3A05%3A00Z&sig=2pvgLKUkjzeLaI2A%2F6BlJfp0sYZgrFh5TvKnjDcdl80%3D&sp=rdl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"f6324c3d-3f9a-4f74-490b-a995b3f36790","x-ms-version":"2020-10-02"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:01.887Z adab2dc0-0695-4455-83cc-94de15b18502 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=3.jpg
2023-08-14T16:05:01.887Z adab2dc0-0695-4455-83cc-94de15b18502 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:01.887Z adab2dc0-0695-4455-83cc-94de15b18502 info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:05:01.887Z adab2dc0-0695-4455-83cc-94de15b18502 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:01.887Z adab2dc0-0695-4455-83cc-94de15b18502 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:01.887Z adab2dc0-0695-4455-83cc-94de15b18502 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.887Z adab2dc0-0695-4455-83cc-94de15b18502 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 3.jpg
2023-08-14T16:05:01.887Z adab2dc0-0695-4455-83cc-94de15b18502 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:01.887Z adab2dc0-0695-4455-83cc-94de15b18502 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:01.887Z adab2dc0-0695-4455-83cc-94de15b18502 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:01.888Z adab2dc0-0695-4455-83cc-94de15b18502 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:01.888Z adab2dc0-0695-4455-83cc-94de15b18502 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.888Z adab2dc0-0695-4455-83cc-94de15b18502 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 3.jpg
2023-08-14T16:05:01.888Z adab2dc0-0695-4455-83cc-94de15b18502 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.888Z adab2dc0-0695-4455-83cc-94de15b18502 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.888Z adab2dc0-0695-4455-83cc-94de15b18502 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:01.888Z adab2dc0-0695-4455-83cc-94de15b18502 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:01.888Z adab2dc0-0695-4455-83cc-94de15b18502 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.888Z adab2dc0-0695-4455-83cc-94de15b18502 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 3.jpg
2023-08-14T16:05:01.888Z adab2dc0-0695-4455-83cc-94de15b18502 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.888Z adab2dc0-0695-4455-83cc-94de15b18502 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.888Z adab2dc0-0695-4455-83cc-94de15b18502 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:01.888Z adab2dc0-0695-4455-83cc-94de15b18502 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:00Z","permissions":"rdl","containerName":"oleg","blobName":"3.jpg","signedResource":"c"}
2023-08-14T16:05:01.888Z adab2dc0-0695-4455-83cc-94de15b18502 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:01.888Z adab2dc0-0695-4455-83cc-94de15b18502 debug: BlobSASAuthenticator:validate() String to sign is: "rdl\n\n2023-09-13T16:05:00Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:01.888Z adab2dc0-0695-4455-83cc-94de15b18502 debug: BlobSASAuthenticator:validate() Calculated signature is: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.888Z adab2dc0-0695-4455-83cc-94de15b18502 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:01.888Z adab2dc0-0695-4455-83cc-94de15b18502 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:01.888Z adab2dc0-0695-4455-83cc-94de15b18502 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:01.888Z adab2dc0-0695-4455-83cc-94de15b18502 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:01.888Z adab2dc0-0695-4455-83cc-94de15b18502 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:05:01.888Z adab2dc0-0695-4455-83cc-94de15b18502 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:01.888Z adab2dc0-0695-4455-83cc-94de15b18502 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:01.888Z adab2dc0-0695-4455-83cc-94de15b18502 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"f6324c3d-3f9a-4f74-490b-a995b3f36790","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2020-10-02"}
2023-08-14T16:05:01.888Z adab2dc0-0695-4455-83cc-94de15b18502 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:01.888Z adab2dc0-0695-4455-83cc-94de15b18502 info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"176116","content-type":"image/jpeg","etag":"\"0x1D818D7E0115960\"","content-md5":"JM5rlVNQHKMZIwy51r+1zA==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"f6324c3d-3f9a-4f74-490b-a995b3f36790","x-ms-request-id":"adab2dc0-0695-4455-83cc-94de15b18502","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:01 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:04:48 GMT"}
2023-08-14T16:05:01.888Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/4.jpg?se=2023-09-13T16%3A05%3A00Z&sig=2pvgLKUkjzeLaI2A%2F6BlJfp0sYZgrFh5TvKnjDcdl80%3D&sp=rdl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"b14b332a-3a33-4ce8-5c92-a57a1894ca23","x-ms-version":"2020-10-02"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:01.888Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=4.jpg
2023-08-14T16:05:01.888Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:01.888Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:05:01.888Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:01.888Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 4.jpg
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 4.jpg
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 4.jpg
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:00Z","permissions":"rdl","containerName":"oleg","blobName":"4.jpg","signedResource":"c"}
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 debug: BlobSASAuthenticator:validate() String to sign is: "rdl\n\n2023-09-13T16:05:00Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 debug: BlobSASAuthenticator:validate() Calculated signature is: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"b14b332a-3a33-4ce8-5c92-a57a1894ca23","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2020-10-02"}
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:01.889Z 3a6c0d9e-b207-4da7-9879-7ba509df1cb7 info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"467323","content-type":"image/jpeg","etag":"\"0x20021DC4FE14AE0\"","content-md5":"nbTZU6yagqqG6fSdJmvTtQ==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"b14b332a-3a33-4ce8-5c92-a57a1894ca23","x-ms-request-id":"3a6c0d9e-b207-4da7-9879-7ba509df1cb7","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:01 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:04:48 GMT"}
2023-08-14T16:05:01.889Z 43018bc5-cb37-43e8-9382-dfd2580389fb info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/4.jpg?se=2023-09-13T16%3A05%3A00Z&sig=2pvgLKUkjzeLaI2A%2F6BlJfp0sYZgrFh5TvKnjDcdl80%3D&sp=rdl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"28b5813b-ef52-4691-7cf9-2b27ec4a26fb","x-ms-version":"2020-10-02"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:01.889Z 43018bc5-cb37-43e8-9382-dfd2580389fb info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=4.jpg
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 4.jpg
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 4.jpg
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 4.jpg
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:00Z","permissions":"rdl","containerName":"oleg","blobName":"4.jpg","signedResource":"c"}
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb debug: BlobSASAuthenticator:validate() String to sign is: "rdl\n\n2023-09-13T16:05:00Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb debug: BlobSASAuthenticator:validate() Calculated signature is: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"28b5813b-ef52-4691-7cf9-2b27ec4a26fb","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2020-10-02"}
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:01.890Z 43018bc5-cb37-43e8-9382-dfd2580389fb info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"467323","content-type":"image/jpeg","etag":"\"0x20021DC4FE14AE0\"","content-md5":"nbTZU6yagqqG6fSdJmvTtQ==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"28b5813b-ef52-4691-7cf9-2b27ec4a26fb","x-ms-request-id":"43018bc5-cb37-43e8-9382-dfd2580389fb","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:01 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:04:48 GMT"}
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/5.png?se=2023-09-13T16%3A05%3A00Z&sig=2pvgLKUkjzeLaI2A%2F6BlJfp0sYZgrFh5TvKnjDcdl80%3D&sp=rdl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"2bae4cee-46bb-40d8-5ba3-db085c6bbe97","x-ms-version":"2020-10-02"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=5.png
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 5.png
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 5.png
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 5.png
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:00Z","permissions":"rdl","containerName":"oleg","blobName":"5.png","signedResource":"c"}
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 debug: BlobSASAuthenticator:validate() String to sign is: "rdl\n\n2023-09-13T16:05:00Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 debug: BlobSASAuthenticator:validate() Calculated signature is: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:01.891Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"2bae4cee-46bb-40d8-5ba3-db085c6bbe97","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2020-10-02"}
2023-08-14T16:05:01.892Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:01.892Z 0b3fdadb-e368-4b1f-a318-1d0d793bca53 info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"1637282","content-type":"image/png","etag":"\"0x22156B27B83DB40\"","content-md5":"sVy9MlmydwHP4Qk+L9LtgQ==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"2bae4cee-46bb-40d8-5ba3-db085c6bbe97","x-ms-request-id":"0b3fdadb-e368-4b1f-a318-1d0d793bca53","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:01 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:04:48 GMT"}
2023-08-14T16:05:01.893Z 188fff25-fafc-4221-a7a6-00e0ef636b82 info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/5.png?se=2023-09-13T16%3A05%3A00Z&sig=2pvgLKUkjzeLaI2A%2F6BlJfp0sYZgrFh5TvKnjDcdl80%3D&sp=rdl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"28872b73-9489-44da-5d68-1e55e392eab5","x-ms-version":"2020-10-02"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:01.893Z 188fff25-fafc-4221-a7a6-00e0ef636b82 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=5.png
2023-08-14T16:05:01.893Z 188fff25-fafc-4221-a7a6-00e0ef636b82 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:01.893Z 188fff25-fafc-4221-a7a6-00e0ef636b82 info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:05:01.893Z 188fff25-fafc-4221-a7a6-00e0ef636b82 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:01.893Z 188fff25-fafc-4221-a7a6-00e0ef636b82 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:01.893Z 188fff25-fafc-4221-a7a6-00e0ef636b82 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.893Z 188fff25-fafc-4221-a7a6-00e0ef636b82 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 5.png
2023-08-14T16:05:01.893Z 188fff25-fafc-4221-a7a6-00e0ef636b82 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:01.893Z 188fff25-fafc-4221-a7a6-00e0ef636b82 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:01.893Z 188fff25-fafc-4221-a7a6-00e0ef636b82 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:01.893Z 188fff25-fafc-4221-a7a6-00e0ef636b82 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:01.893Z 188fff25-fafc-4221-a7a6-00e0ef636b82 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.893Z 188fff25-fafc-4221-a7a6-00e0ef636b82 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 5.png
2023-08-14T16:05:01.893Z 188fff25-fafc-4221-a7a6-00e0ef636b82 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.893Z 188fff25-fafc-4221-a7a6-00e0ef636b82 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.893Z 188fff25-fafc-4221-a7a6-00e0ef636b82 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:01.893Z 188fff25-fafc-4221-a7a6-00e0ef636b82 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:01.893Z 188fff25-fafc-4221-a7a6-00e0ef636b82 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.893Z 188fff25-fafc-4221-a7a6-00e0ef636b82 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 5.png
2023-08-14T16:05:01.893Z 188fff25-fafc-4221-a7a6-00e0ef636b82 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.893Z 188fff25-fafc-4221-a7a6-00e0ef636b82 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.893Z 188fff25-fafc-4221-a7a6-00e0ef636b82 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:01.894Z 188fff25-fafc-4221-a7a6-00e0ef636b82 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:00Z","permissions":"rdl","containerName":"oleg","blobName":"5.png","signedResource":"c"}
2023-08-14T16:05:01.894Z 188fff25-fafc-4221-a7a6-00e0ef636b82 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:01.894Z 188fff25-fafc-4221-a7a6-00e0ef636b82 debug: BlobSASAuthenticator:validate() String to sign is: "rdl\n\n2023-09-13T16:05:00Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:01.894Z 188fff25-fafc-4221-a7a6-00e0ef636b82 debug: BlobSASAuthenticator:validate() Calculated signature is: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.894Z 188fff25-fafc-4221-a7a6-00e0ef636b82 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:01.894Z 188fff25-fafc-4221-a7a6-00e0ef636b82 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:01.894Z 188fff25-fafc-4221-a7a6-00e0ef636b82 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:01.894Z 188fff25-fafc-4221-a7a6-00e0ef636b82 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:01.894Z 188fff25-fafc-4221-a7a6-00e0ef636b82 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:05:01.894Z 188fff25-fafc-4221-a7a6-00e0ef636b82 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:01.894Z 188fff25-fafc-4221-a7a6-00e0ef636b82 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:01.894Z 188fff25-fafc-4221-a7a6-00e0ef636b82 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"28872b73-9489-44da-5d68-1e55e392eab5","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2020-10-02"}
2023-08-14T16:05:01.894Z 188fff25-fafc-4221-a7a6-00e0ef636b82 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:01.894Z 188fff25-fafc-4221-a7a6-00e0ef636b82 info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"1637282","content-type":"image/png","etag":"\"0x22156B27B83DB40\"","content-md5":"sVy9MlmydwHP4Qk+L9LtgQ==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"28872b73-9489-44da-5d68-1e55e392eab5","x-ms-request-id":"188fff25-fafc-4221-a7a6-00e0ef636b82","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:01 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:04:48 GMT"}
2023-08-14T16:05:01.895Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/6.png?se=2023-09-13T16%3A05%3A00Z&sig=2pvgLKUkjzeLaI2A%2F6BlJfp0sYZgrFh5TvKnjDcdl80%3D&sp=rdl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"6340eef3-a3cb-403c-78cf-cd942750c005","x-ms-version":"2020-10-02"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:01.895Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=6.png
2023-08-14T16:05:01.895Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:01.895Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:05:01.895Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:01.895Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:01.895Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.895Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 6.png
2023-08-14T16:05:01.895Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:01.895Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:01.895Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:01.895Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:01.895Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.895Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 6.png
2023-08-14T16:05:01.895Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.895Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.895Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:01.895Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:01.895Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.896Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 6.png
2023-08-14T16:05:01.896Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.896Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.896Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:01.896Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:00Z","permissions":"rdl","containerName":"oleg","blobName":"6.png","signedResource":"c"}
2023-08-14T16:05:01.896Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:01.896Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 debug: BlobSASAuthenticator:validate() String to sign is: "rdl\n\n2023-09-13T16:05:00Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:01.896Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 debug: BlobSASAuthenticator:validate() Calculated signature is: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.896Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:01.896Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:01.896Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:01.896Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:01.896Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:05:01.896Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:01.896Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:01.896Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"6340eef3-a3cb-403c-78cf-cd942750c005","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2020-10-02"}
2023-08-14T16:05:01.896Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:01.896Z 892121c6-e08d-47f3-8f2c-e8eebdf1fa72 info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"1311150","content-type":"image/png","etag":"\"0x1B1E843FFEA5C80\"","content-md5":"PTO201002qAVYqOzyemSoQ==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"6340eef3-a3cb-403c-78cf-cd942750c005","x-ms-request-id":"892121c6-e08d-47f3-8f2c-e8eebdf1fa72","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:01 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:04:48 GMT"}
2023-08-14T16:05:01.897Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/6.png?se=2023-09-13T16%3A05%3A00Z&sig=2pvgLKUkjzeLaI2A%2F6BlJfp0sYZgrFh5TvKnjDcdl80%3D&sp=rdl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"4a67057e-50d9-4fe6-795a-a0775c3aaac0","x-ms-version":"2020-10-02"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=6.png
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 6.png
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 6.png
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 6.png
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:00Z","permissions":"rdl","containerName":"oleg","blobName":"6.png","signedResource":"c"}
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a debug: BlobSASAuthenticator:validate() String to sign is: "rdl\n\n2023-09-13T16:05:00Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a debug: BlobSASAuthenticator:validate() Calculated signature is: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:01.898Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:01.899Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"4a67057e-50d9-4fe6-795a-a0775c3aaac0","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2020-10-02"}
2023-08-14T16:05:01.899Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:01.899Z a37e425b-0c0c-4e2f-b03a-2b8cd082e26a info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"1311150","content-type":"image/png","etag":"\"0x1B1E843FFEA5C80\"","content-md5":"PTO201002qAVYqOzyemSoQ==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"4a67057e-50d9-4fe6-795a-a0775c3aaac0","x-ms-request-id":"a37e425b-0c0c-4e2f-b03a-2b8cd082e26a","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:01 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:04:48 GMT"}
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/7.png?se=2023-09-13T16%3A05%3A00Z&sig=2pvgLKUkjzeLaI2A%2F6BlJfp0sYZgrFh5TvKnjDcdl80%3D&sp=rdl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"055a46a5-d51d-4758-47db-aa2b62ab64df","x-ms-version":"2020-10-02"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=7.png
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 7.png
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 7.png
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 7.png
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:00Z","permissions":"rdl","containerName":"oleg","blobName":"7.png","signedResource":"c"}
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 debug: BlobSASAuthenticator:validate() String to sign is: "rdl\n\n2023-09-13T16:05:00Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 debug: BlobSASAuthenticator:validate() Calculated signature is: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:01.900Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:01.901Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:05:01.901Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:01.901Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:01.901Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"055a46a5-d51d-4758-47db-aa2b62ab64df","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2020-10-02"}
2023-08-14T16:05:01.901Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:01.901Z 6ee56adb-f62c-4bae-8f2b-13185d6c2b51 info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"1413252","content-type":"image/png","etag":"\"0x1FCDCB420D0E650\"","content-md5":"a3MdCt7Cyh3g1MZQhClGKA==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"055a46a5-d51d-4758-47db-aa2b62ab64df","x-ms-request-id":"6ee56adb-f62c-4bae-8f2b-13185d6c2b51","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:01 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:04:48 GMT"}
2023-08-14T16:05:01.902Z abc392d9-cab0-413a-930f-8631cb46b1e8 info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/7.png?se=2023-09-13T16%3A05%3A00Z&sig=2pvgLKUkjzeLaI2A%2F6BlJfp0sYZgrFh5TvKnjDcdl80%3D&sp=rdl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"40a1dd2e-a3e1-488c-691d-7a793f09431a","x-ms-version":"2020-10-02"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:01.902Z abc392d9-cab0-413a-930f-8631cb46b1e8 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=7.png
2023-08-14T16:05:01.902Z abc392d9-cab0-413a-930f-8631cb46b1e8 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:01.902Z abc392d9-cab0-413a-930f-8631cb46b1e8 info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:05:01.902Z abc392d9-cab0-413a-930f-8631cb46b1e8 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:01.902Z abc392d9-cab0-413a-930f-8631cb46b1e8 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:01.902Z abc392d9-cab0-413a-930f-8631cb46b1e8 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.902Z abc392d9-cab0-413a-930f-8631cb46b1e8 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 7.png
2023-08-14T16:05:01.902Z abc392d9-cab0-413a-930f-8631cb46b1e8 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:01.902Z abc392d9-cab0-413a-930f-8631cb46b1e8 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:01.902Z abc392d9-cab0-413a-930f-8631cb46b1e8 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:01.902Z abc392d9-cab0-413a-930f-8631cb46b1e8 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:01.902Z abc392d9-cab0-413a-930f-8631cb46b1e8 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.902Z abc392d9-cab0-413a-930f-8631cb46b1e8 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 7.png
2023-08-14T16:05:01.902Z abc392d9-cab0-413a-930f-8631cb46b1e8 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.903Z abc392d9-cab0-413a-930f-8631cb46b1e8 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.903Z abc392d9-cab0-413a-930f-8631cb46b1e8 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:01.903Z abc392d9-cab0-413a-930f-8631cb46b1e8 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:01.903Z abc392d9-cab0-413a-930f-8631cb46b1e8 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.903Z abc392d9-cab0-413a-930f-8631cb46b1e8 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 7.png
2023-08-14T16:05:01.903Z abc392d9-cab0-413a-930f-8631cb46b1e8 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.903Z abc392d9-cab0-413a-930f-8631cb46b1e8 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.903Z abc392d9-cab0-413a-930f-8631cb46b1e8 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:01.903Z abc392d9-cab0-413a-930f-8631cb46b1e8 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:00Z","permissions":"rdl","containerName":"oleg","blobName":"7.png","signedResource":"c"}
2023-08-14T16:05:01.903Z abc392d9-cab0-413a-930f-8631cb46b1e8 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:01.903Z abc392d9-cab0-413a-930f-8631cb46b1e8 debug: BlobSASAuthenticator:validate() String to sign is: "rdl\n\n2023-09-13T16:05:00Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:01.903Z abc392d9-cab0-413a-930f-8631cb46b1e8 debug: BlobSASAuthenticator:validate() Calculated signature is: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.903Z abc392d9-cab0-413a-930f-8631cb46b1e8 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:01.903Z abc392d9-cab0-413a-930f-8631cb46b1e8 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:01.903Z abc392d9-cab0-413a-930f-8631cb46b1e8 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:01.903Z abc392d9-cab0-413a-930f-8631cb46b1e8 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:01.903Z abc392d9-cab0-413a-930f-8631cb46b1e8 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:05:01.903Z abc392d9-cab0-413a-930f-8631cb46b1e8 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:01.903Z abc392d9-cab0-413a-930f-8631cb46b1e8 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:01.903Z abc392d9-cab0-413a-930f-8631cb46b1e8 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"40a1dd2e-a3e1-488c-691d-7a793f09431a","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2020-10-02"}
2023-08-14T16:05:01.903Z abc392d9-cab0-413a-930f-8631cb46b1e8 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:01.903Z abc392d9-cab0-413a-930f-8631cb46b1e8 info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"1413252","content-type":"image/png","etag":"\"0x1FCDCB420D0E650\"","content-md5":"a3MdCt7Cyh3g1MZQhClGKA==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"40a1dd2e-a3e1-488c-691d-7a793f09431a","x-ms-request-id":"abc392d9-cab0-413a-930f-8631cb46b1e8","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:01 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:04:48 GMT"}
2023-08-14T16:05:01.903Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/8.png?se=2023-09-13T16%3A05%3A00Z&sig=2pvgLKUkjzeLaI2A%2F6BlJfp0sYZgrFh5TvKnjDcdl80%3D&sp=rdl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"4134f5c6-b535-4aa8-5c41-1bbb8d137f79","x-ms-version":"2020-10-02"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:01.903Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=8.png
2023-08-14T16:05:01.903Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 8.png
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 8.png
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 8.png
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:00Z","permissions":"rdl","containerName":"oleg","blobName":"8.png","signedResource":"c"}
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c debug: BlobSASAuthenticator:validate() String to sign is: "rdl\n\n2023-09-13T16:05:00Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c debug: BlobSASAuthenticator:validate() Calculated signature is: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"4134f5c6-b535-4aa8-5c41-1bbb8d137f79","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2020-10-02"}
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:01.904Z 353ae08c-d2dd-42c0-9c01-533e1f845f6c info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"1888630","content-type":"image/png","etag":"\"0x1F4C9F8EBF76160\"","content-md5":"AF2DTS+hjg/7a5bF2nY/oQ==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"4134f5c6-b535-4aa8-5c41-1bbb8d137f79","x-ms-request-id":"353ae08c-d2dd-42c0-9c01-533e1f845f6c","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:01 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:04:48 GMT"}
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/8.png?se=2023-09-13T16%3A05%3A00Z&sig=2pvgLKUkjzeLaI2A%2F6BlJfp0sYZgrFh5TvKnjDcdl80%3D&sp=rdl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"afb8b8ee-06b3-460c-5f32-fba68bdd288c","x-ms-version":"2020-10-02"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=8.png
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 8.png
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 8.png
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 8.png
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:00Z","permissions":"rdl","containerName":"oleg","blobName":"8.png","signedResource":"c"}
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 debug: BlobSASAuthenticator:validate() String to sign is: "rdl\n\n2023-09-13T16:05:00Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 debug: BlobSASAuthenticator:validate() Calculated signature is: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:01.905Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"afb8b8ee-06b3-460c-5f32-fba68bdd288c","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2020-10-02"}
2023-08-14T16:05:01.906Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:01.906Z a2d0f4e8-cc87-465a-a429-eb6983aa81e7 info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"1888630","content-type":"image/png","etag":"\"0x1F4C9F8EBF76160\"","content-md5":"AF2DTS+hjg/7a5bF2nY/oQ==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"afb8b8ee-06b3-460c-5f32-fba68bdd288c","x-ms-request-id":"a2d0f4e8-cc87-465a-a429-eb6983aa81e7","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:01 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:04:48 GMT"}
2023-08-14T16:05:01.906Z f57146c3-5046-4746-bdae-a2d2a82f4a67 info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/9.png?se=2023-09-13T16%3A05%3A00Z&sig=2pvgLKUkjzeLaI2A%2F6BlJfp0sYZgrFh5TvKnjDcdl80%3D&sp=rdl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"b3313187-0c5c-47c4-44d7-578f897423ac","x-ms-version":"2020-10-02"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:01.906Z f57146c3-5046-4746-bdae-a2d2a82f4a67 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=9.png
2023-08-14T16:05:01.906Z f57146c3-5046-4746-bdae-a2d2a82f4a67 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:01.906Z f57146c3-5046-4746-bdae-a2d2a82f4a67 info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 9.png
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 9.png
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 9.png
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:00Z","permissions":"rdl","containerName":"oleg","blobName":"9.png","signedResource":"c"}
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 debug: BlobSASAuthenticator:validate() String to sign is: "rdl\n\n2023-09-13T16:05:00Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 debug: BlobSASAuthenticator:validate() Calculated signature is: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"b3313187-0c5c-47c4-44d7-578f897423ac","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2020-10-02"}
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:01.907Z f57146c3-5046-4746-bdae-a2d2a82f4a67 info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"1591097","content-type":"image/png","etag":"\"0x1BEBAB89E9B70D0\"","content-md5":"o4qsh2qWccT1fdXC2fI9jg==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"b3313187-0c5c-47c4-44d7-578f897423ac","x-ms-request-id":"f57146c3-5046-4746-bdae-a2d2a82f4a67","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:01 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:04:48 GMT"}
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/9.png?se=2023-09-13T16%3A05%3A00Z&sig=2pvgLKUkjzeLaI2A%2F6BlJfp0sYZgrFh5TvKnjDcdl80%3D&sp=rdl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"fd331867-7c01-4881-476e-b95ff6ba49b8","x-ms-version":"2020-10-02"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=9.png
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 9.png
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 9.png
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 9.png
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:00Z","permissions":"rdl","containerName":"oleg","blobName":"9.png","signedResource":"c"}
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 debug: BlobSASAuthenticator:validate() String to sign is: "rdl\n\n2023-09-13T16:05:00Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 debug: BlobSASAuthenticator:validate() Calculated signature is: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:05:01.908Z 456ebf87-13c1-42ff-af0d-d43272cbe455 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:01.909Z 456ebf87-13c1-42ff-af0d-d43272cbe455 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:01.909Z 456ebf87-13c1-42ff-af0d-d43272cbe455 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"fd331867-7c01-4881-476e-b95ff6ba49b8","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2020-10-02"}
2023-08-14T16:05:01.909Z 456ebf87-13c1-42ff-af0d-d43272cbe455 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:01.909Z 456ebf87-13c1-42ff-af0d-d43272cbe455 info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:04:48 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"1591097","content-type":"image/png","etag":"\"0x1BEBAB89E9B70D0\"","content-md5":"o4qsh2qWccT1fdXC2fI9jg==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"fd331867-7c01-4881-476e-b95ff6ba49b8","x-ms-request-id":"456ebf87-13c1-42ff-af0d-d43272cbe455","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:01 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:04:48 GMT"}
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f info: BlobStorageContextMiddleware: RequestMethod=DELETE RequestURL=http://127.0.0.1/devstoreaccount1/oleg/10.png?se=2023-09-13T16%3A05%3A00Z&sig=2pvgLKUkjzeLaI2A%2F6BlJfp0sYZgrFh5TvKnjDcdl80%3D&sp=rdl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"3efae40f-c7e3-4992-4474-4e8fcd065b91","x-ms-version":"2020-10-02"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=10.png
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f info: DispatchMiddleware: Operation=Blob_Delete
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 10.png
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 10.png
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 10.png
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:00Z","permissions":"rdl","containerName":"oleg","blobName":"10.png","signedResource":"c"}
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f debug: BlobSASAuthenticator:validate() String to sign is: "rdl\n\n2023-09-13T16:05:00Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f debug: BlobSASAuthenticator:validate() Calculated signature is: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_Delete - {"permission":"d"}
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:02.014Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"3efae40f-c7e3-4992-4474-4e8fcd065b91","leaseAccessConditions":{},"modifiedAccessConditions":{}},"version":"2020-10-02"}
2023-08-14T16:05:02.015Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:02.015Z 8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=202 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","x-ms-client-request-id":"3efae40f-c7e3-4992-4474-4e8fcd065b91","x-ms-request-id":"8158cdc0-4cfd-4ccf-9515-8c5c8dd1013f","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:02 GMT"}
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 info: BlobStorageContextMiddleware: RequestMethod=DELETE RequestURL=http://127.0.0.1/devstoreaccount1/oleg/2.png?se=2023-09-13T16%3A05%3A00Z&sig=2pvgLKUkjzeLaI2A%2F6BlJfp0sYZgrFh5TvKnjDcdl80%3D&sp=rdl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"aa0cc79b-2524-4a5e-4f3f-7fda0110ba95","x-ms-version":"2020-10-02"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=2.png
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 info: DispatchMiddleware: Operation=Blob_Delete
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 2.png
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 2.png
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 2.png
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:00Z","permissions":"rdl","containerName":"oleg","blobName":"2.png","signedResource":"c"}
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 debug: BlobSASAuthenticator:validate() String to sign is: "rdl\n\n2023-09-13T16:05:00Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 debug: BlobSASAuthenticator:validate() Calculated signature is: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_Delete - {"permission":"d"}
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"aa0cc79b-2524-4a5e-4f3f-7fda0110ba95","leaseAccessConditions":{},"modifiedAccessConditions":{}},"version":"2020-10-02"}
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:02.016Z c2313643-2f26-4614-8c66-547e8fe877b2 info: EndMiddleware: End response. TotalTimeInMS=0 StatusCode=202 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","x-ms-client-request-id":"aa0cc79b-2524-4a5e-4f3f-7fda0110ba95","x-ms-request-id":"c2313643-2f26-4614-8c66-547e8fe877b2","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:02 GMT"}
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 info: BlobStorageContextMiddleware: RequestMethod=DELETE RequestURL=http://127.0.0.1/devstoreaccount1/oleg/5.png?se=2023-09-13T16%3A05%3A00Z&sig=2pvgLKUkjzeLaI2A%2F6BlJfp0sYZgrFh5TvKnjDcdl80%3D&sp=rdl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"8a16760c-757c-4876-40a5-f7f2fca48494","x-ms-version":"2020-10-02"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=5.png
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 info: DispatchMiddleware: Operation=Blob_Delete
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 5.png
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 5.png
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 5.png
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:00Z","permissions":"rdl","containerName":"oleg","blobName":"5.png","signedResource":"c"}
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 debug: BlobSASAuthenticator:validate() String to sign is: "rdl\n\n2023-09-13T16:05:00Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 debug: BlobSASAuthenticator:validate() Calculated signature is: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_Delete - {"permission":"d"}
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"8a16760c-757c-4876-40a5-f7f2fca48494","leaseAccessConditions":{},"modifiedAccessConditions":{}},"version":"2020-10-02"}
2023-08-14T16:05:02.017Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:02.018Z 0a8d1d07-7991-45dd-b707-70e9f19c00c3 info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=202 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","x-ms-client-request-id":"8a16760c-757c-4876-40a5-f7f2fca48494","x-ms-request-id":"0a8d1d07-7991-45dd-b707-70e9f19c00c3","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:02 GMT"}
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf info: BlobStorageContextMiddleware: RequestMethod=DELETE RequestURL=http://127.0.0.1/devstoreaccount1/oleg/3.jpg?se=2023-09-13T16%3A05%3A00Z&sig=2pvgLKUkjzeLaI2A%2F6BlJfp0sYZgrFh5TvKnjDcdl80%3D&sp=rdl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"b2c9a998-af31-49fc-4799-63cb8c603cd8","x-ms-version":"2020-10-02"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=3.jpg
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf info: DispatchMiddleware: Operation=Blob_Delete
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 3.jpg
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 3.jpg
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 3.jpg
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:00Z","permissions":"rdl","containerName":"oleg","blobName":"3.jpg","signedResource":"c"}
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf debug: BlobSASAuthenticator:validate() String to sign is: "rdl\n\n2023-09-13T16:05:00Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf debug: BlobSASAuthenticator:validate() Calculated signature is: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_Delete - {"permission":"d"}
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"b2c9a998-af31-49fc-4799-63cb8c603cd8","leaseAccessConditions":{},"modifiedAccessConditions":{}},"version":"2020-10-02"}
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:02.018Z 8a8ddf30-a73a-483d-be04-63e9a45febcf info: EndMiddleware: End response. TotalTimeInMS=0 StatusCode=202 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","x-ms-client-request-id":"b2c9a998-af31-49fc-4799-63cb8c603cd8","x-ms-request-id":"8a8ddf30-a73a-483d-be04-63e9a45febcf","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:02 GMT"}
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd info: BlobStorageContextMiddleware: RequestMethod=DELETE RequestURL=http://127.0.0.1/devstoreaccount1/oleg/8.png?se=2023-09-13T16%3A05%3A00Z&sig=2pvgLKUkjzeLaI2A%2F6BlJfp0sYZgrFh5TvKnjDcdl80%3D&sp=rdl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"21fe1a88-4044-427e-5703-f820737f6de2","x-ms-version":"2020-10-02"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=8.png
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd info: DispatchMiddleware: Operation=Blob_Delete
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 8.png
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 8.png
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 8.png
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:00Z","permissions":"rdl","containerName":"oleg","blobName":"8.png","signedResource":"c"}
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd debug: BlobSASAuthenticator:validate() String to sign is: "rdl\n\n2023-09-13T16:05:00Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd debug: BlobSASAuthenticator:validate() Calculated signature is: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:02.019Z ed62734b-7041-4db4-8c04-49968e1ea1dd info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:02.020Z ed62734b-7041-4db4-8c04-49968e1ea1dd debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_Delete - {"permission":"d"}
2023-08-14T16:05:02.020Z ed62734b-7041-4db4-8c04-49968e1ea1dd info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:02.020Z ed62734b-7041-4db4-8c04-49968e1ea1dd verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:02.020Z ed62734b-7041-4db4-8c04-49968e1ea1dd info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"21fe1a88-4044-427e-5703-f820737f6de2","leaseAccessConditions":{},"modifiedAccessConditions":{}},"version":"2020-10-02"}
2023-08-14T16:05:02.020Z ed62734b-7041-4db4-8c04-49968e1ea1dd verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:02.020Z ed62734b-7041-4db4-8c04-49968e1ea1dd info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=202 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","x-ms-client-request-id":"21fe1a88-4044-427e-5703-f820737f6de2","x-ms-request-id":"ed62734b-7041-4db4-8c04-49968e1ea1dd","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:02 GMT"}
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b info: BlobStorageContextMiddleware: RequestMethod=DELETE RequestURL=http://127.0.0.1/devstoreaccount1/oleg/4.jpg?se=2023-09-13T16%3A05%3A00Z&sig=2pvgLKUkjzeLaI2A%2F6BlJfp0sYZgrFh5TvKnjDcdl80%3D&sp=rdl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"1fbfcc08-d7e6-4c1b-50b3-21de7b1bb4fa","x-ms-version":"2020-10-02"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=4.jpg
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b info: DispatchMiddleware: Operation=Blob_Delete
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 4.jpg
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 4.jpg
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 4.jpg
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:00Z","permissions":"rdl","containerName":"oleg","blobName":"4.jpg","signedResource":"c"}
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b debug: BlobSASAuthenticator:validate() String to sign is: "rdl\n\n2023-09-13T16:05:00Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b debug: BlobSASAuthenticator:validate() Calculated signature is: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_Delete - {"permission":"d"}
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:02.020Z edb91b4d-0e30-4095-ad0e-509bc2accc3b info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"1fbfcc08-d7e6-4c1b-50b3-21de7b1bb4fa","leaseAccessConditions":{},"modifiedAccessConditions":{}},"version":"2020-10-02"}
2023-08-14T16:05:02.021Z edb91b4d-0e30-4095-ad0e-509bc2accc3b verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:02.021Z edb91b4d-0e30-4095-ad0e-509bc2accc3b info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=202 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","x-ms-client-request-id":"1fbfcc08-d7e6-4c1b-50b3-21de7b1bb4fa","x-ms-request-id":"edb91b4d-0e30-4095-ad0e-509bc2accc3b","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:02 GMT"}
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 info: BlobStorageContextMiddleware: RequestMethod=DELETE RequestURL=http://127.0.0.1/devstoreaccount1/oleg/1.png?se=2023-09-13T16%3A05%3A00Z&sig=2pvgLKUkjzeLaI2A%2F6BlJfp0sYZgrFh5TvKnjDcdl80%3D&sp=rdl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"b12bb181-c62e-42c5-4721-dd9bbc5f4bd7","x-ms-version":"2020-10-02"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=1.png
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 info: DispatchMiddleware: Operation=Blob_Delete
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 1.png
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 1.png
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 1.png
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:00Z","permissions":"rdl","containerName":"oleg","blobName":"1.png","signedResource":"c"}
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 debug: BlobSASAuthenticator:validate() String to sign is: "rdl\n\n2023-09-13T16:05:00Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 debug: BlobSASAuthenticator:validate() Calculated signature is: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_Delete - {"permission":"d"}
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:02.021Z 6b5604cf-6b77-45ff-8675-532ea865cb87 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"b12bb181-c62e-42c5-4721-dd9bbc5f4bd7","leaseAccessConditions":{},"modifiedAccessConditions":{}},"version":"2020-10-02"}
2023-08-14T16:05:02.022Z 6b5604cf-6b77-45ff-8675-532ea865cb87 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:02.022Z 6b5604cf-6b77-45ff-8675-532ea865cb87 info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=202 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","x-ms-client-request-id":"b12bb181-c62e-42c5-4721-dd9bbc5f4bd7","x-ms-request-id":"6b5604cf-6b77-45ff-8675-532ea865cb87","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:02 GMT"}
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d info: BlobStorageContextMiddleware: RequestMethod=DELETE RequestURL=http://127.0.0.1/devstoreaccount1/oleg/6.png?se=2023-09-13T16%3A05%3A00Z&sig=2pvgLKUkjzeLaI2A%2F6BlJfp0sYZgrFh5TvKnjDcdl80%3D&sp=rdl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"8fdf75aa-ad83-4d81-5de7-22f3fe9c82c1","x-ms-version":"2020-10-02"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=6.png
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d info: DispatchMiddleware: Operation=Blob_Delete
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 6.png
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 6.png
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 6.png
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:00Z","permissions":"rdl","containerName":"oleg","blobName":"6.png","signedResource":"c"}
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d debug: BlobSASAuthenticator:validate() String to sign is: "rdl\n\n2023-09-13T16:05:00Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d debug: BlobSASAuthenticator:validate() Calculated signature is: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_Delete - {"permission":"d"}
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:02.022Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"8fdf75aa-ad83-4d81-5de7-22f3fe9c82c1","leaseAccessConditions":{},"modifiedAccessConditions":{}},"version":"2020-10-02"}
2023-08-14T16:05:02.023Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:02.023Z 8fddbbea-04a1-4dc6-a668-4ad42122ca8d info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=202 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","x-ms-client-request-id":"8fdf75aa-ad83-4d81-5de7-22f3fe9c82c1","x-ms-request-id":"8fddbbea-04a1-4dc6-a668-4ad42122ca8d","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:02 GMT"}
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f info: BlobStorageContextMiddleware: RequestMethod=DELETE RequestURL=http://127.0.0.1/devstoreaccount1/oleg/7.png?se=2023-09-13T16%3A05%3A00Z&sig=2pvgLKUkjzeLaI2A%2F6BlJfp0sYZgrFh5TvKnjDcdl80%3D&sp=rdl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"29858099-72d4-4742-525d-39a2652925ec","x-ms-version":"2020-10-02"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=7.png
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f info: DispatchMiddleware: Operation=Blob_Delete
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 7.png
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 7.png
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 7.png
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:00Z","permissions":"rdl","containerName":"oleg","blobName":"7.png","signedResource":"c"}
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f debug: BlobSASAuthenticator:validate() String to sign is: "rdl\n\n2023-09-13T16:05:00Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f debug: BlobSASAuthenticator:validate() Calculated signature is: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_Delete - {"permission":"d"}
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"29858099-72d4-4742-525d-39a2652925ec","leaseAccessConditions":{},"modifiedAccessConditions":{}},"version":"2020-10-02"}
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:02.023Z a164273f-509d-4587-aaea-e1a4a35f871f info: EndMiddleware: End response. TotalTimeInMS=0 StatusCode=202 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","x-ms-client-request-id":"29858099-72d4-4742-525d-39a2652925ec","x-ms-request-id":"a164273f-509d-4587-aaea-e1a4a35f871f","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:02 GMT"}
2023-08-14T16:05:02.024Z a64d4796-7790-4c96-be32-3e0979da0538 info: BlobStorageContextMiddleware: RequestMethod=DELETE RequestURL=http://127.0.0.1/devstoreaccount1/oleg/9.png?se=2023-09-13T16%3A05%3A00Z&sig=2pvgLKUkjzeLaI2A%2F6BlJfp0sYZgrFh5TvKnjDcdl80%3D&sp=rdl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"b317b087-80dd-40f1-46f0-6531dddd4997","x-ms-version":"2020-10-02"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:02.024Z a64d4796-7790-4c96-be32-3e0979da0538 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=9.png
2023-08-14T16:05:02.024Z a64d4796-7790-4c96-be32-3e0979da0538 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:02.024Z a64d4796-7790-4c96-be32-3e0979da0538 info: DispatchMiddleware: Operation=Blob_Delete
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 9.png
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 9.png
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 9.png
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:00Z","permissions":"rdl","containerName":"oleg","blobName":"9.png","signedResource":"c"}
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 debug: BlobSASAuthenticator:validate() String to sign is: "rdl\n\n2023-09-13T16:05:00Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 debug: BlobSASAuthenticator:validate() Calculated signature is: 2pvgLKUkjzeLaI2A/6BlJfp0sYZgrFh5TvKnjDcdl80=
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_Delete - {"permission":"d"}
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"b317b087-80dd-40f1-46f0-6531dddd4997","leaseAccessConditions":{},"modifiedAccessConditions":{}},"version":"2020-10-02"}
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:02.025Z a64d4796-7790-4c96-be32-3e0979da0538 info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=202 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","x-ms-client-request-id":"b317b087-80dd-40f1-46f0-6531dddd4997","x-ms-request-id":"a64d4796-7790-4c96-be32-3e0979da0538","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:02 GMT"}
2023-08-14T16:05:05.511Z 08f3a352-a8dd-462a-bfcb-35a2a3662f94 info: BlobStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1/oleg?comp=list&maxresults=5000&restype=container&include=metadata&delimiter=%2F RequestHeaders:{"host":"127.0.0.1:10000","connection":"keep-alive","x-ms-version":"2019-07-07","accept":"application/xml","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-storageblob/12.12.0 (NODE-VERSION v18.15.0; Linux 6.2.0-26-generic)","x-ms-client-request-id":"6a205fba-549c-46c9-9ae4-0fa45b079577","x-ms-date":"Mon, 14 Aug 2023 16:05:05 GMT","authorization":"SharedKey devstoreaccount1:rpR9BkkC6E5MQc4NuDoou3bV7rY6vqUNGXDhpGGRDBM=","accept-language":"*","sec-fetch-mode":"cors","accept-encoding":"gzip, deflate"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:05.512Z 08f3a352-a8dd-462a-bfcb-35a2a3662f94 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=
2023-08-14T16:05:05.512Z 08f3a352-a8dd-462a-bfcb-35a2a3662f94 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:05.512Z 08f3a352-a8dd-462a-bfcb-35a2a3662f94 info: DispatchMiddleware: Operation=Container_ListBlobHierarchySegment
2023-08-14T16:05:05.512Z 08f3a352-a8dd-462a-bfcb-35a2a3662f94 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:05.512Z 08f3a352-a8dd-462a-bfcb-35a2a3662f94 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:05.512Z 08f3a352-a8dd-462a-bfcb-35a2a3662f94 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:05.512Z 08f3a352-a8dd-462a-bfcb-35a2a3662f94 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 
2023-08-14T16:05:05.512Z 08f3a352-a8dd-462a-bfcb-35a2a3662f94 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:05.512Z 08f3a352-a8dd-462a-bfcb-35a2a3662f94 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:05.512Z 08f3a352-a8dd-462a-bfcb-35a2a3662f94 info: BlobSharedKeyAuthenticator:validate() [STRING TO SIGN]:"GET\n\n\n\n\n\n\n\n\n\n\n\nx-ms-client-request-id:6a205fba-549c-46c9-9ae4-0fa45b079577\nx-ms-date:Mon, 14 Aug 2023 16:05:05 GMT\nx-ms-version:2019-07-07\n/devstoreaccount1/devstoreaccount1/oleg\ncomp:list\ndelimiter:/\ninclude:metadata\nmaxresults:5000\nrestype:container"
2023-08-14T16:05:05.512Z 08f3a352-a8dd-462a-bfcb-35a2a3662f94 info: BlobSharedKeyAuthenticator:validate() Calculated authentication header based on key1: SharedKey devstoreaccount1:rpR9BkkC6E5MQc4NuDoou3bV7rY6vqUNGXDhpGGRDBM=
2023-08-14T16:05:05.512Z 08f3a352-a8dd-462a-bfcb-35a2a3662f94 info: BlobSharedKeyAuthenticator:validate() Signature 1 matched.
2023-08-14T16:05:05.512Z 08f3a352-a8dd-462a-bfcb-35a2a3662f94 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:05.513Z 08f3a352-a8dd-462a-bfcb-35a2a3662f94 info: HandlerMiddleware: DeserializedParameters={"options":{"maxresults":5000,"include":["metadata"],"requestId":"6a205fba-549c-46c9-9ae4-0fa45b079577"},"delimiter":"/","restype":"container","comp":"list","version":"2019-07-07"}
2023-08-14T16:05:05.513Z 08f3a352-a8dd-462a-bfcb-35a2a3662f94 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:05.513Z 08f3a352-a8dd-462a-bfcb-35a2a3662f94 debug: Serializer: Raw response body string is <?xml version="1.0" encoding="UTF-8" standalone="yes"?><EnumerationResults ServiceEndpoint="http://127.0.0.1:10000/devstoreaccount1" ContainerName="oleg"><Prefix/><Marker/><MaxResults>5000</MaxResults><Delimiter>/</Delimiter><Blobs/><NextMarker/></EnumerationResults>
2023-08-14T16:05:05.513Z 08f3a352-a8dd-462a-bfcb-35a2a3662f94 info: Serializer: Start returning stream body.
2023-08-14T16:05:05.513Z 08f3a352-a8dd-462a-bfcb-35a2a3662f94 info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=200 StatusMessage=OK Headers={"server":"Azurite-Blob/3.25.1","content-type":"application/xml","x-ms-client-request-id":"6a205fba-549c-46c9-9ae4-0fa45b079577","x-ms-request-id":"08f3a352-a8dd-462a-bfcb-35a2a3662f94","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:05 GMT"}
2023-08-14T16:05:34.365Z 	 info: AccountDataStore:init() Refresh accounts from environment variable AZURITE_ACCOUNTS with value undefined
2023-08-14T16:05:34.365Z 	 info: AccountDataStore:init() Fallback to default emulator account devstoreaccount1.
2023-08-14T16:05:34.377Z 	 info: AccountDataStore:init() Refresh accounts from environment variable AZURITE_ACCOUNTS with value undefined
2023-08-14T16:05:34.377Z 	 info: AccountDataStore:init() Fallback to default emulator account devstoreaccount1.
2023-08-14T16:05:34.382Z 	 info: QueueGCManager:markSweepLoop() Start new mark and sweep.
2023-08-14T16:05:34.382Z 	 info: QueueGCManger:markSweep() Get all extents.
2023-08-14T16:05:34.382Z 	 info: QueueGCManager:marksweep() Get 0 extents.
2023-08-14T16:05:34.382Z 	 info: QueueGCManager:markSweep() Get referred extents, then remove from allExtents.
2023-08-14T16:05:34.382Z 	 info: QueueGCManager:markSweep() Got referred extents, unreferenced extents count is 0.
2023-08-14T16:05:34.382Z 	 info: QueueGCManager:markSweepLoop() Mark and sweep finished, take 0ms.
2023-08-14T16:05:34.382Z 	 info: QueueGCManager:markSweepLoop() Sleep for 60000
2023-08-14T16:05:34.382Z 	 info: AccountDataStore:init() Refresh accounts from environment variable AZURITE_ACCOUNTS with value undefined
2023-08-14T16:05:34.382Z 	 info: AccountDataStore:init() Fallback to default emulator account devstoreaccount1.
2023-08-14T16:05:57.922Z da713713-811f-459f-973e-c1ec26146737 info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/10.png?se=2023-09-13T16%3A05%3A56Z&sig=jUXv0qwrB6%2F7Zf6pFKyb7FtNr3Y%2BjRvaTod1kS5ZBn0%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"69da6502-9cfb-4fe1-79a5-a5939e0356d8","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:57.922Z da713713-811f-459f-973e-c1ec26146737 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=10.png
2023-08-14T16:05:57.922Z da713713-811f-459f-973e-c1ec26146737 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:57.922Z da713713-811f-459f-973e-c1ec26146737 info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 10.png
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 10.png
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: jUXv0qwrB6/7Zf6pFKyb7FtNr3Y+jRvaTod1kS5ZBn0=
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 10.png
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: jUXv0qwrB6/7Zf6pFKyb7FtNr3Y+jRvaTod1kS5ZBn0=
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:56Z","permissions":"rwl","containerName":"oleg","blobName":"10.png","signedResource":"c"}
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:05:56Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 debug: BlobSASAuthenticator:validate() Calculated signature is: jUXv0qwrB6/7Zf6pFKyb7FtNr3Y+jRvaTod1kS5ZBn0=
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"69da6502-9cfb-4fe1-79a5-a5939e0356d8","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2019-07-07"}
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 error: ErrorMiddleware: ErrorName=StorageError ErrorMessage=The specified blob does not exist.  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=The specified blob does not exist. ErrorHTTPHeaders={"x-ms-error-code":"BlobNotFound","x-ms-request-id":"da713713-811f-459f-973e-c1ec26146737"} ErrorHTTPBody="<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>BlobNotFound</Code>\n  <Message>The specified blob does not exist.\nRequestId:da713713-811f-459f-973e-c1ec26146737\nTime:2023-08-14T16:05:57.923Z</Message>\n</Error>" ErrorStack="StorageError: The specified blob does not exist.\n    at StorageErrorFactory.getBlobNotFound (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/errors/StorageErrorFactory.js:29:16)\n    at LokiBlobMetadataStore.getBlobProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/persistence/LokiBlobMetadataStore.js:807:49)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async BlobHandler.getProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/handlers/BlobHandler.js:71:21)"
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 error: ErrorMiddleware: Set HTTP status message: The specified blob does not exist.
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=BlobNotFound
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=da713713-811f-459f-973e-c1ec26146737
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 error: ErrorMiddleware: Set HTTP body: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>BlobNotFound</Code>\n  <Message>The specified blob does not exist.\nRequestId:da713713-811f-459f-973e-c1ec26146737\nTime:2023-08-14T16:05:57.923Z</Message>\n</Error>"
2023-08-14T16:05:57.923Z da713713-811f-459f-973e-c1ec26146737 info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=404 StatusMessage=The specified blob does not exist. Headers={"server":"Azurite-Blob/3.25.1","x-ms-error-code":"BlobNotFound","x-ms-request-id":"da713713-811f-459f-973e-c1ec26146737"}
2023-08-14T16:05:58.014Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 info: BlobStorageContextMiddleware: RequestMethod=PUT RequestURL=http://127.0.0.1/devstoreaccount1/oleg/10.png?se=2023-09-13T16%3A05%3A56Z&sig=jUXv0qwrB6%2F7Zf6pFKyb7FtNr3Y%2BjRvaTod1kS5ZBn0%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","content-length":"1396766","x-ms-blob-cache-control":"","x-ms-blob-content-disposition":"","x-ms-blob-content-encoding":"","x-ms-blob-content-language":"","x-ms-blob-content-md5":"DBkcRvIVD45KGcGPXBYWUA==","x-ms-blob-content-type":"image/png","x-ms-blob-type":"BlockBlob","x-ms-client-request-id":"fe245e77-230c-4f9f-7082-bfac5938a513","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:58.014Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=10.png
2023-08-14T16:05:58.014Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:58.015Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 info: DispatchMiddleware: Operation=BlockBlob_Upload
2023-08-14T16:05:58.015Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:58.015Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:58.015Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:58.015Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 10.png
2023-08-14T16:05:58.015Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:58.015Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:58.015Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:58.015Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:58.015Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:58.016Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 10.png
2023-08-14T16:05:58.016Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:58.016Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: jUXv0qwrB6/7Zf6pFKyb7FtNr3Y+jRvaTod1kS5ZBn0=
2023-08-14T16:05:58.016Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:58.016Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:58.016Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:58.016Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 10.png
2023-08-14T16:05:58.016Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:58.016Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: jUXv0qwrB6/7Zf6pFKyb7FtNr3Y+jRvaTod1kS5ZBn0=
2023-08-14T16:05:58.016Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:58.016Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:56Z","permissions":"rwl","containerName":"oleg","blobName":"10.png","signedResource":"c"}
2023-08-14T16:05:58.016Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:58.016Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:05:56Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:58.016Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: BlobSASAuthenticator:validate() Calculated signature is: jUXv0qwrB6/7Zf6pFKyb7FtNr3Y+jRvaTod1kS5ZBn0=
2023-08-14T16:05:58.016Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:58.016Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:58.016Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:58.016Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:58.016Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: BlobSASAuthenticator:validate() Got permission requirements for operation BlockBlob_Upload - {"permission":"wc"}
2023-08-14T16:05:58.016Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 info: BlobSASAuthenticator:validate() For BlockBlob_Upload, if blob exists, the permission must be Write.
2023-08-14T16:05:58.016Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:58.016Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:58.016Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"metadata":{},"requestId":"fe245e77-230c-4f9f-7082-bfac5938a513","blobHTTPHeaders":{"blobContentType":"image/png","blobContentEncoding":"","blobContentLanguage":"","blobContentMD5":{"type":"Buffer","data":[12,25,28,70,242,21,15,142,74,25,193,143,92,22,22,80]},"blobCacheControl":"","blobContentDisposition":""},"leaseAccessConditions":{},"cpkInfo":{},"cpkScopeInfo":{},"modifiedAccessConditions":{}},"contentLength":1396766,"version":"2019-07-07","blobType":"BlockBlob","body":"ReadableStream"}
2023-08-14T16:05:58.017Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: OperationQueue.operate() Schedule incoming job 21b6d2e1-ad6a-446a-8631-a4eb6a89810d
2023-08-14T16:05:58.017Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: OperationQueue:execute() Current runningConcurrency:0 maxConcurrency:50 operations.length:1
2023-08-14T16:05:58.017Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 info: FSExtentStore:appendExtent() Select extent from idle location for extent append operation. LocationId:1 extentId:758a4fd5-ebda-4237-8492-9a86d9f5cf76 offset:8424292 MAX_EXTENT_SIZE:67108864 
2023-08-14T16:05:58.017Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: FSExtentStore:appendExtent() Get fd:44 for extent:758a4fd5-ebda-4237-8492-9a86d9f5cf76 from cache.
2023-08-14T16:05:58.017Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: FSExtentStore:appendExtent() Created write stream for fd:44
2023-08-14T16:05:58.017Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: FSExtentStore:appendExtent() Start writing to extent 758a4fd5-ebda-4237-8492-9a86d9f5cf76
2023-08-14T16:05:58.017Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: FSExtentStore:streamPipe() Start piping data to write stream
2023-08-14T16:05:58.021Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: FSExtentStore:streamPipe() Readable stream triggers close event, 1396766 bytes piped
2023-08-14T16:05:58.021Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: FSExtentStore:streamPipe() Invoke write stream end()
2023-08-14T16:05:58.021Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: FSExtentStore:streamPipe() Readable stream triggers close event, 1396766 bytes piped
2023-08-14T16:05:58.021Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: FSExtentStore:streamPipe() Writable stream triggers finish event, after 1396766 bytes piped. Flush data to fd:44.
2023-08-14T16:05:58.033Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: FSExtentStore:streamPipe() Flush data to fd:44 successfully. Resolve streamPipe().
2023-08-14T16:05:58.033Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: FSExtentStore:appendExtent() Write finish, start updating extent metadata. extent:{"id":"758a4fd5-ebda-4237-8492-9a86d9f5cf76","locationId":"Default","path":"758a4fd5-ebda-4237-8492-9a86d9f5cf76","size":9821058,"lastModifiedInMS":1692029158033}
2023-08-14T16:05:58.033Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: FSExtentStore:appendExtent() Update extent metadata done. Resolve()
2023-08-14T16:05:58.033Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: OperationQueue.operate() Job 21b6d2e1-ad6a-446a-8631-a4eb6a89810d completes callback, resolve.
2023-08-14T16:05:58.034Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: OperationQueue.operate() Schedule incoming job f0f2adf6-e5e7-4b02-83b3-340c4e86793c
2023-08-14T16:05:58.034Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: OperationQueue:execute() Current runningConcurrency:0 maxConcurrency:100 operations.length:1
2023-08-14T16:05:58.034Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 verbose: FSExtentStore:readExtent() Creating read stream. LocationId:Default extentId:758a4fd5-ebda-4237-8492-9a86d9f5cf76 path:test_files/__blobstorage__/758a4fd5-ebda-4237-8492-9a86d9f5cf76 offset:8424292 count:1396766 end:9821057
2023-08-14T16:05:58.034Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: OperationQueue.operate() Job f0f2adf6-e5e7-4b02-83b3-340c4e86793c completes callback, resolve.
2023-08-14T16:05:58.034Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: OperationQueue:execute() Current runningConcurrency:0 maxConcurrency:50 operations.length:0
2023-08-14T16:05:58.034Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: OperationQueue:execute() return. Operation.length === 0
2023-08-14T16:05:58.034Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: OperationQueue:execute() Current runningConcurrency:0 maxConcurrency:100 operations.length:0
2023-08-14T16:05:58.034Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 debug: OperationQueue:execute() return. Operation.length === 0
2023-08-14T16:05:58.041Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:58.041Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 info: EndMiddleware: End response. TotalTimeInMS=28 StatusCode=201 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","etag":"\"0x1E1B5892BD68F00\"","last-modified":"Mon, 14 Aug 2023 16:05:58 GMT","content-md5":"DBkcRvIVD45KGcGPXBYWUA==","x-ms-client-request-id":"fe245e77-230c-4f9f-7082-bfac5938a513","x-ms-request-id":"aa6e296e-304e-48b5-b9ff-38a5dc1ead89","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:58 GMT","x-ms-request-server-encrypted":"true"}
2023-08-14T16:05:58.042Z aa6e296e-304e-48b5-b9ff-38a5dc1ead89 verbose: FSExtentStore:readExtent() Read stream closed. LocationId:Default extentId:758a4fd5-ebda-4237-8492-9a86d9f5cf76 path:test_files/__blobstorage__/758a4fd5-ebda-4237-8492-9a86d9f5cf76 offset:8424292 count:1396766 end:9821057
2023-08-14T16:05:58.043Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc info: BlobStorageContextMiddleware: RequestMethod=HEAD RequestURL=http://127.0.0.1/devstoreaccount1/oleg/10.png?se=2023-09-13T16%3A05%3A56Z&sig=jUXv0qwrB6%2F7Zf6pFKyb7FtNr3Y%2BjRvaTod1kS5ZBn0%3D&sp=rwl&sr=c&sv=2018-03-28&timeout=901 RequestHeaders:{"host":"127.0.0.1:10000","user-agent":"Microsoft Azure Storage Explorer, 1.31.0, linux, azcopy-node/3.1.0-rc.3 (linux)  AzCopy/10.20.1 Azure-Storage/0.15 (go1.19.12; linux)","x-ms-client-request-id":"90c92d72-1e21-4acf-591e-c85e2bad40c0","x-ms-version":"2019-07-07"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:05:58.043Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=10.png
2023-08-14T16:05:58.043Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:05:58.044Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc info: DispatchMiddleware: Operation=Blob_GetProperties
2023-08-14T16:05:58.044Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:05:58.044Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:05:58.044Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:05:58.044Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 10.png
2023-08-14T16:05:58.044Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:05:58.044Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:05:58.044Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc info: BlobSharedKeyAuthenticator:validate() Request doesn't include valid authentication header. Skip shared key authentication.
2023-08-14T16:05:58.044Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc info: AccountSASAuthenticator:validate() Start validation against account Shared Access Signature pattern.
2023-08-14T16:05:58.044Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc debug: AccountSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:58.044Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc debug: AccountSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 10.png
2023-08-14T16:05:58.044Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc debug: AccountSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:58.044Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc debug: AccountSASAuthenticator:validate() Retrieved signature from URL parameter sig: jUXv0qwrB6/7Zf6pFKyb7FtNr3Y+jRvaTod1kS5ZBn0=
2023-08-14T16:05:58.044Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc info: AccountSASAuthenticator:validate() Failed to get valid account SAS values from request.
2023-08-14T16:05:58.044Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc info: BlobSASAuthenticator:validate() Start validation against blob service Shared Access Signature pattern.
2023-08-14T16:05:58.044Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc debug: BlobSASAuthenticator:validate() Getting account properties...
2023-08-14T16:05:58.044Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc debug: BlobSASAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 10.png
2023-08-14T16:05:58.044Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc debug: BlobSASAuthenticator:validate() Got account properties successfully.
2023-08-14T16:05:58.044Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc debug: BlobSASAuthenticator:validate() Retrieved signature from URL parameter sig: jUXv0qwrB6/7Zf6pFKyb7FtNr3Y+jRvaTod1kS5ZBn0=
2023-08-14T16:05:58.044Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc debug: BlobSASAuthenticator:validate() Signed resource type is c.
2023-08-14T16:05:58.044Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc debug: BlobSASAuthenticator:validate() Successfully got valid blob service SAS values from request. {"version":"2018-03-28","expiryTime":"2023-09-13T16:05:56Z","permissions":"rwl","containerName":"oleg","blobName":"10.png","signedResource":"c"}
2023-08-14T16:05:58.044Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc info: BlobSASAuthenticator:validate() Validate signature based account key1.
2023-08-14T16:05:58.045Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc debug: BlobSASAuthenticator:validate() String to sign is: "rwl\n\n2023-09-13T16:05:56Z\n/blob/devstoreaccount1/oleg\n\n\n\n2018-03-28\n\n\n\n\n"
2023-08-14T16:05:58.045Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc debug: BlobSASAuthenticator:validate() Calculated signature is: jUXv0qwrB6/7Zf6pFKyb7FtNr3Y+jRvaTod1kS5ZBn0=
2023-08-14T16:05:58.045Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc info: BlobSASAuthenticator:validate() Signature based on key1 validation passed.
2023-08-14T16:05:58.045Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc info: BlobSASAuthenticator:validate() Validate start and expiry time.
2023-08-14T16:05:58.045Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc info: BlobSASAuthenticator:validate() Validate IP range.
2023-08-14T16:05:58.045Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc info: BlobSASAuthenticator:validate() Validate request protocol.
2023-08-14T16:05:58.045Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc debug: BlobSASAuthenticator:validate() Got permission requirements for operation Blob_GetProperties - {"permission":"r"}
2023-08-14T16:05:58.045Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc info: BlobSASAuthenticator:validate() Blob service SAS validation successfully.
2023-08-14T16:05:58.045Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:05:58.045Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc info: HandlerMiddleware: DeserializedParameters={"options":{"timeout":901,"requestId":"90c92d72-1e21-4acf-591e-c85e2bad40c0","leaseAccessConditions":{},"cpkInfo":{},"modifiedAccessConditions":{}},"version":"2019-07-07"}
2023-08-14T16:05:58.045Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:05:58.045Z 8524c2bd-87e3-4eab-a31a-c84a35cdd3fc info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","last-modified":"Mon, 14 Aug 2023 16:05:58 GMT","x-ms-creation-time":"Mon, 14 Aug 2023 16:05:58 GMT","x-ms-blob-type":"BlockBlob","x-ms-lease-state":"available","x-ms-lease-status":"unlocked","content-length":"1396766","content-type":"image/png","etag":"\"0x1E1B5892BD68F00\"","content-md5":"DBkcRvIVD45KGcGPXBYWUA==","content-encoding":"","content-disposition":"","content-language":"","cache-control":"","x-ms-client-request-id":"90c92d72-1e21-4acf-591e-c85e2bad40c0","x-ms-request-id":"8524c2bd-87e3-4eab-a31a-c84a35cdd3fc","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:05:58 GMT","accept-ranges":"bytes","x-ms-server-encrypted":"true","x-ms-access-tier":"Hot","x-ms-access-tier-inferred":"true","x-ms-access-tier-change-time":"Mon, 14 Aug 2023 16:05:58 GMT"}
2023-08-14T16:06:01.576Z 3f0b105a-4b03-48b8-8d1f-9774c747e212 info: BlobStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1/oleg?comp=list&maxresults=5000&restype=container&include=metadata&delimiter=%2F RequestHeaders:{"host":"127.0.0.1:10000","connection":"keep-alive","x-ms-version":"2019-07-07","accept":"application/xml","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-storageblob/12.12.0 (NODE-VERSION v18.15.0; Linux 6.2.0-26-generic)","x-ms-client-request-id":"530319f8-65e0-4091-a2b4-a791ce681bc3","x-ms-date":"Mon, 14 Aug 2023 16:06:01 GMT","authorization":"SharedKey devstoreaccount1:f/DJbKDtAbMi22s4ep+FQFTuAdJsJ5s/eTyK32ubsdg=","accept-language":"*","sec-fetch-mode":"cors","accept-encoding":"gzip, deflate"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:06:01.576Z 3f0b105a-4b03-48b8-8d1f-9774c747e212 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=oleg Blob=
2023-08-14T16:06:01.577Z 3f0b105a-4b03-48b8-8d1f-9774c747e212 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:06:01.577Z 3f0b105a-4b03-48b8-8d1f-9774c747e212 info: DispatchMiddleware: Operation=Container_ListBlobHierarchySegment
2023-08-14T16:06:01.577Z 3f0b105a-4b03-48b8-8d1f-9774c747e212 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:06:01.577Z 3f0b105a-4b03-48b8-8d1f-9774c747e212 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:06:01.577Z 3f0b105a-4b03-48b8-8d1f-9774c747e212 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:06:01.577Z 3f0b105a-4b03-48b8-8d1f-9774c747e212 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: oleg, blob: 
2023-08-14T16:06:01.577Z 3f0b105a-4b03-48b8-8d1f-9774c747e212 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container oleg
2023-08-14T16:06:01.577Z 3f0b105a-4b03-48b8-8d1f-9774c747e212 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:06:01.578Z 3f0b105a-4b03-48b8-8d1f-9774c747e212 info: BlobSharedKeyAuthenticator:validate() [STRING TO SIGN]:"GET\n\n\n\n\n\n\n\n\n\n\n\nx-ms-client-request-id:530319f8-65e0-4091-a2b4-a791ce681bc3\nx-ms-date:Mon, 14 Aug 2023 16:06:01 GMT\nx-ms-version:2019-07-07\n/devstoreaccount1/devstoreaccount1/oleg\ncomp:list\ndelimiter:/\ninclude:metadata\nmaxresults:5000\nrestype:container"
2023-08-14T16:06:01.578Z 3f0b105a-4b03-48b8-8d1f-9774c747e212 info: BlobSharedKeyAuthenticator:validate() Calculated authentication header based on key1: SharedKey devstoreaccount1:f/DJbKDtAbMi22s4ep+FQFTuAdJsJ5s/eTyK32ubsdg=
2023-08-14T16:06:01.578Z 3f0b105a-4b03-48b8-8d1f-9774c747e212 info: BlobSharedKeyAuthenticator:validate() Signature 1 matched.
2023-08-14T16:06:01.578Z 3f0b105a-4b03-48b8-8d1f-9774c747e212 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:06:01.578Z 3f0b105a-4b03-48b8-8d1f-9774c747e212 info: HandlerMiddleware: DeserializedParameters={"options":{"maxresults":5000,"include":["metadata"],"requestId":"530319f8-65e0-4091-a2b4-a791ce681bc3"},"delimiter":"/","restype":"container","comp":"list","version":"2019-07-07"}
2023-08-14T16:06:01.578Z 3f0b105a-4b03-48b8-8d1f-9774c747e212 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:06:01.580Z 3f0b105a-4b03-48b8-8d1f-9774c747e212 debug: Serializer: Raw response body string is <?xml version="1.0" encoding="UTF-8" standalone="yes"?><EnumerationResults ServiceEndpoint="http://127.0.0.1:10000/devstoreaccount1" ContainerName="oleg"><Prefix/><Marker/><MaxResults>5000</MaxResults><Delimiter>/</Delimiter><Blobs><Blob><Name>10.png</Name><Properties><Creation-Time>Mon, 14 Aug 2023 16:05:58 GMT</Creation-Time><Last-Modified>Mon, 14 Aug 2023 16:05:58 GMT</Last-Modified><Etag>0x1E1B5892BD68F00</Etag><Content-Length>1396766</Content-Length><Content-Type>image/png</Content-Type><Content-Encoding/><Content-Language/><Content-MD5>DBkcRvIVD45KGcGPXBYWUA==</Content-MD5><Content-Disposition/><Cache-Control/><BlobType>BlockBlob</BlobType><LeaseStatus>unlocked</LeaseStatus><LeaseState>available</LeaseState><ServerEncrypted>true</ServerEncrypted><AccessTier>Hot</AccessTier><AccessTierInferred>true</AccessTierInferred><AccessTierChangeTime>Mon, 14 Aug 2023 16:05:58 GMT</AccessTierChangeTime></Properties></Blob></Blobs><NextMarker/></EnumerationResults>
2023-08-14T16:06:01.580Z 3f0b105a-4b03-48b8-8d1f-9774c747e212 info: Serializer: Start returning stream body.
2023-08-14T16:06:01.580Z 3f0b105a-4b03-48b8-8d1f-9774c747e212 info: EndMiddleware: End response. TotalTimeInMS=4 StatusCode=200 StatusMessage=OK Headers={"server":"Azurite-Blob/3.25.1","content-type":"application/xml","x-ms-client-request-id":"530319f8-65e0-4091-a2b4-a791ce681bc3","x-ms-request-id":"3f0b105a-4b03-48b8-8d1f-9774c747e212","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:06:01 GMT"}
2023-08-14T16:06:34.369Z 	 info: AccountDataStore:init() Refresh accounts from environment variable AZURITE_ACCOUNTS with value undefined
2023-08-14T16:06:34.369Z 	 info: AccountDataStore:init() Fallback to default emulator account devstoreaccount1.
2023-08-14T16:06:34.377Z 	 info: AccountDataStore:init() Refresh accounts from environment variable AZURITE_ACCOUNTS with value undefined
2023-08-14T16:06:34.377Z 	 info: AccountDataStore:init() Fallback to default emulator account devstoreaccount1.
2023-08-14T16:06:34.382Z 	 info: QueueGCManager:markSweepLoop() Start new mark and sweep.
2023-08-14T16:06:34.382Z 	 info: QueueGCManger:markSweep() Get all extents.
2023-08-14T16:06:34.383Z 	 info: QueueGCManager:marksweep() Get 0 extents.
2023-08-14T16:06:34.383Z 	 info: QueueGCManager:markSweep() Get referred extents, then remove from allExtents.
2023-08-14T16:06:34.383Z 	 info: QueueGCManager:markSweep() Got referred extents, unreferenced extents count is 0.
2023-08-14T16:06:34.383Z 	 info: QueueGCManager:markSweepLoop() Mark and sweep finished, take 1ms.
2023-08-14T16:06:34.383Z 	 info: QueueGCManager:markSweepLoop() Sleep for 60000
2023-08-14T16:06:34.383Z 	 info: AccountDataStore:init() Refresh accounts from environment variable AZURITE_ACCOUNTS with value undefined
2023-08-14T16:06:34.383Z 	 info: AccountDataStore:init() Fallback to default emulator account devstoreaccount1.
2023-08-14T16:07:09.536Z 26bebd9f-691b-44b7-8fb7-a301eabe4812 info: BlobStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1?comp=properties&restype=account RequestHeaders:{"host":"127.0.0.1:10000","connection":"keep-alive","x-ms-version":"2019-07-07","accept":"application/xml","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-storageblob/12.12.0 (NODE-VERSION v18.15.0; Linux 6.2.0-26-generic)","x-ms-client-request-id":"d627f899-3fde-4754-b510-b913b1514662","x-ms-date":"Mon, 14 Aug 2023 16:07:09 GMT","authorization":"SharedKey devstoreaccount1:OyH+E8FvnNHi01iMLwq3wqqpMc4SmPmAoXHfRASCr0o=","accept-language":"*","sec-fetch-mode":"cors","accept-encoding":"gzip, deflate"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:07:09.536Z 26bebd9f-691b-44b7-8fb7-a301eabe4812 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=undefined Blob=
2023-08-14T16:07:09.536Z 26bebd9f-691b-44b7-8fb7-a301eabe4812 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:07:09.538Z 26bebd9f-691b-44b7-8fb7-a301eabe4812 info: DispatchMiddleware: Operation=Service_GetAccountInfo
2023-08-14T16:07:09.538Z 26bebd9f-691b-44b7-8fb7-a301eabe4812 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:07:09.538Z 26bebd9f-691b-44b7-8fb7-a301eabe4812 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:07:09.538Z 26bebd9f-691b-44b7-8fb7-a301eabe4812 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:07:09.538Z 26bebd9f-691b-44b7-8fb7-a301eabe4812 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: undefined, blob: 
2023-08-14T16:07:09.538Z 26bebd9f-691b-44b7-8fb7-a301eabe4812 info: PublicAccessAuthenticator:validate() Skip public access authentication. Container name is undefined.
2023-08-14T16:07:09.538Z 26bebd9f-691b-44b7-8fb7-a301eabe4812 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:07:09.538Z 26bebd9f-691b-44b7-8fb7-a301eabe4812 info: BlobSharedKeyAuthenticator:validate() [STRING TO SIGN]:"GET\n\n\n\n\n\n\n\n\n\n\n\nx-ms-client-request-id:d627f899-3fde-4754-b510-b913b1514662\nx-ms-date:Mon, 14 Aug 2023 16:07:09 GMT\nx-ms-version:2019-07-07\n/devstoreaccount1/devstoreaccount1\ncomp:properties\nrestype:account"
2023-08-14T16:07:09.538Z 26bebd9f-691b-44b7-8fb7-a301eabe4812 info: BlobSharedKeyAuthenticator:validate() Calculated authentication header based on key1: SharedKey devstoreaccount1:OyH+E8FvnNHi01iMLwq3wqqpMc4SmPmAoXHfRASCr0o=
2023-08-14T16:07:09.538Z 26bebd9f-691b-44b7-8fb7-a301eabe4812 info: BlobSharedKeyAuthenticator:validate() Signature 1 matched.
2023-08-14T16:07:09.538Z 26bebd9f-691b-44b7-8fb7-a301eabe4812 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:07:09.538Z 26bebd9f-691b-44b7-8fb7-a301eabe4812 info: HandlerMiddleware: DeserializedParameters={"restype":"account","comp":"properties","version":"2019-07-07"}
2023-08-14T16:07:09.538Z 26bebd9f-691b-44b7-8fb7-a301eabe4812 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:07:09.538Z 26bebd9f-691b-44b7-8fb7-a301eabe4812 info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=200 StatusMessage=undefined Headers={"server":"Azurite-Blob/3.25.1","x-ms-client-request-id":"d627f899-3fde-4754-b510-b913b1514662","x-ms-request-id":"26bebd9f-691b-44b7-8fb7-a301eabe4812","x-ms-version":"2023-01-03","date":"Mon, 14 Aug 2023 16:07:09 GMT","x-ms-sku-name":"Standard_RAGRS","x-ms-account-kind":"StorageV2"}
2023-08-14T16:07:09.546Z 4ff93c91-7124-4b0c-9373-f701fc8be193 info: BlobStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1?comp=list&include=metadata RequestHeaders:{"host":"127.0.0.1:10000","connection":"keep-alive","x-ms-version":"2019-07-07","accept":"application/xml","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-storageblob/12.12.0 (NODE-VERSION v18.15.0; Linux 6.2.0-26-generic)","x-ms-client-request-id":"3409aa86-07a3-40dd-bc38-727f586dc779","x-ms-date":"Mon, 14 Aug 2023 16:07:09 GMT","authorization":"SharedKey devstoreaccount1:m/JttyTK/URjPn41BoTmYhBtVrhBxJkl5yheEXHq5ao=","accept-language":"*","sec-fetch-mode":"cors","accept-encoding":"gzip, deflate"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:07:09.546Z 4ff93c91-7124-4b0c-9373-f701fc8be193 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=undefined Blob=
2023-08-14T16:07:09.546Z 4ff93c91-7124-4b0c-9373-f701fc8be193 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:07:09.546Z 4ff93c91-7124-4b0c-9373-f701fc8be193 info: DispatchMiddleware: Operation=Service_ListContainersSegment
2023-08-14T16:07:09.546Z 4ff93c91-7124-4b0c-9373-f701fc8be193 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:07:09.546Z 4ff93c91-7124-4b0c-9373-f701fc8be193 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:07:09.546Z 4ff93c91-7124-4b0c-9373-f701fc8be193 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:07:09.546Z 4ff93c91-7124-4b0c-9373-f701fc8be193 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: undefined, blob: 
2023-08-14T16:07:09.546Z 4ff93c91-7124-4b0c-9373-f701fc8be193 info: PublicAccessAuthenticator:validate() Skip public access authentication. Container name is undefined.
2023-08-14T16:07:09.546Z 4ff93c91-7124-4b0c-9373-f701fc8be193 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:07:09.547Z 4ff93c91-7124-4b0c-9373-f701fc8be193 info: BlobSharedKeyAuthenticator:validate() [STRING TO SIGN]:"GET\n\n\n\n\n\n\n\n\n\n\n\nx-ms-client-request-id:3409aa86-07a3-40dd-bc38-727f586dc779\nx-ms-date:Mon, 14 Aug 2023 16:07:09 GMT\nx-ms-version:2019-07-07\n/devstoreaccount1/devstoreaccount1\ncomp:list\ninclude:metadata"
2023-08-14T16:07:09.547Z 4ff93c91-7124-4b0c-9373-f701fc8be193 info: BlobSharedKeyAuthenticator:validate() Calculated authentication header based on key1: SharedKey devstoreaccount1:m/JttyTK/URjPn41BoTmYhBtVrhBxJkl5yheEXHq5ao=
2023-08-14T16:07:09.547Z 4ff93c91-7124-4b0c-9373-f701fc8be193 info: BlobSharedKeyAuthenticator:validate() Signature 1 matched.
2023-08-14T16:07:09.547Z 4ff93c91-7124-4b0c-9373-f701fc8be193 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:07:09.547Z 4ff93c91-7124-4b0c-9373-f701fc8be193 info: HandlerMiddleware: DeserializedParameters={"options":{"include":["metadata"],"requestId":"3409aa86-07a3-40dd-bc38-727f586dc779"},"comp":"list","version":"2019-07-07"}
2023-08-14T16:07:09.547Z 4ff93c91-7124-4b0c-9373-f701fc8be193 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:07:09.548Z 4ff93c91-7124-4b0c-9373-f701fc8be193 debug: Serializer: Raw response body string is <?xml version="1.0" encoding="UTF-8" standalone="yes"?><EnumerationResults ServiceEndpoint="http://127.0.0.1:10000/devstoreaccount1"><Prefix/><MaxResults>5000</MaxResults><Containers><Container><Name>oleg</Name><Properties><Last-Modified>Mon, 14 Aug 2023 16:04:33 GMT</Last-Modified><Etag>"0x23C99919F640B40"</Etag><LeaseStatus>unlocked</LeaseStatus><LeaseState>available</LeaseState><HasImmutabilityPolicy>false</HasImmutabilityPolicy><HasLegalHold>false</HasLegalHold></Properties></Container></Containers><NextMarker/></EnumerationResults>
2023-08-14T16:07:09.548Z 4ff93c91-7124-4b0c-9373-f701fc8be193 info: Serializer: Start returning stream body.
2023-08-14T16:07:09.548Z 4ff93c91-7124-4b0c-9373-f701fc8be193 info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=200 StatusMessage=OK Headers={"server":"Azurite-Blob/3.25.1","x-ms-client-request-id":"3409aa86-07a3-40dd-bc38-727f586dc779","x-ms-request-id":"4ff93c91-7124-4b0c-9373-f701fc8be193","x-ms-version":"2023-01-03","content-type":"application/xml"}
2023-08-14T16:07:09.549Z 03b9ef3b-c6e0-48b3-8ad1-7f3fc8f2a9e5 info: BlobStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1?comp=list&include=metadata&timeout=30 RequestHeaders:{"host":"127.0.0.1:10000","connection":"keep-alive","x-ms-version":"2019-07-07","accept":"application/xml","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-storagequeue/12.6.0 (NODE-VERSION v18.15.0; Linux 6.2.0-26-generic)","x-ms-client-request-id":"f1155be8-6908-4e0a-9060-143471e23b7e","x-ms-date":"Mon, 14 Aug 2023 16:07:09 GMT","authorization":"SharedKey devstoreaccount1:dUzkuME6siaCOljkNaERvUxfotPdccbSnlLPUQ47bsM=","accept-language":"*","sec-fetch-mode":"cors","accept-encoding":"gzip, deflate"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:07:09.549Z 03b9ef3b-c6e0-48b3-8ad1-7f3fc8f2a9e5 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=undefined Blob=
2023-08-14T16:07:09.550Z 03b9ef3b-c6e0-48b3-8ad1-7f3fc8f2a9e5 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:07:09.550Z 03b9ef3b-c6e0-48b3-8ad1-7f3fc8f2a9e5 info: DispatchMiddleware: Operation=Service_ListContainersSegment
2023-08-14T16:07:09.550Z 03b9ef3b-c6e0-48b3-8ad1-7f3fc8f2a9e5 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:07:09.550Z 03b9ef3b-c6e0-48b3-8ad1-7f3fc8f2a9e5 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:07:09.550Z 03b9ef3b-c6e0-48b3-8ad1-7f3fc8f2a9e5 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:07:09.550Z 03b9ef3b-c6e0-48b3-8ad1-7f3fc8f2a9e5 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: undefined, blob: 
2023-08-14T16:07:09.550Z 03b9ef3b-c6e0-48b3-8ad1-7f3fc8f2a9e5 info: PublicAccessAuthenticator:validate() Skip public access authentication. Container name is undefined.
2023-08-14T16:07:09.550Z 03b9ef3b-c6e0-48b3-8ad1-7f3fc8f2a9e5 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:07:09.550Z 03b9ef3b-c6e0-48b3-8ad1-7f3fc8f2a9e5 info: BlobSharedKeyAuthenticator:validate() [STRING TO SIGN]:"GET\n\n\n\n\n\n\n\n\n\n\n\nx-ms-client-request-id:f1155be8-6908-4e0a-9060-143471e23b7e\nx-ms-date:Mon, 14 Aug 2023 16:07:09 GMT\nx-ms-version:2019-07-07\n/devstoreaccount1/devstoreaccount1\ncomp:list\ninclude:metadata\ntimeout:30"
2023-08-14T16:07:09.550Z 03b9ef3b-c6e0-48b3-8ad1-7f3fc8f2a9e5 info: BlobSharedKeyAuthenticator:validate() Calculated authentication header based on key1: SharedKey devstoreaccount1:dUzkuME6siaCOljkNaERvUxfotPdccbSnlLPUQ47bsM=
2023-08-14T16:07:09.550Z 03b9ef3b-c6e0-48b3-8ad1-7f3fc8f2a9e5 info: BlobSharedKeyAuthenticator:validate() Signature 1 matched.
2023-08-14T16:07:09.550Z 03b9ef3b-c6e0-48b3-8ad1-7f3fc8f2a9e5 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:07:09.550Z 03b9ef3b-c6e0-48b3-8ad1-7f3fc8f2a9e5 info: HandlerMiddleware: DeserializedParameters={"options":{"include":["metadata"],"timeout":30,"requestId":"f1155be8-6908-4e0a-9060-143471e23b7e"},"comp":"list","version":"2019-07-07"}
2023-08-14T16:07:09.550Z 03b9ef3b-c6e0-48b3-8ad1-7f3fc8f2a9e5 verbose: SerializerMiddleware: Start serializing...
2023-08-14T16:07:09.551Z 03b9ef3b-c6e0-48b3-8ad1-7f3fc8f2a9e5 debug: Serializer: Raw response body string is <?xml version="1.0" encoding="UTF-8" standalone="yes"?><EnumerationResults ServiceEndpoint="http://127.0.0.1:10000/devstoreaccount1"><Prefix/><MaxResults>5000</MaxResults><Containers><Container><Name>oleg</Name><Properties><Last-Modified>Mon, 14 Aug 2023 16:04:33 GMT</Last-Modified><Etag>"0x23C99919F640B40"</Etag><LeaseStatus>unlocked</LeaseStatus><LeaseState>available</LeaseState><HasImmutabilityPolicy>false</HasImmutabilityPolicy><HasLegalHold>false</HasLegalHold></Properties></Container></Containers><NextMarker/></EnumerationResults>
2023-08-14T16:07:09.551Z 03b9ef3b-c6e0-48b3-8ad1-7f3fc8f2a9e5 info: Serializer: Start returning stream body.
2023-08-14T16:07:09.551Z 03b9ef3b-c6e0-48b3-8ad1-7f3fc8f2a9e5 info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=200 StatusMessage=OK Headers={"server":"Azurite-Blob/3.25.1","x-ms-client-request-id":"f1155be8-6908-4e0a-9060-143471e23b7e","x-ms-request-id":"03b9ef3b-c6e0-48b3-8ad1-7f3fc8f2a9e5","x-ms-version":"2023-01-03","content-type":"application/xml"}
2023-08-14T16:07:09.556Z 9d510d99-8ae6-41f5-83e6-efc22b286b54 info: BlobStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1/%24logs?restype=container RequestHeaders:{"host":"127.0.0.1:10000","connection":"keep-alive","x-ms-version":"2019-07-07","accept":"application/xml","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-storageblob/12.12.0 (NODE-VERSION v18.15.0; Linux 6.2.0-26-generic)","x-ms-client-request-id":"97bd5cb5-502a-4dea-8e56-4a748bc18b65","x-ms-date":"Mon, 14 Aug 2023 16:07:09 GMT","authorization":"SharedKey devstoreaccount1:O52GBNHiCaBk0/Vi6ulfZa1Xqvkf9E/+7hhvZMPKpn4=","accept-language":"*","sec-fetch-mode":"cors","accept-encoding":"gzip, deflate"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:07:09.556Z 9d510d99-8ae6-41f5-83e6-efc22b286b54 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=$logs Blob=
2023-08-14T16:07:09.556Z 9d510d99-8ae6-41f5-83e6-efc22b286b54 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:07:09.556Z 9d510d99-8ae6-41f5-83e6-efc22b286b54 info: DispatchMiddleware: Operation=Container_GetProperties
2023-08-14T16:07:09.556Z 9d510d99-8ae6-41f5-83e6-efc22b286b54 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:07:09.556Z 9d510d99-8ae6-41f5-83e6-efc22b286b54 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:07:09.556Z 9d510d99-8ae6-41f5-83e6-efc22b286b54 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:07:09.556Z 9d510d99-8ae6-41f5-83e6-efc22b286b54 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: $logs, blob: 
2023-08-14T16:07:09.556Z 9d510d99-8ae6-41f5-83e6-efc22b286b54 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container $logs
2023-08-14T16:07:09.556Z 9d510d99-8ae6-41f5-83e6-efc22b286b54 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:07:09.556Z 9d510d99-8ae6-41f5-83e6-efc22b286b54 info: BlobSharedKeyAuthenticator:validate() [STRING TO SIGN]:"GET\n\n\n\n\n\n\n\n\n\n\n\nx-ms-client-request-id:97bd5cb5-502a-4dea-8e56-4a748bc18b65\nx-ms-date:Mon, 14 Aug 2023 16:07:09 GMT\nx-ms-version:2019-07-07\n/devstoreaccount1/devstoreaccount1/%24logs\nrestype:container"
2023-08-14T16:07:09.556Z 9d510d99-8ae6-41f5-83e6-efc22b286b54 info: BlobSharedKeyAuthenticator:validate() Calculated authentication header based on key1: SharedKey devstoreaccount1:O52GBNHiCaBk0/Vi6ulfZa1Xqvkf9E/+7hhvZMPKpn4=
2023-08-14T16:07:09.556Z 9d510d99-8ae6-41f5-83e6-efc22b286b54 info: BlobSharedKeyAuthenticator:validate() Signature 1 matched.
2023-08-14T16:07:09.556Z 9d510d99-8ae6-41f5-83e6-efc22b286b54 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:07:09.557Z 9d510d99-8ae6-41f5-83e6-efc22b286b54 info: HandlerMiddleware: DeserializedParameters={"options":{"requestId":"97bd5cb5-502a-4dea-8e56-4a748bc18b65","leaseAccessConditions":{}},"restype":"container","version":"2019-07-07"}
2023-08-14T16:07:09.557Z 9d510d99-8ae6-41f5-83e6-efc22b286b54 error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:07:09.557Z 9d510d99-8ae6-41f5-83e6-efc22b286b54 error: ErrorMiddleware: ErrorName=StorageError ErrorMessage=The specified container does not exist.  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=The specified container does not exist. ErrorHTTPHeaders={"x-ms-error-code":"ContainerNotFound","x-ms-request-id":"9d510d99-8ae6-41f5-83e6-efc22b286b54"} ErrorHTTPBody="<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>ContainerNotFound</Code>\n  <Message>The specified container does not exist.\nRequestId:9d510d99-8ae6-41f5-83e6-efc22b286b54\nTime:2023-08-14T16:07:09.557Z</Message>\n</Error>" ErrorStack="StorageError: The specified container does not exist.\n    at StorageErrorFactory.getContainerNotFound (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/errors/StorageErrorFactory.js:14:16)\n    at LokiBlobMetadataStore.getContainerWithLeaseUpdated (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/persistence/LokiBlobMetadataStore.js:1964:53)\n    at LokiBlobMetadataStore.getContainerProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/persistence/LokiBlobMetadataStore.js:309:32)\n    at ContainerHandler.getProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/handlers/ContainerHandler.js:79:62)\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/generated/middleware/HandlerMiddlewareFactory.js:58:18\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/generated/ExpressMiddlewareFactory.js:78:63\n    at Layer.handle [as handle_request] (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:328:13)\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:346:12)"
2023-08-14T16:07:09.557Z 9d510d99-8ae6-41f5-83e6-efc22b286b54 error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:07:09.557Z 9d510d99-8ae6-41f5-83e6-efc22b286b54 error: ErrorMiddleware: Set HTTP status message: The specified container does not exist.
2023-08-14T16:07:09.557Z 9d510d99-8ae6-41f5-83e6-efc22b286b54 error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=ContainerNotFound
2023-08-14T16:07:09.557Z 9d510d99-8ae6-41f5-83e6-efc22b286b54 error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=9d510d99-8ae6-41f5-83e6-efc22b286b54
2023-08-14T16:07:09.557Z 9d510d99-8ae6-41f5-83e6-efc22b286b54 error: ErrorMiddleware: Set content type: application/xml
2023-08-14T16:07:09.557Z 9d510d99-8ae6-41f5-83e6-efc22b286b54 error: ErrorMiddleware: Set HTTP body: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>ContainerNotFound</Code>\n  <Message>The specified container does not exist.\nRequestId:9d510d99-8ae6-41f5-83e6-efc22b286b54\nTime:2023-08-14T16:07:09.557Z</Message>\n</Error>"
2023-08-14T16:07:09.557Z 9d510d99-8ae6-41f5-83e6-efc22b286b54 info: EndMiddleware: End response. TotalTimeInMS=1 StatusCode=404 StatusMessage=The specified container does not exist. Headers={"server":"Azurite-Blob/3.25.1","x-ms-error-code":"ContainerNotFound","x-ms-request-id":"9d510d99-8ae6-41f5-83e6-efc22b286b54","content-type":"application/xml"}
2023-08-14T16:07:09.557Z 3d29f8eb-e8f2-4767-8d74-776cb2873710 info: BlobStorageContextMiddleware: RequestMethod=GET RequestURL=http://127.0.0.1/devstoreaccount1/%24blobchangefeed?restype=container RequestHeaders:{"host":"127.0.0.1:10000","connection":"keep-alive","x-ms-version":"2019-07-07","accept":"application/xml","user-agent":"Microsoft Azure Storage Explorer/1.31.0 (linux) azsdk-js-storageblob/12.12.0 (NODE-VERSION v18.15.0; Linux 6.2.0-26-generic)","x-ms-client-request-id":"92ef4140-df8e-4760-bd9e-56b5d8ee1f23","x-ms-date":"Mon, 14 Aug 2023 16:07:09 GMT","authorization":"SharedKey devstoreaccount1:GHQ2T2xno9nF4Wi7SS4n8CqLOeIWEzRqlQOy/XaGYmY=","accept-language":"*","sec-fetch-mode":"cors","accept-encoding":"gzip, deflate"} ClientIP=127.0.0.1 Protocol=http HTTPVersion=1.1
2023-08-14T16:07:09.557Z 3d29f8eb-e8f2-4767-8d74-776cb2873710 info: BlobStorageContextMiddleware: Account=devstoreaccount1 Container=$blobchangefeed Blob=
2023-08-14T16:07:09.557Z 3d29f8eb-e8f2-4767-8d74-776cb2873710 verbose: DispatchMiddleware: Dispatching request...
2023-08-14T16:07:09.558Z 3d29f8eb-e8f2-4767-8d74-776cb2873710 info: DispatchMiddleware: Operation=Container_GetProperties
2023-08-14T16:07:09.558Z 3d29f8eb-e8f2-4767-8d74-776cb2873710 verbose: AuthenticationMiddlewareFactory:createAuthenticationMiddleware() Validating authentications.
2023-08-14T16:07:09.558Z 3d29f8eb-e8f2-4767-8d74-776cb2873710 info: PublicAccessAuthenticator:validate() Start validation against public access.
2023-08-14T16:07:09.558Z 3d29f8eb-e8f2-4767-8d74-776cb2873710 debug: PublicAccessAuthenticator:validate() Getting account properties...
2023-08-14T16:07:09.558Z 3d29f8eb-e8f2-4767-8d74-776cb2873710 debug: PublicAccessAuthenticator:validate() Retrieved account name from context: devstoreaccount1, container: $blobchangefeed, blob: 
2023-08-14T16:07:09.558Z 3d29f8eb-e8f2-4767-8d74-776cb2873710 debug: PublicAccessAuthenticator:validate() Skip public access authentication. Cannot get public access type for container $blobchangefeed
2023-08-14T16:07:09.558Z 3d29f8eb-e8f2-4767-8d74-776cb2873710 info: BlobSharedKeyAuthenticator:validate() Start validation against account shared key authentication.
2023-08-14T16:07:09.558Z 3d29f8eb-e8f2-4767-8d74-776cb2873710 info: BlobSharedKeyAuthenticator:validate() [STRING TO SIGN]:"GET\n\n\n\n\n\n\n\n\n\n\n\nx-ms-client-request-id:92ef4140-df8e-4760-bd9e-56b5d8ee1f23\nx-ms-date:Mon, 14 Aug 2023 16:07:09 GMT\nx-ms-version:2019-07-07\n/devstoreaccount1/devstoreaccount1/%24blobchangefeed\nrestype:container"
2023-08-14T16:07:09.558Z 3d29f8eb-e8f2-4767-8d74-776cb2873710 info: BlobSharedKeyAuthenticator:validate() Calculated authentication header based on key1: SharedKey devstoreaccount1:GHQ2T2xno9nF4Wi7SS4n8CqLOeIWEzRqlQOy/XaGYmY=
2023-08-14T16:07:09.558Z 3d29f8eb-e8f2-4767-8d74-776cb2873710 info: BlobSharedKeyAuthenticator:validate() Signature 1 matched.
2023-08-14T16:07:09.558Z 3d29f8eb-e8f2-4767-8d74-776cb2873710 verbose: DeserializerMiddleware: Start deserializing...
2023-08-14T16:07:09.558Z 3d29f8eb-e8f2-4767-8d74-776cb2873710 info: HandlerMiddleware: DeserializedParameters={"options":{"requestId":"92ef4140-df8e-4760-bd9e-56b5d8ee1f23","leaseAccessConditions":{}},"restype":"container","version":"2019-07-07"}
2023-08-14T16:07:09.558Z 3d29f8eb-e8f2-4767-8d74-776cb2873710 error: ErrorMiddleware: Received a MiddlewareError, fill error information to HTTP response
2023-08-14T16:07:09.558Z 3d29f8eb-e8f2-4767-8d74-776cb2873710 error: ErrorMiddleware: ErrorName=StorageError ErrorMessage=The specified container does not exist.  ErrorHTTPStatusCode=404 ErrorHTTPStatusMessage=The specified container does not exist. ErrorHTTPHeaders={"x-ms-error-code":"ContainerNotFound","x-ms-request-id":"3d29f8eb-e8f2-4767-8d74-776cb2873710"} ErrorHTTPBody="<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>ContainerNotFound</Code>\n  <Message>The specified container does not exist.\nRequestId:3d29f8eb-e8f2-4767-8d74-776cb2873710\nTime:2023-08-14T16:07:09.558Z</Message>\n</Error>" ErrorStack="StorageError: The specified container does not exist.\n    at StorageErrorFactory.getContainerNotFound (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/errors/StorageErrorFactory.js:14:16)\n    at LokiBlobMetadataStore.getContainerWithLeaseUpdated (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/persistence/LokiBlobMetadataStore.js:1964:53)\n    at LokiBlobMetadataStore.getContainerProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/persistence/LokiBlobMetadataStore.js:309:32)\n    at ContainerHandler.getProperties (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/handlers/ContainerHandler.js:79:62)\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/generated/middleware/HandlerMiddlewareFactory.js:58:18\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/dist/src/blob/generated/ExpressMiddlewareFactory.js:78:63\n    at Layer.handle [as handle_request] (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:328:13)\n    at /home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/finn/.asdf/installs/nodejs/20.5.1/lib/node_modules/azurite/node_modules/express/lib/router/index.js:346:12)"
2023-08-14T16:07:09.558Z 3d29f8eb-e8f2-4767-8d74-776cb2873710 error: ErrorMiddleware: Set HTTP code: 404
2023-08-14T16:07:09.559Z 3d29f8eb-e8f2-4767-8d74-776cb2873710 error: ErrorMiddleware: Set HTTP status message: The specified container does not exist.
2023-08-14T16:07:09.559Z 3d29f8eb-e8f2-4767-8d74-776cb2873710 error: ErrorMiddleware: Set HTTP Header: x-ms-error-code=ContainerNotFound
2023-08-14T16:07:09.559Z 3d29f8eb-e8f2-4767-8d74-776cb2873710 error: ErrorMiddleware: Set HTTP Header: x-ms-request-id=3d29f8eb-e8f2-4767-8d74-776cb2873710
2023-08-14T16:07:09.559Z 3d29f8eb-e8f2-4767-8d74-776cb2873710 error: ErrorMiddleware: Set content type: application/xml
2023-08-14T16:07:09.559Z 3d29f8eb-e8f2-4767-8d74-776cb2873710 error: ErrorMiddleware: Set HTTP body: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Error>\n  <Code>ContainerNotFound</Code>\n  <Message>The specified container does not exist.\nRequestId:3d29f8eb-e8f2-4767-8d74-776cb2873710\nTime:2023-08-14T16:07:09.558Z</Message>\n</Error>"
2023-08-14T16:07:09.559Z 3d29f8eb-e8f2-4767-8d74-776cb2873710 info: EndMiddleware: End response. TotalTimeInMS=2 StatusCode=404 StatusMessage=The specified container does not exist. Headers={"server":"Azurite-Blob/3.25.1","x-ms-error-code":"ContainerNotFound","x-ms-request-id":"3d29f8eb-e8f2-4767-8d74-776cb2873710","content-type":"application/xml"}
2023-08-14T16:07:34.373Z 	 info: AccountDataStore:init() Refresh accounts from environment variable AZURITE_ACCOUNTS with value undefined
2023-08-14T16:07:34.374Z 	 info: AccountDataStore:init() Fallback to default emulator account devstoreaccount1.
2023-08-14T16:07:34.377Z 	 info: AccountDataStore:init() Refresh accounts from environment variable AZURITE_ACCOUNTS with value undefined
2023-08-14T16:07:34.377Z 	 info: AccountDataStore:init() Fallback to default emulator account devstoreaccount1.
2023-08-14T16:07:34.383Z 	 info: QueueGCManager:markSweepLoop() Start new mark and sweep.
2023-08-14T16:07:34.383Z 	 info: QueueGCManger:markSweep() Get all extents.
2023-08-14T16:07:34.383Z 	 info: QueueGCManager:marksweep() Get 0 extents.
2023-08-14T16:07:34.383Z 	 info: QueueGCManager:markSweep() Get referred extents, then remove from allExtents.
2023-08-14T16:07:34.383Z 	 info: QueueGCManager:markSweep() Got referred extents, unreferenced extents count is 0.
2023-08-14T16:07:34.383Z 	 info: QueueGCManager:markSweepLoop() Mark and sweep finished, take 0ms.
2023-08-14T16:07:34.383Z 	 info: QueueGCManager:markSweepLoop() Sleep for 60000
2023-08-14T16:07:34.383Z 	 info: AccountDataStore:init() Refresh accounts from environment variable AZURITE_ACCOUNTS with value undefined
2023-08-14T16:07:34.383Z 	 info: AccountDataStore:init() Fallback to default emulator account devstoreaccount1.
2023-08-14T16:08:19.118Z 	 info: Azurite Blob service is closing...
2023-08-14T16:08:19.118Z 	 info: Azurite Queue service is closing...
2023-08-14T16:08:19.118Z 	 info: Azurite Table service is closing...
2023-08-14T16:08:19.119Z 	 info: BlobGCManager:close() Start closing BlobGCManager. Set status to Closing.
2023-08-14T16:08:19.119Z 	 info: QueueGCManager:close() Start closing QueueGCManager, set status to Closing.
2023-08-14T16:08:19.120Z 	 info: BlobGCManager:start() Mark and sweep loop is closed.
2023-08-14T16:08:19.120Z 	 info: BlobGCManager:close() BlobGCManager successfully closed. Set status to Closed.
2023-08-14T16:08:19.120Z 	 info: QueueGCManager:start() Mark and sweep loop is closed.
2023-08-14T16:08:19.120Z 	 info: QueueGCManager:close() QueueGCManager successfully closed, set status to Closed.
2023-08-14T16:08:19.120Z 	 info: Azurite Table service successfully closed
2023-08-14T16:08:19.120Z 	 info: Azurite Blob service successfully closed
2023-08-14T16:08:19.120Z 	 info: Azurite Queue service successfully closed
